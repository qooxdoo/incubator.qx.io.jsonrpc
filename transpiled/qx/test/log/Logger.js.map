{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/log/Logger.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "statics",
    "TEST_CONSTANT",
    "members",
    "setUp",
    "__initialLogLevel",
    "log",
    "Logger",
    "getLevel",
    "tearDown",
    "setLevel",
    "__testLogException",
    "exception",
    "appender",
    "RingBuffer",
    "clear",
    "register",
    "debug",
    "events",
    "getAllLogEvents",
    "assertEquals",
    "length",
    "core",
    "Environment",
    "get",
    "Error",
    "assert",
    "items",
    "trace",
    "unregister",
    "testLogException",
    "newException",
    "testLogDOMException",
    "newDOMException",
    "testKonstantDeprecation",
    "deprecatedConstantWarning",
    "test",
    "testContextObject",
    "Object",
    "implement",
    "IDisposable",
    "obj",
    "dispObj",
    "DisposableObject",
    "qxWeb",
    "clazz",
    "toHashCode",
    "object",
    "dispose",
    "undefine",
    "exc",
    "e",
    "document",
    "body",
    "appendChild"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.log.Logger\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  statics : {\n    TEST_CONSTANT: \"abc\"\n  },\n\n  members :\n  {\n    setUp : function()\n    {\n      this.__initialLogLevel = qx.log.Logger.getLevel();\n    },\n\n    tearDown : function()\n    {\n      qx.log.Logger.setLevel(this.__initialLogLevel);\n    },\n\n    __testLogException : function(exception)\n    {\n      var appender = new qx.log.appender.RingBuffer();\n\n      qx.log.Logger.setLevel(\"debug\");\n      qx.log.Logger.clear();\n      qx.log.Logger.register(appender);\n\n      qx.log.Logger.debug(exception);\n\n      var events = appender.getAllLogEvents();\n      this.assertEquals(1, events.length);\n\n      if (qx.core.Environment.get(\"ecmascript.error.stacktrace\")) {\n        if (exception instanceof Error || qx.core.Environment.get(\"engine.name\") !== \"gecko\") {\n          this.assert(events[0].items[0].trace.length > 0);\n        }\n      }\n\n      qx.log.Logger.unregister(appender);\n    },\n\n    testLogException : function()\n    {\n      var exception = this.newException();\n      this.__testLogException(exception);\n    },\n\n    testLogDOMException : function()\n    {\n      var exception = this.newDOMException();\n      this.__testLogException(exception);\n    },\n\n\n    testKonstantDeprecation : function()\n    {\n      // call the method to see if its not throwing an error\n      qx.log.Logger.deprecatedConstantWarning(\n        qx.test.log.Logger, \"TEST_CONSTANT\"\n      );\n\n      this.assertEquals(\"abc\", qx.test.log.Logger.TEST_CONSTANT);\n    },\n\n\n    /**\n     * @ignore(test.DisposableObject)\n     */\n    testContextObject : function() {\n      var appender = new qx.log.appender.RingBuffer();\n\n      qx.log.Logger.setLevel(\"debug\");\n      qx.log.Logger.clear();\n      qx.log.Logger.register(appender);\n\n      qx.Class.define(\"test.DisposableObject\", {\n        extend: qx.core.Object,\n        implement: qx.core.IDisposable\n      });\n\n      var obj = new qx.core.Object();\n      var dispObj = new test.DisposableObject();\n      qx.log.Logger.debug(qx.core.Object, \"m1\");\n      qx.log.Logger.debug(obj, \"m2\");\n      qx.log.Logger.debug(qxWeb(), \"m3\");\n      qx.log.Logger.debug(dispObj, \"m4\");\n\n\n      var events = appender.getAllLogEvents();\n      this.assertEquals(qx.core.Object, events[0].clazz);\n      this.assertEquals(qx.core.Object, events[1].clazz);\n      this.assertEquals(qxWeb, events[2].clazz);\n      this.assertEquals(dispObj.toHashCode(), events[3].object);\n\n      qx.log.Logger.unregister(appender);\n      dispObj.dispose();\n      qx.Class.undefine(\"test.DisposableObject\");\n    },\n\n\n    newException : function()\n    {\n      var exc;\n      try {\n        throw new Error();\n      } catch (e) {\n        exc = e;\n      }\n      return exc;\n    },\n\n    newDOMException : function()\n    {\n      var exc;\n      try {\n        document.body.appendChild(null);\n      } catch (e) {\n        exc = e;\n      }\n      return exc;\n    }\n  }\n});\n"
  ]
}