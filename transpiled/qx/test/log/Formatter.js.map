{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/log/Formatter.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testToTextWithObject",
    "time",
    "Date",
    "obj",
    "core",
    "Object",
    "ObjectRegistry",
    "register",
    "entry",
    "offset",
    "level",
    "items",
    "win",
    "window",
    "object",
    "$$hash",
    "formatter",
    "log",
    "appender",
    "Formatter",
    "getFormatter",
    "text",
    "toText",
    "assertEquals",
    "dispose",
    "testToTextAsDate",
    "set",
    "formatTimeAs",
    "testToTextWithClass",
    "clazz",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n * Fabian Jakobs (fjakobs)\n\n ************************************************************************ */\n\nqx.Class.define(\"qx.test.log.Formatter\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    testToTextWithObject: function() {\n      var time = new Date(1000);\n      var obj = new qx.core.Object();\n      qx.core.ObjectRegistry.register(obj);\n      var entry = {\n        time: time,\n        offset: 900,\n        level: \"warn\",\n        items: [],\n        win: window,\n        object: obj.$$hash\n      };\n\n      var formatter = qx.log.appender.Formatter.getFormatter();\n      var text = formatter.toText(entry);\n      this.assertEquals(\"000900 qx.core.Object[\" + obj.$$hash + \"]:\", text);\n      obj.dispose();\n    },\n\n    testToTextAsDate: function() {\n      var time = new Date(2019, 9, 10, 1, 2, 3);\n      var obj = new qx.core.Object();\n      qx.core.ObjectRegistry.register(obj);\n      var entry = {\n        time: time,\n        offset: 900,\n        level: \"warn\",\n        items: [],\n        win: window,\n        object: obj.$$hash\n      };\n\n      var formatter = new qx.log.appender.Formatter().set({ formatTimeAs: \"datetime\" });\n      var text = formatter.toText(entry);\n      this.assertEquals(\"2019-10-10 01:02:03 qx.core.Object[\" + obj.$$hash + \"]:\", text);\n      obj.dispose();\n    },\n\n    testToTextWithClass: function() {\n      var time = new Date(1000);\n      var entry = {\n        time: time,\n        offset: 900,\n        level: \"warn\",\n        items: [],\n        win: window,\n        clazz: qx.core.Object\n      };\n\n      var formatter = qx.log.appender.Formatter.getFormatter();\n      var text = formatter.toText(entry);\n      this.assertEquals(\"000900 qx.core.Object:\", text);\n    }\n\n  }\n});"
  ]
}