{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/log/Filters.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testFilters",
    "log",
    "appender",
    "Native",
    "Logger",
    "statics",
    "count",
    "process",
    "entry",
    "args",
    "Util",
    "toText",
    "console",
    "level",
    "call",
    "addFilter",
    "TestLogger",
    "my",
    "register",
    "trace",
    "debug",
    "warn",
    "error",
    "info",
    "core",
    "Assert",
    "assertEquals",
    "unregister",
    "resetFilters",
    "test",
    "Filters"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AAGAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qBAAhB,EAAuC;AACrCC,IAAAA,MAAM,EAAEN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADiB;AAGrCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,uBAAW;AACtBX,QAAAA,EAAE,CAACY,GAAH,CAAOC,QAAP,CAAgBC,MAAhB;AAEA,YAAIC,MAAM,GAAGf,EAAE,CAACY,GAAH,CAAOG,MAApB;AACAf,QAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,eAAhB,EAAiC;AAC/BW,UAAAA,OAAO,EAAE;AACPC,YAAAA,KAAK,EAAE,CADA;AAEPC,YAAAA,OAAO,EAAE,iBAASC,KAAT,EAAgB;AACvB,mBAAKF,KAAL;AACA,kBAAIG,IAAI,GAAGpB,EAAE,CAACY,GAAH,CAAOC,QAAP,CAAgBQ,IAAhB,CAAqBC,MAArB,CAA4BH,KAA5B,CAAX;AACA,eAACI,OAAO,CAACJ,KAAK,CAACK,KAAP,CAAP,IAAwBD,OAAO,CAACX,GAAjC,EAAsCa,IAAtC,CAA2CF,OAA3C,EAAoD,iBAAiBH,IAArE;AACD;AANM;AADsB,SAAjC;AAWAL,QAAAA,MAAM,CAACW,SAAP,CAAiB,QAAjB,EAA2B,wBAA3B;AACAX,QAAAA,MAAM,CAACW,SAAP,CAAiB,aAAjB,EAAgC,eAAhC,EAAiD,MAAjD;AAEA,YAAIC,UAAU,GAAGC,EAAE,CAACD,UAApB;AACA3B,QAAAA,EAAE,CAACY,GAAH,CAAOG,MAAP,CAAcc,QAAd,CAAuBF,UAAvB;AAEAA,QAAAA,UAAU,CAACV,KAAX,GAAmB,CAAnB;AAEA,aAAKa,KAAL,CAAW,YAAX;AACA,aAAKC,KAAL,CAAW,YAAX;AACA,aAAKC,IAAL,CAAU,WAAV;AACA,aAAKC,KAAL,CAAW,YAAX;AACA,aAAKC,IAAL,CAAU,WAAV;AAEAnB,QAAAA,MAAM,CAACe,KAAP,CAAa,YAAb,EAA2B,YAA3B;AACAf,QAAAA,MAAM,CAACgB,KAAP,CAAa,YAAb,EAA2B,YAA3B;AACAhB,QAAAA,MAAM,CAACmB,IAAP,CAAY,YAAZ,EAA0B,WAA1B;AACAnB,QAAAA,MAAM,CAACiB,IAAP,CAAY,YAAZ,EAA0B,WAA1B;AACAjB,QAAAA,MAAM,CAACkB,KAAP,CAAa,YAAb,EAA2B,YAA3B;AACAjC,QAAAA,EAAE,CAACmC,IAAH,CAAQC,MAAR,CAAeC,YAAf,CAA4B,CAA5B,EAA+BV,UAAU,CAACV,KAA1C;AAEAjB,QAAAA,EAAE,CAACY,GAAH,CAAOG,MAAP,CAAcuB,UAAd,CAAyBX,UAAzB;AACA3B,QAAAA,EAAE,CAACY,GAAH,CAAOG,MAAP,CAAcwB,YAAd;AACD;AAvCM;AAH4B,GAAvC;AArBAvC,EAAAA,EAAE,CAACwC,IAAH,CAAQ5B,GAAR,CAAY6B,OAAZ,CAAoBtC,aAApB,GAAoCA,aAApC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * John Spackman (john.spackman@zenesis.com)\n\n ************************************************************************ */\n\n/**\n * @ignore(my.TestLogger)\n */\nqx.Class.define(\"qx.test.log.Filters\", {\n  extend: qx.dev.unit.TestCase,\n\n  members: {\n    testFilters: function() {\n      qx.log.appender.Native;\n\n      var Logger = qx.log.Logger;\n      qx.Class.define(\"my.TestLogger\", {\n        statics: {\n          count: 0,\n          process: function(entry) {\n            this.count++;\n            var args = qx.log.appender.Util.toText(entry);\n            (console[entry.level] || console.log).call(console, \"TestLogger: \" + args);\n          }\n        }\n      });\n\n      Logger.addFilter(\"afdemo\", \"qx.log.appender.Native\");\n      Logger.addFilter(/^test-level/, \"my.TestLogger\", \"warn\");\n\n      var TestLogger = my.TestLogger;\n      qx.log.Logger.register(TestLogger);\n\n      TestLogger.count = 0;\n\n      this.trace(\"Trace Test\");\n      this.debug(\"Debug Test\");\n      this.warn(\"Warn Test\");\n      this.error(\"Error Test\");\n      this.info(\"Info Test\");\n\n      Logger.trace(\"test-level\", \"Trace Test\");\n      Logger.debug(\"test-level\", \"Debug Test\");\n      Logger.info(\"test-level\", \"Info Test\");\n      Logger.warn(\"test-level\", \"Warn Test\");\n      Logger.error(\"test-level\", \"Error Test\");\n      qx.core.Assert.assertEquals(2, TestLogger.count);\n\n      qx.log.Logger.unregister(TestLogger);\n      qx.log.Logger.resetFilters();\n    }\n  }\n});\n"
  ]
}