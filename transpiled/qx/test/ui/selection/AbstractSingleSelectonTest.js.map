{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/selection/AbstractSingleSelectonTest.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "type",
    "members",
    "_widget",
    "_mode",
    "_selection",
    "_notInSelection",
    "_getChildren",
    "Error",
    "_createTestElement",
    "name",
    "_assertArrayEquals",
    "expected",
    "found",
    "message",
    "sort",
    "assertArrayEquals",
    "testGetSelection",
    "result",
    "getSelection",
    "testSetSelection",
    "_testSetSelection",
    "testDisabledSetSelection",
    "setEnabled",
    "selection",
    "that",
    "widget",
    "assertEventFired",
    "setSelection",
    "flush",
    "event",
    "data",
    "getData",
    "testSameSetSelection",
    "assertEventNotFired",
    "testSetSelectionWithNotChildElement",
    "testElement",
    "assertException",
    "destroy",
    "testSetSelectionWithTooMuchElements",
    "newSelection",
    "testResetSelection",
    "resetSelection",
    "assertIdentical",
    "length",
    "testDisabledResetSelection",
    "testResetSelectionWithEmptySelection",
    "testIsSelected",
    "isSelected",
    "assertTrue",
    "notSelected",
    "assertFalse",
    "testIsSelectedWithNotChildElement",
    "testIsSelectionEmpty",
    "isSelectionEmpty",
    "testGetSelectables",
    "items",
    "getSelectables",
    "testDisabledGetSelectables",
    "testGetUserSelectables",
    "selectables",
    "i",
    "push",
    "AbstractSingleSelectonTest"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.selection.AbstractSingleSelectonTest\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n  type : \"abstract\",\n\n  members :\n  {\n    _widget : null,\n\n    _mode : null,\n\n    _selection : null,\n\n    _notInSelection : null,\n\n    _getChildren : function() {\n      throw new Error(\"Abstract method call: _getChildren()\");\n    },\n\n    _createTestElement : function(name)\n    {\n      throw new Error(\"Abstract method call: _createTestElement()\");\n    },\n\n    _assertArrayEquals : function(expected, found, message)\n    {\n      expected.sort();\n      found.sort();\n      this.assertArrayEquals(expected, found, message);\n    },\n\n    testGetSelection : function()\n    {\n      var result = this._widget.getSelection();\n      this._assertArrayEquals(this._selection, result,\n        \"The result of the selection is wrong\");\n    },\n\n    testSetSelection : function()\n    {\n      this._testSetSelection([this._notInSelection[0]]);\n    },\n\n    testDisabledSetSelection : function()\n    {\n      this._widget.setEnabled(false);\n      this._testSetSelection([this._notInSelection[0]]);\n    },\n\n    _testSetSelection : function(selection)\n    {\n      var that = this;\n      var widget = this._widget;\n\n      this._selection = selection;\n\n      // Tests that the event is fired and the event contains the right widget\n      this.assertEventFired(widget, \"changeSelection\", function()\n      {\n        widget.setSelection(that._selection);\n        that.flush();\n      }, function(event)\n      {\n        var data = event.getData();\n        that._assertArrayEquals(that._selection, data, \"The result of the\" +\n          \" 'changeSelection' event is wrong!\");\n      }, \"'changeSelection' event not fired!\");\n\n      // Tests the result from \"getSelection\"\n      var result = this._widget.getSelection();\n      this._assertArrayEquals(this._selection, result, \"The result of\" +\n        \" 'getSelection' method is wrong!\");\n    },\n\n    testSameSetSelection : function()\n    {\n      var that = this;\n      var widget = this._widget;\n\n      this._assertArrayEquals(this._selection, this._widget.getSelection(),\n        \"The test setup is wrong!\");\n\n      this.assertEventNotFired(widget, \"changeSelection\", function() {\n        widget.setSelection(that._selection);\n      }, function(event) {}, \"'changeSelection' event fired!\");\n    },\n\n    testSetSelectionWithNotChildElement : function()\n    {\n      var testElement = this._createTestElement(\"Test Element\");\n      var that = this;\n\n      this.assertException(function() {\n        that._widget.setSelection([testElement]);\n      }, Error, null, \"No error occurs by trying to select an element\" +\n        \" which isn't a child element!\");\n\n      testElement.destroy();\n    },\n\n    testSetSelectionWithTooMuchElements : function()\n    {\n      var newSelection = [this._selection[0], this._notInSelection[0]];\n      var that = this;\n      this.assertException(function() {\n        that._widget.setSelection(newSelection);\n      }, Error, null, \"It isn't possible to select more than one element!\");\n\n      this._assertArrayEquals(this._selection, this._widget.getSelection(),\n        \"The wrong setSelection call has changed the old seclection!\");\n    },\n\n    testResetSelection : function()\n    {\n      var widget = this._widget;\n      var that = this;\n\n      //Tests that the event is fired and the event contains nothing\n      this.assertEventFired(widget, \"changeSelection\", function () {\n        widget.resetSelection();\n        that.flush();\n      }, function(event) {\n        if (that._mode === \"one\")\n        {\n          that._assertArrayEquals([that._getChildren()[0]], event.getData(),\n            \"The first element isn't selected!\");\n        } else {\n          that.assertIdentical(0, event.getData().length, \"Event isn't empty!\");\n        }\n      }, \"'changeSelection' event not fired!\");\n\n      // Tests that no item is selected\n      var result = this._widget.getSelection();\n      if (this._mode === \"one\")\n      {\n        this._assertArrayEquals([this._getChildren()[0]], result,\n          \"The first element isn't selected!\");\n      } else {\n        this.assertIdentical(0, result.length, \"The result isn't empty!\");\n      }\n    },\n\n\n    testDisabledResetSelection : function()\n    {\n      this._widget.setEnabled(false);\n      this.testResetSelection();\n    },\n\n\n    testResetSelectionWithEmptySelection : function()\n    {\n      var widget = this._widget;\n      var that = this;\n\n      //Tests that the event is fired and the event contains nothing\n      this.assertEventFired(widget, \"changeSelection\", function () {\n        widget.setSelection([]);\n        that.flush();\n      }, function(event) {\n        if (that._mode === \"one\")\n        {\n          that._assertArrayEquals([that._getChildren()[0]], event.getData(),\n            \"The first element isn't selected!\");\n        } else {\n          that.assertIdentical(0, event.getData().length, \"Event isn't empty!\");\n        }\n      }, \"'changeSelection' event not fired!\");\n\n      // Tests that no item is selected\n      var result = this._widget.getSelection();\n      if (this._mode === \"one\")\n      {\n        this._assertArrayEquals([this._getChildren()[0]], result,\n          \"The first element isn't selected!\");\n      } else {\n        this.assertIdentical(0, result.length, \"The result isn't empty!\");\n      }\n    },\n\n    testIsSelected : function()\n    {\n      var result = this._widget.isSelected(this._selection[0]);\n      this.assertTrue(result, \"The wrong item is selected!\");\n\n      var notSelected = this._notInSelection[0];\n      result = this._widget.isSelected(notSelected);\n      this.assertFalse(result, \"The wrong item is selected!\");\n    },\n\n    testIsSelectedWithNotChildElement : function()\n    {\n      var testElement = this._createTestElement(\"Test Element\");\n      var that = this;\n\n      this.assertException(function() {\n        that._widget.isSelected(testElement);\n      }, Error, null, \"No error occurs by calling 'isSelected' with an\" +\n        \" element which isn't a child element!\");\n\n      testElement.destroy();\n    },\n\n    testIsSelectionEmpty : function()\n    {\n      var result = this._widget.isSelectionEmpty();\n      this.assertFalse(result, \"The selection is empty!\");\n\n      this._widget.resetSelection();\n      this.flush();\n\n      result = this._widget.isSelectionEmpty();\n      if (this._mode === \"one\")\n      {\n        this.assertFalse(result, \"The selection is empty!\");\n      } else {\n        this.assertTrue(result, \"The selection isn't empty!\");\n      }\n    },\n\n    testGetSelectables : function()\n    {\n      var items = this._getChildren();\n      var found = this._widget.getSelectables(true);\n\n      this._assertArrayEquals(items, found,\n        \"This list of the returned selectables are wrong!\");\n    },\n\n\n    testDisabledGetSelectables : function()\n    {\n      this._widget.setEnabled(false);\n      this.testGetSelectables();\n    },\n\n\n    testGetUserSelectables : function()\n    {\n      var selectables = [];\n      var items = this._getChildren();\n\n      for (var i = 0; i < items.length; i++)\n      {\n        if (i % 2 == 0) {\n          selectables.push(items[i]);\n        } else {\n          items[i].setEnabled(false);\n        }\n      }\n\n      var found = this._widget.getSelectables();\n\n      this._assertArrayEquals(selectables, found,\n        \"This list of the returned selectables are wrong!\");\n    }\n  }\n});\n"
  ]
}