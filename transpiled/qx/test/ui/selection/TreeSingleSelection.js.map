{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/selection/TreeSingleSelection.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "selection",
    "AbstractSingleSelectonTest",
    "members",
    "setUp",
    "length",
    "_notInSelection",
    "_mode",
    "_widget",
    "tree",
    "Tree",
    "set",
    "selectionMode",
    "width",
    "height",
    "getRoot",
    "add",
    "root",
    "TreeFolder",
    "setOpen",
    "setRoot",
    "i",
    "folder",
    "file",
    "TreeFile",
    "assertIdentical",
    "getSelection",
    "setSelection",
    "_selection",
    "push",
    "flush",
    "tearDown",
    "destroy",
    "_getChildren",
    "getItems",
    "_createTestElement",
    "name",
    "testFolderOpen",
    "f1",
    "f2",
    "assertTrue",
    "getOpen",
    "TreeSingleSelection"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.selection.TreeSingleSelection\",\n{\n  extend : qx.test.ui.selection.AbstractSingleSelectonTest,\n\n  members :\n  {\n    setUp : function()\n    {\n      var length = 10;\n      this._notInSelection = [];\n      this._mode = \"single\";\n\n      this._widget = new qx.ui.tree.Tree().set(\n      {\n        selectionMode: this._mode,\n        width : 200,\n        height : 400\n      });\n      this.getRoot().add(this._widget);\n\n      var root = new qx.ui.tree.TreeFolder(\"Root\");\n      root.setOpen(true);\n      this._widget.setRoot(root);\n\n      for (var i = 0; i < length; i++) {\n        var folder = new qx.ui.tree.TreeFolder(\"Folder\" + i);\n        folder.setOpen(true);\n        var file = new qx.ui.tree.TreeFile(\"File\" + i);\n        folder.add(file);\n        root.add(folder);\n\n        if (i == 5) {\n          this.assertIdentical(0, this._widget.getSelection().length,\n            \"Couldn't setup test, because selection isn't empty\");\n\n          this._widget.setSelection([file]);\n          this._selection = [file];\n        } else {\n          this._notInSelection.push(file);\n        }\n      }\n\n      this.flush();\n    },\n\n    tearDown : function()\n    {\n      this.base(arguments);\n      this._widget.destroy();\n      this._widget = null;\n      this._selection = null;\n      this._notInSelection = null;\n      this.flush();\n    },\n\n    _getChildren : function()\n    {\n      if (this._widget != null) {\n        return this._widget.getItems();\n      } else {\n        return [];\n      }\n    },\n\n    _createTestElement : function(name) {\n      return new qx.ui.tree.TreeFile(name);\n    },\n\n\n    testFolderOpen : function()\n    {\n      var tree = new qx.ui.tree.Tree();\n      this.getRoot().add(tree);\n\n      var root = new qx.ui.tree.TreeFolder(\"root\");\n      tree.setRoot(root);\n\n      var f1 = new qx.ui.tree.TreeFolder(\"f1\");\n      var f2 = new qx.ui.tree.TreeFolder(\"f2\");\n\n      root.add(f1);\n      f1.add(f2);\n\n      // select the first folder\n      tree.setSelection([f1]);\n\n      // check if the root is opened\n      this.assertTrue(root.getOpen());\n\n      // close the root\n      root.setOpen(false);\n\n      // select the second folder\n      tree.setSelection([f2]);\n\n      // check if the root and f1 is open\n      this.assertTrue(root.getOpen());\n      this.assertTrue(f1.getOpen());\n\n      f1.destroy();\n      f2.destroy();\n      root.destroy();\n      tree.destroy();\n    }\n  }\n});"
  ]
}