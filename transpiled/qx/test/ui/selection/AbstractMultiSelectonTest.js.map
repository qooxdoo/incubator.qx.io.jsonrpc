{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/selection/AbstractMultiSelectonTest.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "selection",
    "AbstractSingleSelectonTest",
    "type",
    "members",
    "testSetSelectionWithTooMuchElements",
    "testSetSelection",
    "_notInSelection",
    "_testSetSelection",
    "flush",
    "testSetSelectionOverrideWithLess",
    "_selection",
    "_widget",
    "setSelection",
    "expected",
    "result",
    "getSelection",
    "_assertArrayEquals",
    "testSelectAll",
    "resetSelection",
    "widget",
    "that",
    "assertEventFired",
    "selectAll",
    "event",
    "_getChildren",
    "getData",
    "assertEventNotFired",
    "testAddToSelection",
    "newValue",
    "length",
    "addToSelection",
    "testAddToSelectionWithNotChildElement",
    "testElement",
    "_createTestElement",
    "assertException",
    "Error",
    "destroy",
    "testRemoveFromSelection",
    "itemToRemove",
    "removeFromSelection",
    "testRemoveFromSelectionWithNotChildElement",
    "testRemoveFromSelectionWithNotSelectedElement",
    "testInvertSelection",
    "invertSelection",
    "testInvertSelectionWithErrors",
    "setSelectionMode",
    "testInvertSelectionWithDisabledChildElements",
    "tempNotInSelection",
    "i",
    "push",
    "AbstractMultiSelectonTest"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.selection.AbstractMultiSelectonTest\",\n{\n  extend : qx.test.ui.selection.AbstractSingleSelectonTest,\n  type : \"abstract\",\n\n  members :\n  {\n    testSetSelectionWithTooMuchElements : function()\n    {\n      // Do nothing\n    },\n\n    // overridden\n    testSetSelection : function()\n    {\n      this.base(arguments);\n\n      // Sets up the new selection\n      var selection = [];\n      selection[0] = this._notInSelection[0];\n      selection[1] = this._notInSelection[1];\n      selection[2] = this._notInSelection[2];\n      selection[3] = this._notInSelection[3];\n      selection[4] = this._notInSelection[4];\n\n      this._testSetSelection(selection);\n      this.flush();\n    },\n\n    testSetSelectionOverrideWithLess : function()\n    {\n      // Sets up the new selection\n      this._selection = [];\n      this._selection[0] = this._notInSelection[0];\n      this._selection[1] = this._notInSelection[1];\n      this._selection[2] = this._notInSelection[2];\n      this._selection[3] = this._notInSelection[3];\n      this._selection[4] = this._notInSelection[4];\n      this._widget.setSelection(this._selection);\n      this.flush();\n\n      // Test setSelection() with the same elements, but less\n      var expected = [this._selection[0], this._selection[2],\n        this._selection[4]];\n      this._widget.setSelection(expected);\n\n      // Tests the result from \"getSelection\"\n      var result = this._widget.getSelection();\n      this._assertArrayEquals(expected, result, \"Selection is wrong\");\n\n      // Test setSelection(), with one element from the selection before\n      this._widget.setSelection(this._selection);\n      this._widget.setSelection([this._selection[0]]);\n      result = this._widget.getSelection();\n      expected = [this._selection[0]];\n      this._assertArrayEquals(expected, result, \"Selection is wrong\");\n      this.flush();\n    },\n\n    testSelectAll : function()\n    {\n      // Resets the selection to compare the results.\n      this._widget.resetSelection();\n\n      // Tests event and select all items\n      var widget = this._widget;\n      var that = this;\n      this.assertEventFired(widget, \"changeSelection\", function () {\n        widget.selectAll();\n        that.flush();\n      }, function(event) {\n        // Tests the result from the event\n        that._assertArrayEquals(that._getChildren(), event.getData(),\n          \"Selection is wrong!\");\n      }, \"'changeSelection' event not fired!\");\n\n      // A second selectAll() shouldn't fire an event\n      this.assertEventNotFired(widget, \"changeSelection\", function () {\n        widget.selectAll();\n      }, function(event) {}, \"'changeSelection' event fired!\");\n\n      // Tests the result from \"getSelection\"\n      this._selection = this._widget.getSelection();\n      this._assertArrayEquals(this._getChildren(), this._selection,\n        \"Selection is wrong!\");\n    },\n\n    testAddToSelection : function()\n    {\n      // Sets up a new item for selection\n      var newValue = this._notInSelection[0];\n      this._selection[this._selection.length] = newValue;\n\n      // Tests event and adds item to the selection\n      var widget = this._widget;\n      var that = this;\n      this.assertEventFired(widget, \"changeSelection\", function () {\n        widget.addToSelection(newValue);\n        that.flush();\n      }, function(event) {\n        // Tests the result from the event\n        that._assertArrayEquals(that._selection, event.getData(),\n          \"The result of the selection is wrong\");\n      }, \"'changeSelection' event not fired!\");\n\n      // A second selection shouldn't fire an event\n      this.assertEventNotFired(widget, \"changeSelection\", function () {\n        widget.addToSelection(newValue);\n      }, function(event) {}, \"'changeSelection' event fired!\");\n\n      // Tests the result from \"getSelection\"\n      this._assertArrayEquals(this._selection, this._widget.getSelection(),\n        \"Selection is wrong\");\n    },\n\n    testAddToSelectionWithNotChildElement : function()\n    {\n      var that = this;\n      var testElement = this._createTestElement(\"Test Element\");\n\n      this.assertException(function() {\n        that._widget.addToSelection(testElement);\n      }, Error, null, \"No error occurs by trying to add an element\" +\n        \" to the selection which isn't a child element!\");\n\n      testElement.destroy();\n    },\n\n    testRemoveFromSelection : function()\n    {\n      // Sets up the item to remove and update the selection array\n      var selection = this._selection;\n      var itemToRemove = selection[selection.length - 1];\n      delete selection[selection.length - 1];\n      selection.length = selection.length - 1;\n\n      // Tests event and removes the item\n      var widget = this._widget;\n      var that = this;\n      this.assertEventFired(widget, \"changeSelection\", function () {\n        widget.removeFromSelection(itemToRemove);\n        that.flush();\n      }, function(event) {\n        // Tests the result from the event\n        that._assertArrayEquals(that._selection, event.getData(),\n          \"The result of the selection is wrong\");\n      }, \"'changeSelection' event not fired!\");\n\n      // Tests the result from \"getSelection\"\n      this._assertArrayEquals(this._selection, this._widget.getSelection(),\n        \"Selection is wrong\");\n    },\n\n    testRemoveFromSelectionWithNotChildElement : function()\n    {\n      var that = this;\n      var testElement = this._createTestElement(\"Test Element\");\n\n      this.assertException(function() {\n        that._widget.removeFromSelection(testElement);\n      }, Error, null, \"No error occurs by trying to remove an element\" +\n        \" which isn't a child element!\");\n\n      testElement.destroy();\n    },\n\n    testRemoveFromSelectionWithNotSelectedElement : function()\n    {\n      var itemToRemove = this._notInSelection[0];\n\n      var widget = this._widget;\n      this.assertEventNotFired(widget, \"changeSelection\", function () {\n        widget.removeFromSelection(itemToRemove);\n      }, function(event) {}, \"'changeSelection' event fired!\");\n    },\n\n    testInvertSelection : function()\n    {\n      var that = this;\n      var widget = this._widget;\n      this.assertEventFired(widget, \"changeSelection\", function () {\n        widget.invertSelection();\n        that.flush();\n      }, function(event) {\n        // Tests the result from the event\n        that._assertArrayEquals(that._notInSelection, event.getData(),\n          \"The result of the selection is wrong\");\n      }, \"'changeSelection' event not fired!\");\n\n      // Tests the result from \"getSelection\"\n      this._assertArrayEquals(this._notInSelection, this._widget.getSelection(),\n        \"Selection is wrong\");\n    },\n\n    testInvertSelectionWithErrors : function()\n    {\n      var widget = this._widget;\n      widget.setSelectionMode(\"single\");\n\n      this.assertException(function() {\n        widget.invertSelection();\n      }, Error, null, \"No error occurs by trying to invert elements\" +\n        \" in 'single' selection mode!\");\n    },\n\n    testInvertSelectionWithDisabledChildElements : function()\n    {\n      // test setup\n      var tempNotInSelection = [];\n      for (var i = 0; i < this._notInSelection.length; i++) {\n        tempNotInSelection.push(this._notInSelection[i]);\n      }\n      this._notInSelection = tempNotInSelection;\n\n      var that = this;\n      var widget = this._widget;\n      this.assertEventFired(widget, \"changeSelection\", function () {\n        widget.invertSelection();\n        that.flush();\n      }, function(event) {\n        // Tests the result from the event\n        that._assertArrayEquals(that._notInSelection, event.getData(),\n          \"The result of the selection is wrong\");\n      }, \"'changeSelection' event not fired!\");\n\n      // Tests the result from \"getSelection\"\n      this._assertArrayEquals(this._notInSelection, this._widget.getSelection(),\n        \"Selection is wrong\");\n    }\n  }\n});\n"
  ]
}