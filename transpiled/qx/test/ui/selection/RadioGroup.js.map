{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/selection/RadioGroup.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "selection",
    "AbstractSingleSelectonTest",
    "members",
    "__radioButtons",
    "setUp",
    "length",
    "_mode",
    "_notInSelection",
    "_widget",
    "form",
    "RadioGroup",
    "root",
    "getRoot",
    "i",
    "item",
    "RadioButton",
    "add",
    "top",
    "push",
    "setSelection",
    "_selection",
    "flush",
    "tearDown",
    "destroy",
    "dispose",
    "_getChildren",
    "getItems",
    "_createTestElement",
    "name",
    "testAllowEmptySelection",
    "setAllowEmptySelection",
    "testResetSelection",
    "result",
    "getSelection",
    "_assertArrayEquals",
    "getSelectables",
    "testAdd",
    "widget",
    "testAddWithAllowEmptySelection",
    "assertEquals",
    "testSetGroup",
    "radioButton1",
    "radioButton2",
    "radioGroup",
    "setGroup"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,iCAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,SAAX,CAAqBC,0BADhC;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,cAAc,EAAG,IADnB;AAGEC,MAAAA,KAAK,EAAG,iBACR;AACE,YAAIC,MAAM,GAAG,EAAb;AACA,aAAKC,KAAL,GAAa,KAAb;AACA,aAAKH,cAAL,GAAsB,EAAtB;AACA,aAAKI,eAAL,GAAuB,EAAvB;AAEA,aAAKC,OAAL,GAAe,IAAIjB,EAAE,CAACQ,EAAH,CAAMU,IAAN,CAAWC,UAAf,EAAf;AACA,YAAIC,IAAI,GAAG,KAAKC,OAAL,EAAX;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAApB,EAA4BQ,CAAC,EAA7B,EAAiC;AAC/B,cAAIC,IAAI,GAAG,IAAIvB,EAAE,CAACQ,EAAH,CAAMU,IAAN,CAAWM,WAAf,CAA2B,gBAAgBF,CAA3C,CAAX;AACAF,UAAAA,IAAI,CAACK,GAAL,CAASF,IAAT,EAAe;AAACG,YAAAA,GAAG,EAAE,KAAGJ;AAAT,WAAf;;AACA,eAAKL,OAAL,CAAaQ,GAAb,CAAiBF,IAAjB;;AACA,eAAKX,cAAL,CAAoBe,IAApB,CAAyBJ,IAAzB;;AAEA,cAAID,CAAC,IAAI,CAAT,EAAY;AACV,iBAAKL,OAAL,CAAaW,YAAb,CAA0B,CAACL,IAAD,CAA1B;;AACA,iBAAKM,UAAL,GAAkB,CAACN,IAAD,CAAlB;AACD,WAHD,MAGO;AACL,iBAAKP,eAAL,CAAqBW,IAArB,CAA0BJ,IAA1B;AACD;AACF;;AAED,aAAKO,KAAL;AACD,OA5BH;AA8BEC,MAAAA,QAAQ,EAAG,oBACX;AACE;;AACA,aAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,cAAL,CAAoBE,MAAxC,EAAgDQ,CAAC,EAAjD,EAAqD;AACnD,eAAKV,cAAL,CAAoBU,CAApB,EAAuBU,OAAvB;AACD;;AACD,aAAKpB,cAAL,GAAsB,IAAtB;;AACA,aAAKK,OAAL,CAAagB,OAAb;;AACA,aAAKhB,OAAL,GAAe,IAAf;AACA,aAAKY,UAAL,GAAkB,IAAlB;AACA,aAAKb,eAAL,GAAuB,IAAvB;AACA,aAAKc,KAAL;AACD,OA1CH;AA4CEI,MAAAA,YAAY,EAAG,wBACf;AACE,YAAI,KAAKjB,OAAL,IAAgB,IAApB,EAA0B;AACxB,iBAAO,KAAKA,OAAL,CAAakB,QAAb,EAAP;AACD,SAFD,MAEO;AACL,iBAAO,EAAP;AACD;AACF,OAnDH;AAqDEC,MAAAA,kBAAkB,EAAG,4BAASC,IAAT,EAAe;AAClC,eAAO,IAAIrC,EAAE,CAACQ,EAAH,CAAMU,IAAN,CAAWM,WAAf,CAA2Ba,IAA3B,CAAP;AACD,OAvDH;AAyDEC,MAAAA,uBAAuB,EAAG,mCAAW;AACnC,aAAKvB,KAAL,GAAa,EAAb;;AACA,aAAKE,OAAL,CAAasB,sBAAb,CAAoC,IAApC;;AACA,aAAKC,kBAAL;;AAEA,aAAKvB,OAAL,CAAasB,sBAAb,CAAoC,KAApC;;AAEA,YAAIE,MAAM,GAAG,KAAKxB,OAAL,CAAayB,YAAb,EAAb;;AACA,aAAKC,kBAAL,CAAwB,CAAC,KAAK1B,OAAL,CAAa2B,cAAb,GAA8B,CAA9B,CAAD,CAAxB,EAA4DH,MAA5D,EACE,+CADF;AAED,OAnEH;AAqEEI,MAAAA,OAAO,EAAG,mBAAW;AACnB,YAAIC,MAAM,GAAG,IAAI9C,EAAE,CAACQ,EAAH,CAAMU,IAAN,CAAWC,UAAf,EAAb;AACA,YAAII,IAAI,GAAG,IAAIvB,EAAE,CAACQ,EAAH,CAAMU,IAAN,CAAWM,WAAf,CAA2B,aAA3B,CAAX;AACAsB,QAAAA,MAAM,CAACrB,GAAP,CAAWF,IAAX;AAEA,YAAIkB,MAAM,GAAGK,MAAM,CAACJ,YAAP,EAAb;;AACA,aAAKC,kBAAL,CAAwB,CAACG,MAAM,CAACF,cAAP,GAAwB,CAAxB,CAAD,CAAxB,EAAsDH,MAAtD,EACE,+CADF;;AAGAK,QAAAA,MAAM,CAACb,OAAP;AACAV,QAAAA,IAAI,CAACS,OAAL;AACD,OAhFH;AAkFEe,MAAAA,8BAA8B,EAAG,0CAAW;AAC1C,YAAID,MAAM,GAAG,IAAI9C,EAAE,CAACQ,EAAH,CAAMU,IAAN,CAAWC,UAAf,EAAb;AACA2B,QAAAA,MAAM,CAACP,sBAAP,CAA8B,IAA9B;AAEA,YAAIhB,IAAI,GAAG,IAAIvB,EAAE,CAACQ,EAAH,CAAMU,IAAN,CAAWM,WAAf,CAA2B,aAA3B,CAAX;AACAsB,QAAAA,MAAM,CAACrB,GAAP,CAAWF,IAAX;AAEA,YAAIkB,MAAM,GAAGK,MAAM,CAACJ,YAAP,EAAb;AACA,aAAKM,YAAL,CAAkB,CAAlB,EAAqBP,MAAM,CAAC3B,MAA5B,EACE,+CADF;AAGAgC,QAAAA,MAAM,CAACb,OAAP;AACAV,QAAAA,IAAI,CAACS,OAAL;AACD,OA/FH;AAkGEiB,MAAAA,YAAY,EAAE,wBAAW;AACvB,YAAIC,YAAY,GAAG,IAAIlD,EAAE,CAACQ,EAAH,CAAMU,IAAN,CAAWM,WAAf,EAAnB;AACA,YAAI2B,YAAY,GAAG,IAAInD,EAAE,CAACQ,EAAH,CAAMU,IAAN,CAAWM,WAAf,EAAnB;AAEA,YAAI4B,UAAU,GAAG,IAAIpD,EAAE,CAACQ,EAAH,CAAMU,IAAN,CAAWC,UAAf,EAAjB;AAEA+B,QAAAA,YAAY,CAACG,QAAb,CAAsBD,UAAtB;AACAD,QAAAA,YAAY,CAACE,QAAb,CAAsBD,UAAtB;AAEA,aAAKJ,YAAL,CAAkBE,YAAlB,EAAgCE,UAAU,CAACjB,QAAX,GAAsB,CAAtB,CAAhC,EAA0D,gCAA1D;AACA,aAAKa,YAAL,CAAkBG,YAAlB,EAAgCC,UAAU,CAACjB,QAAX,GAAsB,CAAtB,CAAhC,EAA0D,iCAA1D;AAEAiB,QAAAA,UAAU,CAACnB,OAAX;AACAkB,QAAAA,YAAY,CAAClB,OAAb;AACAiB,QAAAA,YAAY,CAACjB,OAAb;AACD;AAjHH;AAJF,GADA;AAlBAjC,EAAAA,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,SAAX,CAAqBU,UAArB,CAAgChB,aAAhC,GAAgDA,aAAhD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.selection.RadioGroup\",\n{\n  extend : qx.test.ui.selection.AbstractSingleSelectonTest,\n\n  members :\n  {\n    __radioButtons : null,\n\n    setUp : function()\n    {\n      var length = 10;\n      this._mode = \"one\";\n      this.__radioButtons = [];\n      this._notInSelection = [];\n\n      this._widget = new qx.ui.form.RadioGroup();\n      var root = this.getRoot();\n\n      for (var i = 0; i < length; i++) {\n        var item = new qx.ui.form.RadioButton(\"RadioButton\" + i);\n        root.add(item, {top: 20*i});\n        this._widget.add(item);\n        this.__radioButtons.push(item);\n\n        if (i == 5) {\n          this._widget.setSelection([item]);\n          this._selection = [item];\n        } else {\n          this._notInSelection.push(item);\n        }\n      }\n\n      this.flush();\n    },\n\n    tearDown : function()\n    {\n      this.base(arguments);\n      for (var i = 0; i < this.__radioButtons.length; i++) {\n        this.__radioButtons[i].destroy();\n      }\n      this.__radioButtons = null;\n      this._widget.dispose();\n      this._widget = null;\n      this._selection = null;\n      this._notInSelection = null;\n      this.flush();\n    },\n\n    _getChildren : function()\n    {\n      if (this._widget != null) {\n        return this._widget.getItems();\n      } else {\n        return [];\n      }\n    },\n\n    _createTestElement : function(name) {\n      return new qx.ui.form.RadioButton(name);\n    },\n\n    testAllowEmptySelection : function() {\n      this._mode = \"\";\n      this._widget.setAllowEmptySelection(true);\n      this.testResetSelection();\n\n      this._widget.setAllowEmptySelection(false);\n\n      var result = this._widget.getSelection();\n      this._assertArrayEquals([this._widget.getSelectables()[0]], result,\n        \"The result of 'getSelection' method is wrong!\");\n    },\n\n    testAdd : function() {\n      var widget = new qx.ui.form.RadioGroup();\n      var item = new qx.ui.form.RadioButton(\"RadioButton\");\n      widget.add(item);\n\n      var result = widget.getSelection();\n      this._assertArrayEquals([widget.getSelectables()[0]], result,\n        \"The result of 'getSelection' method is wrong!\");\n\n      widget.dispose();\n      item.destroy();\n    },\n\n    testAddWithAllowEmptySelection : function() {\n      var widget = new qx.ui.form.RadioGroup();\n      widget.setAllowEmptySelection(true);\n\n      var item = new qx.ui.form.RadioButton(\"RadioButton\");\n      widget.add(item);\n\n      var result = widget.getSelection();\n      this.assertEquals(0, result.length,\n        \"The result of 'getSelection' method is wrong!\");\n\n      widget.dispose();\n      item.destroy();\n    },\n\n\n    testSetGroup: function() {\n      var radioButton1 = new qx.ui.form.RadioButton();\n      var radioButton2 = new qx.ui.form.RadioButton();\n\n      var radioGroup = new qx.ui.form.RadioGroup();\n\n      radioButton1.setGroup(radioGroup);\n      radioButton2.setGroup(radioGroup);\n\n      this.assertEquals(radioButton1, radioGroup.getItems()[0], \"First button not in the group.\");\n      this.assertEquals(radioButton2, radioGroup.getItems()[1], \"Second button not in the group.\");\n\n      radioGroup.dispose();\n      radioButton2.dispose();\n      radioButton1.dispose();\n    }\n  }\n});"
  ]
}