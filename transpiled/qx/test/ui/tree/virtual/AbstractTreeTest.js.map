{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/AbstractTreeTest.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "include",
    "dev",
    "unit",
    "MMock",
    "list",
    "MAssert",
    "construct",
    "core",
    "Object",
    "data",
    "marshal",
    "MEventBubbling",
    "name",
    "setName",
    "properties",
    "check",
    "event",
    "apply",
    "nullable",
    "members",
    "toString",
    "getName",
    "equals",
    "item",
    "tree",
    "virtual",
    "Leaf",
    "children",
    "Array",
    "setChildren",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "getChildren",
    "i",
    "getLength",
    "getItem",
    "dispose",
    "setUp",
    "VirtualTree",
    "getRoot",
    "add",
    "tearDown",
    "model",
    "createModel",
    "level",
    "root",
    "Node",
    "_createNodes",
    "createModelAndSetModel",
    "setLabelPath",
    "setChildProperty",
    "setModel",
    "getVisibleItemsFrom",
    "parent",
    "openNodes",
    "expected",
    "child",
    "push",
    "indexOf",
    "otherExpected",
    "concat",
    "__getPrefix",
    "_createLeafs",
    "prefix",
    "startsWith",
    "substr",
    "length",
    "isDefined",
    "undefine",
    "AbstractTreeTest"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * @ignore(qx.test.ui.tree.virtual.Leaf)\n * @ignore(qx.test.ui.tree.virtual.Node)\n */\n\nqx.Class.define(\"qx.test.ui.tree.virtual.AbstractTreeTest\",\n{\n  type : \"abstract\",\n  extend : qx.test.ui.LayoutTestCase,\n  include : [\n    qx.dev.unit.MMock,\n    qx.test.ui.list.MAssert\n  ],\n\n  construct : function()\n  {\n    this.base(arguments);\n\n    qx.Class.define(\"qx.test.ui.tree.virtual.Leaf\",\n    {\n      extend : qx.core.Object,\n      include : qx.data.marshal.MEventBubbling,\n\n      construct : function(name)\n      {\n        this.base(arguments);\n\n        this.setName(name);\n      },\n\n      properties :\n      {\n        name :\n        {\n          check : \"String\",\n          event : \"changeName\",\n          apply : \"_applyEventPropagation\",\n          nullable : true\n        }\n      },\n\n      members :\n      {\n        toString : function() {\n          return this.getName();\n        },\n\n        equals : function(item) {\n          return this.getName() === item.getName();\n        }\n      }\n    });\n\n    qx.Class.define(\"qx.test.ui.tree.virtual.Node\",\n    {\n      extend : qx.test.ui.tree.virtual.Leaf,\n\n      construct : function(name, children)\n      {\n        this.base(arguments, name);\n\n        if (children == null) {\n          children = new qx.data.Array();\n        }\n        this.setChildren(children);\n      },\n\n      properties :\n      {\n        children :\n        {\n          check : \"qx.data.Array\",\n          event : \"changeChildren\",\n          apply : \"_applyEventPropagation\",\n          nullable : true\n        }\n      },\n\n      destruct : function()\n      {\n        if (!qx.core.ObjectRegistry.inShutDown)\n        {\n          var children = this.getChildren();\n          for (var i = 0; i  < children.getLength(); i++) {\n            children.getItem(i).dispose();\n          }\n          children.dispose();\n          this.setChildren(null);\n        }\n      }\n    });\n  },\n\n\n  members :\n  {\n    tree : null,\n\n\n    setUp : function()\n    {\n      this.base(arguments);\n\n      this.tree = new qx.ui.tree.VirtualTree();\n      this.getRoot().add(this.tree);\n    },\n\n\n    tearDown : function()\n    {\n      this.base(arguments);\n\n      this.tree.dispose();\n      this.tree = null;\n\n      if (this.model != null) {\n        this.model.dispose();\n        this.model = null;\n      }\n    },\n\n\n    createModel : function(level)\n    {\n      var root = new qx.test.ui.tree.virtual.Node(\"Root node\");\n      this._createNodes(root, level);\n\n      return root;\n    },\n\n\n    createModelAndSetModel : function(level)\n    {\n      this.model = this.createModel(level);\n      this.tree.setLabelPath(\"name\");\n      this.tree.setChildProperty(\"children\");\n      this.tree.setModel(this.model);\n      return this.model;\n    },\n\n\n    getVisibleItemsFrom : function(parent, openNodes)\n    {\n      var expected = [];\n\n      if (parent.getChildren() != null)\n      {\n        for (var i = 0; i < parent.getChildren().getLength(); i++)\n        {\n          var child = parent.getChildren().getItem(i);\n          expected.push(child);\n\n          if (openNodes.indexOf(child) > -1)\n          {\n            var otherExpected = this.getVisibleItemsFrom(child, openNodes);\n            expected = expected.concat(otherExpected);\n          }\n        }\n      }\n\n      return expected;\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS TO CREATE A TREE STRUCTURE\n    ---------------------------------------------------------------------------\n    */\n\n\n    _createNodes : function(parent, level) {\n      if (level > 0)\n      {\n        for (var i = 0; i < 5; i++)\n        {\n          var item = new qx.test.ui.tree.virtual.Node(\"Node \" + this.__getPrefix(parent) + i);\n          parent.getChildren().push(item);\n\n          this._createNodes(item, level - 1);\n          this._createLeafs(item);\n        }\n      }\n    },\n\n\n    _createLeafs : function(parent)\n    {\n      for (var i = 0; i < 5; i++)\n      {\n        var child = new qx.test.ui.tree.virtual.Leaf(\"Leaf \" + this.__getPrefix(parent) + i);\n        parent.getChildren().push(child);\n      }\n    },\n\n\n    __getPrefix : function(item)\n    {\n      var name = item.getName();\n      var prefix = \"\";\n      if (name.startsWith(\"Node\")) {\n        prefix = name.substr(5, name.length - 5) + \".\";\n      }\n      return prefix;\n    }\n  },\n\n\n  destruct : function() {\n    if (qx.Class.isDefined(\"qx.test.ui.tree.virtual.Leaf\")) {\n      qx.Class.undefine(\"qx.test.ui.tree.virtual.Leaf\");\n    }\n\n    if (qx.Class.isDefined(\"qx.test.ui.tree.virtual.Node\")) {\n      qx.Class.undefine(\"qx.test.ui.tree.virtual.Node\");\n    }\n  }\n});\n"
  ]
}