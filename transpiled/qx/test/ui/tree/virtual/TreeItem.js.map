{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/TreeItem.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "tree",
    "virtual",
    "AbstractTreeTest",
    "construct",
    "Leaf",
    "properties",
    "children",
    "check",
    "event",
    "apply",
    "nullable",
    "destruct",
    "core",
    "ObjectRegistry",
    "inShutDown",
    "getChildren",
    "i",
    "getLength",
    "getItem",
    "dispose",
    "members",
    "testChildrenSetDeferred",
    "that",
    "root",
    "Node",
    "node",
    "NodeDefered",
    "push",
    "setLabelPath",
    "setChildProperty",
    "setModel",
    "flush",
    "window",
    "setTimeout",
    "resumeHandler",
    "setChildren",
    "data",
    "Array",
    "assertTrue",
    "hasListener",
    "widget",
    "__getWidgetForm",
    "isOpenable",
    "assertFalse",
    "assertNull",
    "wait",
    "modelItem",
    "row",
    "getLookupTable",
    "indexOf",
    "_layer",
    "getRenderedCellWidget",
    "TreeItem"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n\n/**\n * @ignore(qx.test.ui.tree.virtual.Node)\n * @ignore(qx.test.ui.tree.virtual.NodeDefered)\n * @ignore(qx.test.ui.tree.virtual.Leaf)\n */\nqx.Class.define(\"qx.test.ui.tree.virtual.TreeItem\",\n{\n  extend : qx.test.ui.tree.virtual.AbstractTreeTest,\n\n  construct : function()\n  {\n    this.base(arguments);\n\n\n    qx.Class.define(\"qx.test.ui.tree.virtual.NodeDefered\",\n    {\n      extend : qx.test.ui.tree.virtual.Leaf,\n\n      properties :\n      {\n        children :\n        {\n          check : \"qx.data.Array\",\n          event : \"changeChildren\",\n          apply : \"_applyEventPropagation\",\n          nullable : true\n        }\n      },\n\n      destruct : function()\n      {\n        if (!qx.core.ObjectRegistry.inShutDown)\n        {\n          var children = this.getChildren();\n          if (children) {\n            for (var i = 0; i  < children.getLength(); i++) {\n              children.getItem(i).dispose();\n            }\n            children.dispose();\n          }\n        }\n      }\n    });\n  },\n\n\n  members :\n  {\n    testChildrenSetDeferred : function()\n    {\n      var that = this;\n      var root = new qx.test.ui.tree.virtual.Node(\"Root node\");\n      var node = new qx.test.ui.tree.virtual.NodeDefered(\"Node1\");\n      root.getChildren().push(node);\n\n      this.tree.setLabelPath(\"name\");\n      this.tree.setChildProperty(\"children\");\n      this.tree.setModel(root);\n      this.flush();\n\n      window.setTimeout(that.resumeHandler(function()\n      {\n        // add new node\n        node.setChildren(new qx.data.Array([new qx.test.ui.tree.virtual.NodeDefered(\"Node1.1\")]));\n\n\n        // check for event listener\n        that.assertTrue(node.hasListener(\"changeChildren\"),\n         \"There must be a 'changeChildren' event listener!\");\n\n        that.assertTrue(node.getChildren().hasListener(\"changeLength\"),\n         \"There must be a 'changeLength' event listener on children array!\");\n\n\n        // check for open indent\n        var widget = that.__getWidgetForm(node);\n        that.assertTrue(widget.isOpenable(), \"Must be openable!\");\n\n\n        // dispose and check if event listeners are removed\n        root.dispose();\n\n        that.assertFalse(node.hasListener(\"changeChildren\"),\n         \"After disposing, there has not be a 'changeChildren' event listener!\");\n\n        that.assertFalse(node.getChildren().hasListener(\"changeLength\"),\n         \"After disposing, there must not be a 'changeLength' event listener on children array!\");\n      }), 0);\n\n\n      // children property not set yet\n      this.assertNull(node.getChildren(), \"Must be null\");\n      this.wait(50);\n    },\n\n\n    __getWidgetForm : function(modelItem)\n    {\n      var widget = null;\n      var row = this.tree.getLookupTable().indexOf(modelItem);\n      if (row > -1) {\n        widget = this.tree._layer.getRenderedCellWidget(row, 0);\n      }\n      return widget;\n    }\n  }\n});\n"
  ]
}