{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/Sorting.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "tree",
    "virtual",
    "AbstractTreeTest",
    "members",
    "testSorter",
    "sorter",
    "a",
    "b",
    "getName",
    "sortedModel",
    "createModel",
    "root",
    "createModelAndSetModel",
    "openNode",
    "getChildren",
    "getItem",
    "openNodes",
    "__sortModel",
    "delegate",
    "setDelegate",
    "flush",
    "expected",
    "getVisibleItemsFrom",
    "lang",
    "Array",
    "insertAt",
    "__testBuildLookupTable",
    "dispose",
    "testModelUnmodified",
    "rootChildrenClone",
    "concat",
    "__testOrderNotChanged",
    "toArray",
    "testSorterAndFilter",
    "removeAt",
    "filter",
    "child",
    "model",
    "children",
    "sort",
    "i",
    "getLength",
    "Node",
    "found",
    "getLookupTable",
    "msg",
    "join",
    "assertEquals",
    "length",
    "assertTrue",
    "equals",
    "getPane",
    "getRowConfig",
    "getItemCount",
    "__logModel",
    "level",
    "prefix",
    "console",
    "log",
    "Sorting"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * @ignore(qx.test.ui.tree.virtual.Node)\n */\nqx.Class.define(\"qx.test.ui.tree.virtual.Sorting\",\n{\n  extend : qx.test.ui.tree.virtual.AbstractTreeTest,\n\n  members :\n  {\n    testSorter : function()\n    {\n      var sorter = function(a, b)\n      {\n        a = a.getName();\n        b = b.getName();\n        return a < b ? 1 : a > b ? -1 : 0;\n      };\n\n      var sortedModel = this.createModel(2);\n      var root = this.createModelAndSetModel(2);\n\n      this.tree.openNode(root.getChildren().getItem(2));\n      this.tree.openNode(root.getChildren().getItem(2).getChildren().getItem(4));\n\n      var openNodes = [\n        sortedModel,\n        sortedModel.getChildren().getItem(2),\n        sortedModel.getChildren().getItem(2).getChildren().getItem(4)\n      ];\n\n      this.__sortModel(sortedModel, sorter);\n\n      var delegate = {\n        sorter : sorter\n      };\n      this.tree.setDelegate(delegate);\n      this.flush();\n\n      var expected = this.getVisibleItemsFrom(sortedModel, openNodes);\n      qx.lang.Array.insertAt(expected, sortedModel, 0);\n\n      this.__testBuildLookupTable(expected);\n\n      //this.__logModel(sortedModel);\n      sortedModel.dispose();\n    },\n\n\n    testModelUnmodified : function()\n    {\n      var sorter = function(a, b)\n      {\n        a = a.getName();\n        b = b.getName();\n        return a < b ? 1 : a > b ? -1 : 0;\n      };\n\n      var root = this.createModelAndSetModel(1);\n      var rootChildrenClone = root.getChildren().concat([]);\n\n      var delegate = {\n        sorter : sorter\n      };\n      this.tree.setDelegate(delegate);\n      this.flush();\n\n      this.__testOrderNotChanged(rootChildrenClone.toArray(), root.getChildren().toArray());\n\n      rootChildrenClone.dispose();\n    },\n\n\n    testSorterAndFilter : function()\n    {\n      var sorter = function(a, b)\n      {\n        a = a.getName();\n        b = b.getName();\n        return a < b ? 1 : a > b ? -1 : 0;\n      };\n\n      var sortedModel = this.createModel(1);\n      var root = this.createModelAndSetModel(1);\n\n      // remove filtered node \"Node 2\"\n      sortedModel.getChildren().removeAt(2);\n\n      this.__sortModel(sortedModel, sorter);\n\n      var delegate = {\n        sorter : sorter,\n\n        filter : function(child) {\n          return child.getName() == \"Node 2\" ? false : true;\n        }\n      };\n      this.tree.setDelegate(delegate);\n      this.flush();\n\n      var expected = this.getVisibleItemsFrom(sortedModel, []);\n      qx.lang.Array.insertAt(expected, sortedModel, 0);\n\n      this.__testBuildLookupTable(expected);\n\n      //this.__logModel(sortedModel);\n      sortedModel.dispose();\n    },\n\n\n    __sortModel : function(model, sorter)\n    {\n      var children = model.getChildren();\n      children.sort(sorter);\n\n      for (var i = 0; i < children.getLength(); i++)\n      {\n        var child = children.getItem(i);\n\n        if (child instanceof qx.test.ui.tree.virtual.Node) {\n          this.__sortModel(child, sorter);\n        }\n      }\n    },\n\n\n    __testBuildLookupTable : function(expected)\n    {\n      var found = this.tree.getLookupTable().toArray();\n      var msg = \"Expected [\" + expected.join(\", \") +\n        \"], but found [\" + found.join(\", \") + \"]\";\n\n      this.assertEquals(expected.length, found.length, msg);\n      for (var i=0; i<expected.length; i++) {\n        this.assertTrue(expected[i].equals(found[i]), msg);\n      }\n      this.assertEquals(expected.length, this.tree.getPane().getRowConfig().getItemCount());\n    },\n\n\n    __testOrderNotChanged : function(expected, found)\n    {\n      var msg = \"Expected [\" + expected.join(\", \") +\n        \"], but found [\" + found.join(\", \") + \"]\";\n\n      this.assertEquals(expected.length, found.length, msg);\n      for (var i = 0; i < expected.length; i++) {\n        this.assertTrue(expected[i].equals(found[i]), msg);\n      }\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHOD TO LOG TREE MODEL\n    ---------------------------------------------------------------------------\n    */\n\n\n    __logModel : function(model, level)\n    {\n      level = level != null ? level : 0;\n\n      var prefix = \"\";\n      for (var i = 0; i < level; i++) {\n        prefix += \"-\";\n      }\n      console.log(prefix + \">\", model.getName());\n\n      if (model.getChildren == null) {\n        return;\n      }\n\n      var children = model.getChildren();\n      for (var i = 0; i < children.getLength(); i++) {\n        this.__logModel(children.getItem(i), level + 1);\n      }\n    }\n  }\n});\n"
  ]
}