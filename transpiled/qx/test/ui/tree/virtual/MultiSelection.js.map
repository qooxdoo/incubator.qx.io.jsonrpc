{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/MultiSelection.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "tree",
    "virtual",
    "AbstractTreeTest",
    "members",
    "setUp",
    "setSelectionMode",
    "testSelection",
    "root",
    "createModelAndSetModel",
    "selection",
    "getSelection",
    "push",
    "getChildren",
    "getItem",
    "assertEquals",
    "getLength",
    "expectedSelection",
    "data",
    "Array",
    "assertDataArrayEquals",
    "dispose",
    "selectionFromManager",
    "_manager",
    "i",
    "length",
    "_getDataFromRow",
    "testSelectionByUserInteraction",
    "replaceSelection",
    "assertTrue",
    "equals",
    "testSelectionEventByUserInteraction",
    "self",
    "assertEventFired",
    "e",
    "testSelectionAfterCloseParentNode",
    "parent",
    "openNode",
    "closeNode",
    "MultiSelection"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,wCAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBC,gBADnC;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,KAAK,EAAG,iBACR;AACE;AAEA,aAAKJ,IAAL,CAAUK,gBAAV,CAA2B,OAA3B;AACD,OANH;AAQEC,MAAAA,aAAa,EAAG,yBAChB;AACE,YAAIC,IAAI,GAAG,KAAKC,sBAAL,CAA4B,CAA5B,CAAX;AACA,YAAIC,SAAS,GAAG,KAAKT,IAAL,CAAUU,YAAV,EAAhB;AACAD,QAAAA,SAAS,CAACE,IAAV,CAAeJ,IAAf;AACAE,QAAAA,SAAS,CAACE,IAAV,CAAeJ,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAAf;AACAJ,QAAAA,SAAS,CAACE,IAAV,CAAeJ,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAAf,EALF,CAOE;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKd,IAAL,CAAUU,YAAV,GAAyBK,SAAzB,EAArB,EAA2D,SAA3D;AACA,YAAIC,iBAAiB,GAAG,IAAIzB,EAAE,CAAC0B,IAAH,CAAQC,KAAZ,CACxB,CACEX,IADF,EAEEA,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAFF,EAGEN,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAHF,CADwB,CAAxB;AAMA,aAAKM,qBAAL,CAA2BV,SAA3B,EAAsCO,iBAAtC,EAAyD,SAAzD;AACAA,QAAAA,iBAAiB,CAACI,OAAlB,GAhBF,CAkBE;;AACA,YAAIC,oBAAoB,GAAG,KAAKrB,IAAL,CAAUsB,QAAV,CAAmBZ,YAAnB,EAA3B;;AACA,aAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,oBAAoB,CAACG,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;AACpDF,UAAAA,oBAAoB,CAACE,CAAD,CAApB,GAA0B,KAAKvB,IAAL,CAAUyB,eAAV,CAA0BJ,oBAAoB,CAACE,CAAD,CAA9C,CAA1B;AACD;;AACD,aAAKT,YAAL,CAAkB,CAAlB,EAAqBO,oBAAoB,CAACG,MAA1C,EAAkD,sBAAlD;AACAR,QAAAA,iBAAiB,GAAG,IAAIzB,EAAE,CAAC0B,IAAH,CAAQC,KAAZ,CAAkBG,oBAAlB,CAApB;AACA,aAAKF,qBAAL,CAA2BV,SAA3B,EAAsCO,iBAAtC,EAAyD,sBAAzD;AACAA,QAAAA,iBAAiB,CAACI,OAAlB;AACD,OApCH;AAsCEM,MAAAA,8BAA8B,EAAG,0CACjC;AACE,YAAInB,IAAI,GAAG,KAAKC,sBAAL,CAA4B,CAA5B,CAAX;AACA,YAAIC,SAAS,GAAG,KAAKT,IAAL,CAAUU,YAAV,EAAhB;;AACA,aAAKV,IAAL,CAAUsB,QAAV,CAAmBK,gBAAnB,CAAoC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApC,EAHF,CAKE;;;AACA,YAAIN,oBAAoB,GAAG,KAAKrB,IAAL,CAAUsB,QAAV,CAAmBZ,YAAnB,EAA3B;;AACA,aAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,oBAAoB,CAACG,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;AACpDF,UAAAA,oBAAoB,CAACE,CAAD,CAApB,GAA0B,KAAKvB,IAAL,CAAUyB,eAAV,CAA0BJ,oBAAoB,CAACE,CAAD,CAA9C,CAA1B;AACD;;AACD,aAAKT,YAAL,CAAkB,CAAlB,EAAqBO,oBAAoB,CAACG,MAA1C,EAAkD,sBAAlD;AACA,YAAIR,iBAAiB,GAAG,IAAIzB,EAAE,CAAC0B,IAAH,CAAQC,KAAZ,CAAkBG,oBAAlB,CAAxB;AACA,aAAKO,UAAL,CAAgBnB,SAAS,CAACoB,MAAV,CAAiBb,iBAAjB,CAAhB,EAAqD,sBAArD;AACAA,QAAAA,iBAAiB,CAACI,OAAlB,GAbF,CAeE;;AACAJ,QAAAA,iBAAiB,GAAG,IAAIzB,EAAE,CAAC0B,IAAH,CAAQC,KAAZ,CACpB,CACEX,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CADF,EAEEN,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAFF,EAGEN,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAHF,CADoB,CAApB;AAMA,aAAKC,YAAL,CAAkB,CAAlB,EAAqBL,SAAS,CAACM,SAAV,EAArB,EAA4C,SAA5C;AACA,aAAKI,qBAAL,CAA2BV,SAA3B,EAAsCO,iBAAtC,EAAyD,SAAzD;AACAA,QAAAA,iBAAiB,CAACI,OAAlB;AACD,OAhEH;AAkEEU,MAAAA,mCAAmC,EAAG,+CACtC;AACE,YAAIvB,IAAI,GAAG,KAAKC,sBAAL,CAA4B,CAA5B,CAAX;AACA,YAAIC,SAAS,GAAG,KAAKT,IAAL,CAAUU,YAAV,EAAhB;AAEA,YAAIqB,IAAI,GAAG,IAAX;AACA,aAAKC,gBAAL,CAAsBvB,SAAtB,EAAiC,QAAjC,EACE,YACA;AACEsB,UAAAA,IAAI,CAAC/B,IAAL,CAAUsB,QAAV,CAAmBK,gBAAnB,CAAoC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApC;AACD,SAJH,EAKE,UAASM,CAAT,EACA;AACE;AACA,cAAIZ,oBAAoB,GAAGU,IAAI,CAAC/B,IAAL,CAAUsB,QAAV,CAAmBZ,YAAnB,EAA3B;;AACA,eAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,oBAAoB,CAACG,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;AACpDF,YAAAA,oBAAoB,CAACE,CAAD,CAApB,GAA0BQ,IAAI,CAAC/B,IAAL,CAAUyB,eAAV,CAA0BJ,oBAAoB,CAACE,CAAD,CAA9C,CAA1B;AACD;;AACDQ,UAAAA,IAAI,CAACjB,YAAL,CAAkB,CAAlB,EAAqBO,oBAAoB,CAACG,MAA1C,EAAkD,sBAAlD;AACA,cAAIR,iBAAiB,GAAG,IAAIzB,EAAE,CAAC0B,IAAH,CAAQC,KAAZ,CAAkBG,oBAAlB,CAAxB;AACAU,UAAAA,IAAI,CAACZ,qBAAL,CAA2BV,SAA3B,EAAsCO,iBAAtC,EAAyD,sBAAzD;AACAA,UAAAA,iBAAiB,CAACI,OAAlB,GATF,CAWE;;AACAW,UAAAA,IAAI,CAACjB,YAAL,CAAkB,CAAlB,EAAqBL,SAAS,CAACM,SAAV,EAArB,EAA4C,SAA5C;AACAC,UAAAA,iBAAiB,GAAG,IAAIzB,EAAE,CAAC0B,IAAH,CAAQC,KAAZ,CACpB,CACEX,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CADF,EAEEN,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAFF,EAGEN,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAHF,CADoB,CAApB;AAMAkB,UAAAA,IAAI,CAACZ,qBAAL,CAA2BV,SAA3B,EAAsCO,iBAAtC,EAAyD,SAAzD;AACAA,UAAAA,iBAAiB,CAACI,OAAlB;AACD,SA3BH;AA6BD,OArGH;AAuGEc,MAAAA,iCAAiC,EAAG,6CACpC;AACE,YAAI3B,IAAI,GAAG,KAAKC,sBAAL,CAA4B,CAA5B,CAAX;AAEA,YAAI2B,MAAM,GAAG5B,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAAb;AACA,aAAKb,IAAL,CAAUoC,QAAV,CAAmB7B,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAAnB;AAEA,YAAIJ,SAAS,GAAG,KAAKT,IAAL,CAAUU,YAAV,EAAhB;AACAD,QAAAA,SAAS,CAACE,IAAV,CAAeJ,IAAf;AACAE,QAAAA,SAAS,CAACE,IAAV,CAAeJ,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAAf;AACAJ,QAAAA,SAAS,CAACE,IAAV,CAAewB,MAAM,CAACvB,WAAP,GAAqBC,OAArB,CAA6B,CAA7B,CAAf;AACAJ,QAAAA,SAAS,CAACE,IAAV,CAAewB,MAAM,CAACvB,WAAP,GAAqBC,OAArB,CAA6B,CAA7B,CAAf;AACAJ,QAAAA,SAAS,CAACE,IAAV,CAAewB,MAAM,CAACvB,WAAP,GAAqBC,OAArB,CAA6B,CAA7B,CAAf;AACAJ,QAAAA,SAAS,CAACE,IAAV,CAAewB,MAAM,CAACvB,WAAP,GAAqBC,OAArB,CAA6B,CAA7B,CAAf;AACAJ,QAAAA,SAAS,CAACE,IAAV,CAAeJ,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAAf,EAbF,CAeE;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKd,IAAL,CAAUU,YAAV,GAAyBK,SAAzB,EAArB,EAA2D,SAA3D;AACA,aAAKD,YAAL,CAAkB,CAAlB,EAAqB,KAAKd,IAAL,CAAUsB,QAAV,CAAmBZ,YAAnB,GAAkCc,MAAvD,EAA+D,sBAA/D;AAEA,aAAKxB,IAAL,CAAUqC,SAAV,CAAoBF,MAApB,EAnBF,CAqBE;;AACA,aAAKrB,YAAL,CAAkB,CAAlB,EAAqB,KAAKd,IAAL,CAAUU,YAAV,GAAyBK,SAAzB,EAArB,EAA2D,SAA3D;AACA,YAAIC,iBAAiB,GAAG,IAAIzB,EAAE,CAAC0B,IAAH,CAAQC,KAAZ,CACxB,CACEX,IADF,EAEEA,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAFF,EAGEN,IAAI,CAACK,WAAL,GAAmBC,OAAnB,CAA2B,CAA3B,CAHF,CADwB,CAAxB;AAMA,aAAKM,qBAAL,CAA2BV,SAA3B,EAAsCO,iBAAtC,EAAyD,SAAzD;AACAA,QAAAA,iBAAiB,CAACI,OAAlB,GA9BF,CAgCE;;AACA,YAAIC,oBAAoB,GAAG,KAAKrB,IAAL,CAAUsB,QAAV,CAAmBZ,YAAnB,EAA3B;;AACA,aAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,oBAAoB,CAACG,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;AACpDF,UAAAA,oBAAoB,CAACE,CAAD,CAApB,GAA0B,KAAKvB,IAAL,CAAUyB,eAAV,CAA0BJ,oBAAoB,CAACE,CAAD,CAA9C,CAA1B;AACD;;AACD,aAAKT,YAAL,CAAkB,CAAlB,EAAqBO,oBAAoB,CAACG,MAA1C,EAAkD,sBAAlD;AACAR,QAAAA,iBAAiB,GAAG,IAAIzB,EAAE,CAAC0B,IAAH,CAAQC,KAAZ,CAAkBG,oBAAlB,CAApB;AACA,aAAKF,qBAAL,CAA2BV,SAA3B,EAAsCO,iBAAtC,EAAyD,sBAAzD;AACAA,QAAAA,iBAAiB,CAACI,OAAlB;AACD;AAjJH;AAJF,GADA;AAlBA7B,EAAAA,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBqC,cAAxB,CAAuC5C,aAAvC,GAAuDA,aAAvD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.tree.virtual.MultiSelection\",\n{\n  extend : qx.test.ui.tree.virtual.AbstractTreeTest,\n\n  members :\n  {\n    setUp : function()\n    {\n      this.base(arguments);\n\n      this.tree.setSelectionMode(\"multi\");\n    },\n\n    testSelection : function()\n    {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n      selection.push(root);\n      selection.push(root.getChildren().getItem(0));\n      selection.push(root.getChildren().getItem(1));\n\n      // check selection on tree\n      this.assertEquals(3, this.tree.getSelection().getLength(), \"On Tree\");\n      var expectedSelection = new qx.data.Array(\n      [\n        root,\n        root.getChildren().getItem(0),\n        root.getChildren().getItem(1)\n      ]);\n      this.assertDataArrayEquals(selection, expectedSelection, \"On Tree\");\n      expectedSelection.dispose();\n\n      // check selection on manager\n      var selectionFromManager = this.tree._manager.getSelection();\n      for (var i = 0; i < selectionFromManager.length; i++) {\n        selectionFromManager[i] = this.tree._getDataFromRow(selectionFromManager[i]);\n      }\n      this.assertEquals(3, selectionFromManager.length, \"On selection manager\");\n      expectedSelection = new qx.data.Array(selectionFromManager);\n      this.assertDataArrayEquals(selection, expectedSelection, \"On selection manager\");\n      expectedSelection.dispose();\n    },\n\n    testSelectionByUserInteraction : function()\n    {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n      this.tree._manager.replaceSelection([1, 3, 5]);\n\n      // check selection on manager\n      var selectionFromManager = this.tree._manager.getSelection();\n      for (var i = 0; i < selectionFromManager.length; i++) {\n        selectionFromManager[i] = this.tree._getDataFromRow(selectionFromManager[i]);\n      }\n      this.assertEquals(3, selectionFromManager.length, \"On selection manager\");\n      var expectedSelection = new qx.data.Array(selectionFromManager);\n      this.assertTrue(selection.equals(expectedSelection), \"On selection manager\");\n      expectedSelection.dispose();\n\n      // check selection on tree\n      expectedSelection = new qx.data.Array(\n      [\n        root.getChildren().getItem(0),\n        root.getChildren().getItem(2),\n        root.getChildren().getItem(4)\n      ]);\n      this.assertEquals(3, selection.getLength(), \"On Tree\");\n      this.assertDataArrayEquals(selection, expectedSelection, \"On Tree\");\n      expectedSelection.dispose();\n    },\n\n    testSelectionEventByUserInteraction : function()\n    {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n\n      var self = this;\n      this.assertEventFired(selection, \"change\",\n        function()\n        {\n          self.tree._manager.replaceSelection([1, 3, 5]);\n        },\n        function(e)\n        {\n          // check selection on manager\n          var selectionFromManager = self.tree._manager.getSelection();\n          for (var i = 0; i < selectionFromManager.length; i++) {\n            selectionFromManager[i] = self.tree._getDataFromRow(selectionFromManager[i]);\n          }\n          self.assertEquals(3, selectionFromManager.length, \"On selection manager\");\n          var expectedSelection = new qx.data.Array(selectionFromManager);\n          self.assertDataArrayEquals(selection, expectedSelection, \"On selection manager\");\n          expectedSelection.dispose();\n\n          // check selection on tree\n          self.assertEquals(3, selection.getLength(), \"On Tree\");\n          expectedSelection = new qx.data.Array(\n          [\n            root.getChildren().getItem(0),\n            root.getChildren().getItem(2),\n            root.getChildren().getItem(4)\n          ]);\n          self.assertDataArrayEquals(selection, expectedSelection, \"On Tree\");\n          expectedSelection.dispose();\n        }\n      );\n    },\n\n    testSelectionAfterCloseParentNode : function()\n    {\n      var root = this.createModelAndSetModel(3);\n\n      var parent = root.getChildren().getItem(1);\n      this.tree.openNode(root.getChildren().getItem(1));\n\n      var selection = this.tree.getSelection();\n      selection.push(root);\n      selection.push(root.getChildren().getItem(0));\n      selection.push(parent.getChildren().getItem(1));\n      selection.push(parent.getChildren().getItem(3));\n      selection.push(parent.getChildren().getItem(5));\n      selection.push(parent.getChildren().getItem(6));\n      selection.push(root.getChildren().getItem(2));\n\n      // check selection before close parent\n      this.assertEquals(7, this.tree.getSelection().getLength(), \"On Tree\");\n      this.assertEquals(7, this.tree._manager.getSelection().length, \"On selection manager\");\n\n      this.tree.closeNode(parent);\n\n      // check selection on tree\n      this.assertEquals(3, this.tree.getSelection().getLength(), \"On Tree\");\n      var expectedSelection = new qx.data.Array(\n      [\n        root,\n        root.getChildren().getItem(0),\n        root.getChildren().getItem(2)\n      ]);\n      this.assertDataArrayEquals(selection, expectedSelection, \"On Tree\");\n      expectedSelection.dispose();\n\n      // check selection on manager\n      var selectionFromManager = this.tree._manager.getSelection();\n      for (var i = 0; i < selectionFromManager.length; i++) {\n        selectionFromManager[i] = this.tree._getDataFromRow(selectionFromManager[i]);\n      }\n      this.assertEquals(3, selectionFromManager.length, \"On selection manager\");\n      expectedSelection = new qx.data.Array(selectionFromManager);\n      this.assertDataArrayEquals(selection, expectedSelection, \"On selection manager\");\n      expectedSelection.dispose();\n    }\n  }\n});\n"
  ]
}