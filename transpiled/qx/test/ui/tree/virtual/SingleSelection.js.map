{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/SingleSelection.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "tree",
    "virtual",
    "AbstractTreeTest",
    "members",
    "testSelection",
    "root",
    "createModelAndSetModel",
    "selection",
    "getSelection",
    "push",
    "assertEquals",
    "getLength",
    "getItem",
    "row",
    "_manager",
    "getSelectedItem",
    "testInvalidSelection",
    "getChildren",
    "length",
    "testSelectionByUserInteraction",
    "selectItem",
    "testSelectionEventByUserInteraction",
    "that",
    "assertEventFired",
    "e",
    "testSelectionWithClosedNode",
    "parent",
    "itemToSelect",
    "openNode",
    "selectionOnManager",
    "getLookupTable",
    "indexOf",
    "closeNode",
    "testRemoveItem",
    "removeAt",
    "dispose",
    "SingleSelection"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.tree.virtual.SingleSelection\",\n{\n  extend : qx.test.ui.tree.virtual.AbstractTreeTest,\n\n  members :\n  {\n    testSelection : function()\n    {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n      selection.push(root);\n\n      // check selection from list\n      this.assertEquals(1, this.tree.getSelection().getLength(), \"On Tree\");\n      this.assertEquals(root, selection.getItem(0), \"On Tree\");\n\n      // check selection from manager\n      var row = this.tree._manager.getSelectedItem();\n      this.assertEquals(0, row);\n    },\n\n\n    testInvalidSelection : function()\n    {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n      selection.push(root);\n      selection.push(root.getChildren().getItem(0));\n\n      // check selection from list\n      this.assertEquals(1, this.tree.getSelection().getLength(), \"On Tree\");\n      this.assertEquals(root.getChildren().getItem(0), selection.getItem(0), \"On Tree\");\n\n      // check selection from manager\n      var selection = this.tree._manager.getSelection();\n      this.assertEquals(1, selection.length);\n      this.assertEquals(1, selection[0]);\n    },\n\n\n    testSelectionByUserInteraction : function()\n    {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n\n      this.tree._manager.selectItem(2);\n\n      this.assertEquals(1, selection.getLength());\n      this.assertEquals(root.getChildren().getItem(1), selection.getItem(0));\n      this.assertEquals(2, this.tree._manager.getSelectedItem());\n    },\n\n\n    testSelectionEventByUserInteraction : function()\n    {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n\n      var that = this;\n      this.assertEventFired(selection, \"change\",\n        function() {\n          that.tree._manager.selectItem(2);\n        },\n        function(e)\n        {\n          that.assertEquals(1, selection.getLength());\n          that.assertEquals(root.getChildren().getItem(1), selection.getItem(0));\n          that.assertEquals(2, that.tree._manager.getSelectedItem());\n        }\n      );\n    },\n\n\n    testSelectionWithClosedNode : function()\n    {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n\n      var parent = root.getChildren().getItem(0);\n      var itemToSelect = parent.getChildren().getItem(2);\n      this.tree.openNode(parent);\n      selection.push(itemToSelect);\n\n      // check selection from tree\n      this.assertEquals(1, selection.getLength(), \"On Tree\");\n      this.assertEquals(itemToSelect, selection.getItem(0), \"On Tree\");\n\n      // check selection from manager\n      var selectionOnManager = this.tree._manager.getSelection();\n      this.assertEquals(1, selectionOnManager.length);\n      this.assertEquals(this.tree.getLookupTable().indexOf(itemToSelect), selectionOnManager[0]);\n\n      this.tree.closeNode(parent);\n      var selectionOnManager = this.tree._manager.getSelection();\n      this.assertEquals(0, selection.getLength(), \"Selection not reset on Tree\");\n      this.assertEquals(0, selectionOnManager.length, \"Selection not reset on manager\");\n    },\n\n\n    testRemoveItem : function()\n    {\n      var root = this.createModelAndSetModel(2);\n      var selection = this.tree.getSelection();\n\n      var parent = root.getChildren().getItem(0);\n      var itemToSelect = parent.getChildren().getItem(2);\n      this.tree.openNode(parent);\n      selection.push(itemToSelect);\n\n      // check selection from tree before remove item\n      this.assertEquals(1, selection.getLength(), \"On Tree (setup)\");\n      this.assertEquals(itemToSelect, selection.getItem(0), \"On Tree (setup)\");\n\n      // remove selected item\n      parent.getChildren().removeAt(2).dispose();\n\n      // check selection from list\n      this.assertEquals(0, selection.getLength(), \"On Tree\");\n\n      // check selection from manager\n      var selectionOnManager = this.tree._manager.getSelection();\n      this.assertEquals(0, selectionOnManager.length, \"On Manager\");\n    }\n  }\n});\n"
  ]
}