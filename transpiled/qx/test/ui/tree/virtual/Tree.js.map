{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/Tree.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "tree",
    "virtual",
    "AbstractTreeTest",
    "members",
    "testCreation",
    "assertEquals",
    "getAppearance",
    "assertTrue",
    "getFocusable",
    "getWidth",
    "getHeight",
    "getItemHeight",
    "getPane",
    "getRowConfig",
    "getDefaultItemSize",
    "getOpenMode",
    "assertFalse",
    "getHideRoot",
    "assertNull",
    "getModel",
    "getLabelPath",
    "getIconPath",
    "getLabelOptions",
    "getIconOptions",
    "getDelegate",
    "getChildProperty",
    "hasListener",
    "testCreationWithParams",
    "destroy",
    "model",
    "createModel",
    "VirtualTree",
    "getRoot",
    "add",
    "dispose",
    "testSetItemHeight",
    "setItemHeight",
    "testSetModel",
    "createModelAndSetModel",
    "testResetModel",
    "oldModel",
    "resetModel",
    "testExceptionOnSetModel",
    "that",
    "assertException",
    "setModel",
    "Error",
    "testBuildLookupTable",
    "root",
    "expected",
    "getVisibleItemsFrom",
    "lang",
    "Array",
    "insertAt",
    "__testBuildLookupTable",
    "testBuildLookupTableWithOpenNodes",
    "nodesToOpen",
    "getChildren",
    "getItem",
    "__openNodes",
    "testBuildLookupTableWithRemovedNodes",
    "closeNode",
    "length",
    "pop",
    "testBuildLookupTableWithClosedRoot",
    "testBuildLookupTableWithNoModel",
    "testBuildLookupTableOnModelChange",
    "newBranch",
    "Node",
    "_createNodes",
    "push",
    "testBuildLookupTableWithHiddenRoot",
    "setHideRoot",
    "testBuildLookupWithoutLeafs",
    "setShowLeafs",
    "allVisibleItems",
    "i",
    "item",
    "isNode",
    "assertArrayEquals",
    "getLookupTable",
    "toArray",
    "getItemCount",
    "testChangeBubblesAddChild",
    "spy",
    "leaf",
    "Leaf",
    "assertCalledOnce",
    "assertCalledTwice",
    "testChangeBubblesReplaceChildren",
    "helper",
    "setChildren",
    "data",
    "setAutoDisposeItems",
    "testChangeBubblesRemoveItems",
    "removed",
    "removeAll",
    "__disposeChildren",
    "testChangeBubblesChangeProperty",
    "setName",
    "assertNotCalled",
    "testNoChangeBubblesAddChild",
    "newItem",
    "testGetOpenNodes",
    "getOpenNodes",
    "testIsNodeOpen",
    "isNodeOpen",
    "testOpenNode",
    "openNode",
    "testCloseNode",
    "testCloseNodeWithRoot",
    "testOpenNodeWithParents",
    "expectedOpen",
    "openNodeAndParents",
    "openNodes",
    "includes",
    "testIsNode",
    "testGetLevel",
    "getLevel",
    "__getRowFrom",
    "testGetLevelWithHiddenRoot",
    "excpected",
    "testHasChildren",
    "hasChildren",
    "node",
    "testHasChildrenHideLeafs",
    "_createLeafs",
    "testSetOpenModeWithTap",
    "setOpenMode",
    "__testOpenMode",
    "resetOpenMode",
    "testSetOpenModeWithNone",
    "dbltap",
    "tap",
    "pane",
    "testFilter",
    "filterNode",
    "setLabelPath",
    "setChildProperty",
    "delegate",
    "filter",
    "child",
    "getName",
    "setDelegate",
    "flush",
    "splice",
    "testOpenNodeWithoutScrolling",
    "core",
    "queue",
    "Manager",
    "item4_4",
    "setSelection",
    "scrollY",
    "getScrollY",
    "openNodeWithoutScrolling",
    "assertNotEquals",
    "indexOf",
    "nodes",
    "nativeArray",
    "Tree"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * @ignore(qx.test.ui.tree.virtual.Leaf)\n * @ignore(qx.test.ui.tree.virtual.Node)\n */\n\nqx.Class.define(\"qx.test.ui.tree.virtual.Tree\",\n{\n  extend : qx.test.ui.tree.virtual.AbstractTreeTest,\n\n  members :\n  {\n    testCreation : function()\n    {\n      this.assertEquals(\"virtual-tree\", this.tree.getAppearance(), \"Init value for 'appearance' is wrong!\");\n      this.assertTrue(this.tree.getFocusable(), \"Init value for 'focusable' is wrong!\");\n      this.assertEquals(100, this.tree.getWidth(), \"Init value for 'width' is wrong!\");\n      this.assertEquals(200, this.tree.getHeight(), \"Init value for 'height' is wrong!\");\n      this.assertEquals(25, this.tree.getItemHeight(), \"Init value for 'itemHeight' is wrong!\");\n      this.assertEquals(25, this.tree.getPane().getRowConfig().getDefaultItemSize(), \"Init value for 'itemHeight' is wrong!\");\n      this.assertEquals(\"dbltap\", this.tree.getOpenMode(), \"Init value for 'openMode' is wrong!\");\n      this.assertFalse(this.tree.getHideRoot(), \"Init value for 'hideRoot' is wrong!\");\n      this.assertNull(this.tree.getModel(), \"Init value for 'model' is wrong!\");\n      this.assertNull(this.tree.getLabelPath(), \"Init value for 'labelPath' is wrong!\");\n      this.assertNull(this.tree.getIconPath(), \"Init value for 'iconPath' is wrong!\");\n      this.assertNull(this.tree.getLabelOptions(), \"Init value for 'labelOptions' is wrong!\");\n      this.assertNull(this.tree.getIconOptions(), \"Init value for 'iconOptions' is wrong!\");\n      this.assertNull(this.tree.getDelegate(), \"Init value for 'delegate' is wrong!\");\n      this.assertNull(this.tree.getChildProperty(), \"Init value for 'childProperty' is wrong!\");\n      this.assertTrue(this.tree.getPane().hasListener(\"cellDbltap\"), \"Init listener 'cellDbltap' is wrong!\");\n    },\n\n\n    testCreationWithParams : function()\n    {\n      this.tree.destroy();\n\n      var model = this.createModel(0);\n      this.tree = new qx.ui.tree.VirtualTree(model, \"name\", \"children\");\n      this.getRoot().add(this.tree);\n\n      this.assertEquals(model, this.tree.getModel(), \"Init value for 'model' is wrong!\");\n      this.assertEquals(\"name\", this.tree.getLabelPath(), \"Init value for 'labelPath' is wrong!\");\n      this.assertEquals(\"children\", this.tree.getChildProperty(), \"Init value for 'childProperty' is wrong!\");\n      model.dispose();\n    },\n\n\n    testSetItemHeight : function()\n    {\n      this.tree.setItemHeight(30);\n      this.assertEquals(30, this.tree.getPane().getRowConfig().getDefaultItemSize());\n    },\n\n\n    testSetModel : function()\n    {\n      var model = this.createModelAndSetModel(0);\n      this.assertEquals(model, this.tree.getModel());\n    },\n\n\n    testResetModel : function()\n    {\n      var oldModel = this.tree.getModel();\n\n      this.createModelAndSetModel(0);\n\n      this.tree.resetModel();\n      this.assertEquals(oldModel, this.tree.getModel());\n    },\n\n\n    testExceptionOnSetModel : function()\n    {\n      var model = this.createModel(0);\n\n      var that = this;\n      this.assertException(function() {\n        that.tree.setModel(model);\n      }, Error, \"Could not build tree, because 'childProperty' and/or 'labelPath' is 'null'!\");\n      model.dispose();\n    },\n\n\n    testBuildLookupTable : function()\n    {\n      var root = this.createModelAndSetModel(2);\n\n      var expected = this.getVisibleItemsFrom(root, [root]);\n      qx.lang.Array.insertAt(expected, root, 0);\n\n      this.__testBuildLookupTable(expected);\n    },\n\n\n    testBuildLookupTableWithOpenNodes : function()\n    {\n      var root = this.createModelAndSetModel(3);\n\n      var nodesToOpen = [\n        root,\n        root.getChildren().getItem(4),\n        root.getChildren().getItem(4).getChildren().getItem(2)\n      ];\n      this.__openNodes(nodesToOpen);\n\n      var expected = this.getVisibleItemsFrom(root, nodesToOpen);\n      qx.lang.Array.insertAt(expected, root, 0);\n\n      this.__testBuildLookupTable(expected);\n    },\n\n\n    testBuildLookupTableWithRemovedNodes : function()\n    {\n      var root = this.createModelAndSetModel(3);\n\n      var nodesToOpen = [\n        root,\n        root.getChildren().getItem(4),\n        root.getChildren().getItem(4).getChildren().getItem(2)\n      ];\n      this.__openNodes(nodesToOpen);\n\n      this.tree.closeNode(nodesToOpen[nodesToOpen.length - 1]);\n      nodesToOpen.pop();\n\n      var expected = this.getVisibleItemsFrom(root, nodesToOpen);\n      qx.lang.Array.insertAt(expected, root, 0);\n\n      this.__testBuildLookupTable(expected);\n    },\n\n\n    testBuildLookupTableWithClosedRoot : function()\n    {\n      var root = this.createModelAndSetModel(1);\n\n      this.tree.closeNode(root);\n      this.__testBuildLookupTable([root]);\n    },\n\n\n    testBuildLookupTableWithNoModel : function()\n    {\n      this.createModelAndSetModel(1);\n\n      this.tree.setModel(null);\n      this.__testBuildLookupTable([]);\n    },\n\n\n    testBuildLookupTableOnModelChange : function()\n    {\n      var root = this.createModelAndSetModel(1);\n\n      var nodesToOpen = [\n        root,\n        root.getChildren().getItem(2)\n      ];\n      this.__openNodes(nodesToOpen);\n\n      var newBranch = new qx.test.ui.tree.virtual.Node(\"New Branch\");\n      this._createNodes(newBranch, 2);\n      root.getChildren().getItem(2).getChildren().push(newBranch);\n\n      var expected = this.getVisibleItemsFrom(root, nodesToOpen);\n      qx.lang.Array.insertAt(expected, root, 0);\n\n      this.__testBuildLookupTable(expected);\n    },\n\n\n    testBuildLookupTableWithHiddenRoot : function()\n    {\n      var root = this.createModelAndSetModel(1);\n\n      this.tree.setHideRoot(true);\n\n      var expected = this.getVisibleItemsFrom(root, [root]);\n      this.__testBuildLookupTable(expected);\n    },\n\n\n    testBuildLookupWithoutLeafs : function()\n    {\n      var root = this.createModelAndSetModel(2);\n\n      var nodesToOpen = [\n        root,\n        root.getChildren().getItem(2)\n      ];\n      this.__openNodes(nodesToOpen);\n\n      this.tree.setShowLeafs(false);\n\n      var allVisibleItems = this.getVisibleItemsFrom(root, nodesToOpen);\n      qx.lang.Array.insertAt(allVisibleItems, root, 0);\n\n      var expected = [];\n      for (var i = 0; i < allVisibleItems.length; i++)\n      {\n        var item = allVisibleItems[i];\n        if (this.tree.isNode(item)) {\n          expected.push(item);\n        }\n      }\n      this.__testBuildLookupTable(expected);\n    },\n\n\n    __testBuildLookupTable : function(expected)\n    {\n      this.assertArrayEquals(expected, this.tree.getLookupTable().toArray());\n      this.assertEquals(expected.length, this.tree.getPane().getRowConfig().getItemCount());\n    },\n\n\n    testChangeBubblesAddChild : function()\n    {\n      var root = this.createModelAndSetModel(2);\n\n      var spy = this.spy(this.tree, \"buildLookupTable\");\n      var leaf = new qx.test.ui.tree.virtual.Leaf(\"New Leaf\");\n      root.getChildren().push(leaf);\n      this.assertCalledOnce(spy);\n\n      leaf = new qx.test.ui.tree.virtual.Leaf(\"New Leaf\");\n      root.getChildren().getItem(2).getChildren().push(leaf);\n      this.assertCalledTwice(spy);\n    },\n\n\n    testChangeBubblesReplaceChildren : function()\n    {\n      var root = this.createModelAndSetModel(2);\n\n      var spy = this.spy(this.tree, \"buildLookupTable\");\n      var leaf = new qx.test.ui.tree.virtual.Leaf(\"New Leaf\");\n      var helper = root.getChildren().getItem(2).getChildren();\n      root.getChildren().getItem(2).setChildren(new qx.data.Array([leaf]));\n      this.assertCalledOnce(spy);\n      helper.setAutoDisposeItems(true);\n      helper.dispose();\n\n      leaf = new qx.test.ui.tree.virtual.Leaf(\"New Leaf\");\n      helper = root.getChildren();\n      root.setChildren(new qx.data.Array([leaf]));\n      this.assertCalledTwice(spy);\n      helper.setAutoDisposeItems(true);\n      helper.dispose();\n    },\n\n\n    testChangeBubblesRemoveItems : function()\n    {\n      var root = this.createModelAndSetModel(2);\n\n      var spy = this.spy(this.tree, \"buildLookupTable\");\n      var removed = root.getChildren().getItem(2).getChildren().removeAll();\n      this.__disposeChildren(removed);\n      this.assertCalledOnce(spy);\n\n      removed = root.getChildren().removeAll();\n      this.__disposeChildren(removed);\n      this.assertCalledTwice(spy);\n    },\n\n\n    testChangeBubblesChangeProperty : function()\n    {\n      var root = this.createModelAndSetModel(2);\n\n      var spy = this.spy(this.tree, \"buildLookupTable\");\n      root.setName(\"Gülleman\");\n      this.assertNotCalled(spy);\n\n      root.getChildren().getItem(2).setName(\"Gülleman\");\n      this.assertNotCalled(spy);\n    },\n\n\n    testNoChangeBubblesAddChild : function()\n    {\n      var root = this.createModelAndSetModel(3);\n\n      var spy = this.spy(this.tree, \"buildLookupTable\");\n\n      var newItem = new qx.test.ui.tree.virtual.Node(\"test\");\n      root.getChildren().getItem(2).getChildren().getItem(0).getChildren().push(newItem);\n      this.assertNotCalled(spy);\n    },\n\n\n    testGetOpenNodes : function()\n    {\n      var root = this.createModelAndSetModel(1);\n      this.assertArrayEquals([root], this.tree.getOpenNodes());\n    },\n\n\n    testIsNodeOpen : function()\n    {\n      var root = this.createModelAndSetModel(2);\n\n      var nodesToOpen = [\n        root,\n        root.getChildren().getItem(0)\n      ];\n      this.__openNodes(nodesToOpen);\n\n      this.assertTrue(this.tree.isNodeOpen(nodesToOpen[0]));\n      this.assertTrue(this.tree.isNodeOpen(nodesToOpen[1]));\n      this.assertFalse(this.tree.isNodeOpen(root.getChildren().getItem(1)));\n    },\n\n\n    testOpenNode : function()\n    {\n      var root = this.createModelAndSetModel(3);\n\n      var nodesToOpen = [\n        root,\n        root.getChildren().getItem(0)\n      ];\n\n      this.__openNodes(nodesToOpen);\n      this.assertArrayEquals(nodesToOpen, this.tree.getOpenNodes());\n\n      this.tree.openNode(nodesToOpen[1]);\n      this.assertArrayEquals(nodesToOpen, this.tree.getOpenNodes());\n    },\n\n\n    testCloseNode : function()\n    {\n      var root = this.createModelAndSetModel(2);\n\n      var nodesToOpen = [\n        root,\n        root.getChildren().getItem(0)\n      ];\n\n      this.__openNodes(nodesToOpen);\n      this.assertArrayEquals(nodesToOpen, this.tree.getOpenNodes());\n\n      this.tree.closeNode(nodesToOpen[1]);\n      nodesToOpen.pop();\n      this.assertArrayEquals(nodesToOpen, this.tree.getOpenNodes());\n    },\n\n\n    testCloseNodeWithRoot : function()\n    {\n      var root = this.createModelAndSetModel(2);\n\n      var nodesToOpen = [\n        root,\n        root.getChildren().getItem(0)\n      ];\n\n      this.__openNodes(nodesToOpen);\n      this.assertArrayEquals(nodesToOpen, this.tree.getOpenNodes());\n\n      this.tree.closeNode(nodesToOpen[1]);\n      this.tree.closeNode(nodesToOpen[0]);\n      this.assertArrayEquals([], this.tree.getOpenNodes());\n    },\n\n\n    testOpenNodeWithParents : function()\n    {\n      var root = this.createModelAndSetModel(3);\n\n      var expectedOpen = [\n        root,\n        root.getChildren().getItem(4),\n        root.getChildren().getItem(4).getChildren().getItem(4),\n        root.getChildren().getItem(4).getChildren().getItem(4).getChildren().getItem(4)\n      ];\n      this.tree.openNodeAndParents(expectedOpen[3]);\n\n      var openNodes = this.tree.getOpenNodes();\n      this.assertEquals(expectedOpen.length, openNodes.length);\n      for (var i = 0; i < expectedOpen.length; i++) {\n        this.assertTrue(openNodes.includes(expectedOpen[i]));\n      }\n    },\n\n\n    testIsNode : function()\n    {\n      var root = this.createModelAndSetModel(3);\n\n      this.assertTrue(this.tree.isNode(root));\n      this.assertTrue(this.tree.isNode(root.getChildren().getItem(4)));\n      this.assertTrue(this.tree.isNode(root.getChildren().getItem(4).getChildren().getItem(4)));\n      this.assertTrue(this.tree.isNode(root.getChildren().getItem(4).getChildren().getItem(4).getChildren().getItem(4)));\n      this.assertFalse(this.tree.isNode(root.getChildren().getItem(4).getChildren().getItem(4).getChildren().getItem(4).getChildren().getItem(4)));\n    },\n\n\n    testGetLevel : function()\n    {\n      var root = this.createModelAndSetModel(3);\n\n      var nodesToOpen = [\n        root,\n        root.getChildren().getItem(2),\n        root.getChildren().getItem(2).getChildren().getItem(3),\n        root.getChildren().getItem(2).getChildren().getItem(3).getChildren().getItem(1)\n      ];\n      this.__openNodes(nodesToOpen);\n\n      this.assertEquals(0, this.tree.getLevel(this.__getRowFrom(nodesToOpen[0])));\n      this.assertEquals(1, this.tree.getLevel(this.__getRowFrom(nodesToOpen[1])));\n      this.assertEquals(2, this.tree.getLevel(this.__getRowFrom(nodesToOpen[2])));\n      this.assertEquals(3, this.tree.getLevel(this.__getRowFrom(nodesToOpen[3])));\n      this.assertEquals(4, this.tree.getLevel(this.__getRowFrom(nodesToOpen[3].getChildren().getItem(4))));\n    },\n\n\n    testGetLevelWithHiddenRoot : function()\n    {\n      var root = this.createModelAndSetModel(1);\n      this.tree.openNode(root.getChildren().getItem(4));\n      this.tree.setHideRoot(true);\n\n      var excpected = [\n        root.getChildren().getItem(4),\n        root.getChildren().getItem(4).getChildren().getItem(2)\n      ];\n\n      this.assertEquals(0, this.tree.getLevel(this.__getRowFrom(excpected[0])));\n      this.assertEquals(1, this.tree.getLevel(this.__getRowFrom(excpected[1])));\n    },\n\n\n    testHasChildren : function()\n    {\n      var root = this.createModelAndSetModel(1);\n      this.assertTrue(this.tree.hasChildren(root));\n\n      var node = new qx.test.ui.tree.virtual.Node(\"Node\");\n      this.assertFalse(this.tree.hasChildren(node));\n      node.dispose();\n    },\n\n\n    testHasChildrenHideLeafs : function()\n    {\n      var root = this.createModelAndSetModel(2);\n      this.tree.setShowLeafs(false);\n      this.assertTrue(this.tree.hasChildren(root));\n      this.tree.openNode(root.getChildren().getItem(0));\n      this.assertTrue(this.tree.hasChildren(root.getChildren().getItem(0)));\n\n      var node = new qx.test.ui.tree.virtual.Node(\"Node\");\n      this._createLeafs(node, 1);\n      this.assertFalse(this.tree.hasChildren(node));\n      node.dispose();\n\n      var node = new qx.test.ui.tree.virtual.Node(\"Node\");\n      this.assertFalse(this.tree.hasChildren(node));\n      node.dispose();\n    },\n\n\n    testSetOpenModeWithTap : function()\n    {\n      this.tree.setOpenMode(\"tap\");\n      this.__testOpenMode(false, true);\n\n      this.tree.resetOpenMode();\n      this.__testOpenMode(true, false);\n    },\n\n\n    testSetOpenModeWithNone : function()\n    {\n      this.tree.setOpenMode(\"none\");\n      this.__testOpenMode(false, false);\n\n      this.tree.resetOpenMode();\n      this.__testOpenMode(true, false);\n    },\n\n\n    __testOpenMode : function(dbltap, tap)\n    {\n      var pane = this.tree.getPane();\n      this.assertEquals(\n        dbltap,\n        pane.hasListener(\"cellDbltap\"),\n        \"Expected \" + (dbltap ? \"\" : \"no \") + \" listener for 'cellDbltap'!\"\n      );\n      this.assertEquals(\n        tap,\n        pane.hasListener(\"cellTap\"),\n        \"Expected \" + (tap ? \"\" : \"no \") + \" listener for 'cellTap'!\"\n      );\n    },\n\n\n    testFilter : function()\n    {\n      var filterNode = \"Node 2\";\n      var root = this.model = this.createModel(1);\n\n      this.tree.setLabelPath(\"name\");\n      this.tree.setChildProperty(\"children\");\n\n      var delegate = {\n        filter : function(child) {\n          return child.getName() == filterNode ? false : true;\n        }\n      };\n\n      this.tree.setDelegate(delegate);\n      this.tree.setModel(root);\n      this.flush();\n\n      // Get array of child elements of root expect the filtered one\n      var expected = this.getVisibleItemsFrom(root, [root]);\n      for (var i=0; i < expected.length; i++) {\n        if (expected[i].getName() == filterNode){\n          expected.splice(i, 1);\n        }\n      };\n\n      qx.lang.Array.insertAt(expected, root, 0);\n\n      this.assertArrayEquals(expected, this.tree.getLookupTable().toArray());\n    },\n\n\n    testOpenNodeWithoutScrolling : function()\n    {\n      var root = this.createModelAndSetModel(1);\n      qx.ui.core.queue.Manager.flush();\n\n      // open and select the fifth leaf of fifth branch\n      var item4_4 = root.getChildren().getItem(4).getChildren().getItem(4);\n      this.tree.openNodeAndParents(item4_4);\n      this.tree.setSelection(new qx.data.Array([item4_4]));\n      qx.ui.core.queue.Manager.flush();\n\n      // store y scroll position\n      var scrollY = this.tree.getScrollY();\n\n      // open third node without auto scrolling\n      this.tree.openNodeWithoutScrolling(root.getChildren().getItem(2));\n      qx.ui.core.queue.Manager.flush();\n\n      // check scroll y position\n      this.assertEquals(this.tree.getScrollY(), scrollY, \"Y position of scroller must not be changed\");\n\n      // close the third node, but use API to automatically scroll selected into view\n      this.tree.closeNode(root.getChildren().getItem(2));\n      qx.ui.core.queue.Manager.flush();\n\n      // check scroll y position\n      this.assertNotEquals(this.tree.getScrollY(), scrollY, \"Y position of scroller must be changed\");\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHOD TO CALCULATE THE VISIBLE ITEMS\n    ---------------------------------------------------------------------------\n    */\n\n\n    __getRowFrom : function(item) {\n      return this.tree.getLookupTable().indexOf(item);\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHOD TO OPEN NODES ON TREE\n    ---------------------------------------------------------------------------\n    */\n\n\n    __openNodes : function(nodes)\n    {\n      for (var i = 0; i < nodes.length; i++) {\n        this.tree.openNodeWithoutScrolling(nodes[i]);\n      }\n    },\n\n\n    __disposeChildren : function(nativeArray)\n    {\n      for (var i=0; i<nativeArray.length; i++) {\n        nativeArray[i].dispose();\n      }\n    }\n  }\n});\n"
  ]
}