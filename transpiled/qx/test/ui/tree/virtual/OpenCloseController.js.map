{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/tree/virtual/OpenCloseController.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "implement",
    "ui",
    "tree",
    "core",
    "IVirtualTree",
    "include",
    "MMock",
    "events",
    "open",
    "close",
    "properties",
    "openProperty",
    "check",
    "init",
    "members",
    "model",
    "controller",
    "nodesOpen",
    "setUp",
    "spyOpenNode",
    "spy",
    "spyCloseNode",
    "rawData",
    "name",
    "kids",
    "data",
    "marshal",
    "Json",
    "createModel",
    "parentItem",
    "Name",
    "getItem",
    "getKids",
    "push",
    "childItem",
    "setOpenProperty",
    "OpenCloseController",
    "tearDown",
    "dispose",
    "testModelToTree",
    "node",
    "openNodeNames",
    "reset",
    "setOpen",
    "assertCalledOnce",
    "Object",
    "keys",
    "assertEquals",
    "length",
    "testTreeToModel",
    "fireDataEvent",
    "assertTrue",
    "getOpen",
    "assertFalse",
    "isShowTopLevelOpenCloseIcons",
    "isShowLeafs",
    "getSelection",
    "Error",
    "getLookupTable",
    "isNode",
    "item",
    "isNodeOpen",
    "getName",
    "getLevel",
    "row",
    "hasChildren",
    "openNode",
    "closeNode",
    "openNodeWithoutScrolling",
    "closeNodeWithoutScrolling",
    "refresh",
    "test",
    "virtual"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.tree.virtual.OpenCloseController\",\n{\n  extend : qx.dev.unit.TestCase,\n  implement : qx.ui.tree.core.IVirtualTree,\n  include : qx.dev.unit.MMock,\n\n  events :\n  {\n    open : \"qx.event.type.Data\",\n    close : \"qx.event.type.Data\"\n  },\n\n  properties :\n  {\n    openProperty : {\n      check : \"String\",\n      init : null\n    }\n  },\n\n  members :\n  {\n    model : null,\n    controller : null,\n    nodesOpen : null,\n\n    setUp : function()\n    {\n      if (! this.spyOpenNode)\n      {\n        this.spyOpenNode = this.spy(this, \"openNode\");\n        this.spyCloseNode = this.spy(this, \"closeNode\");\n      }\n\n      var rawData = \n      [\n        {\n          name : \"Root\",\n          open : false,\n          kids :\n          [\n            {\n              name : \"Branch 1\",\n              open : false,\n              kids :\n              [\n                {\n                  name : \"Leaf 1.1\"\n                },\n                {\n                  name : \"Leaf 1.2\"\n                },\n                {\n                  name : \"Branch 1.3\",\n                  open : false,\n                  kids :\n                  [\n                    {\n                      name : \"Branch 1.3.1\",\n                      open : false,\n                      kids :\n                      [\n                        {\n                          name : \"Leaf 1.3.1.1\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ];\n\n      this.model = qx.data.marshal.Json.createModel(rawData, true);\n\n      // Ensure that pushing onto the model works as well\n      var parentItem = qx.data.marshal.Json.createModel(\n        {\n          Name  : \"New parent\",\n          kids  : [],\n          open  : true\n        },\n        true);\n      this.model.getItem(0).getKids().push(parentItem);\n\n      var childItem = qx.data.marshal.Json.createModel(\n        {\n          Name  : \"Child of new parent\"\n        },\n        true);\n      parentItem.getKids().push(childItem);\n\n      childItem = qx.data.marshal.Json.createModel(\n        {\n          Name  : \"Child of Root\"\n        },\n        true);\n      this.model.getItem(0).getKids().push(childItem);\n\n      this.nodesOpen = {};\n\n      this.setOpenProperty(\"open\");\n      this.controller =\n        new qx.ui.tree.core.OpenCloseController(this, this.model.getItem(0));\n    },\n\n\n    tearDown : function()\n    {\n      this.controller.dispose();\n      this.controller = null;\n\n      this.model.dispose();\n      this.model = null;\n    },\n\n\n    testModelToTree : function()\n    {\n      var node;\n      var openNodeNames;\n\n      // Reset the spies\n      this.spyOpenNode.reset();\n      this.spyCloseNode.reset();\n\n      // get the Branch 1 node\n      node = this.model.getItem(0).getKids().getItem(0);\n\n      // open Branch 1\n      node.setOpen(true);\n\n      // openNode should have been called exactly once\n      this.assertCalledOnce(this.spyOpenNode);\n\n      // there should be only one node open\n      openNodeNames = Object.keys(this.nodesOpen);\n      this.assertEquals(openNodeNames.length, 1);\n\n      // the name of the open node should be \"Branch 1\"\n      this.assertEquals(openNodeNames[0], \"Branch 1\");\n\n      // close Branch 1\n      this.model.getItem(0).getKids().getItem(0).setOpen(false);\n\n      // closeNode should have been called exactly once\n      this.assertCalledOnce(this.spyCloseNode);\n\n      // there should be no nodes open\n      openNodeNames = Object.keys(this.nodesOpen);\n      this.assertEquals(openNodeNames.length, 0);\n    },\n\n\n    testTreeToModel : function()\n    {\n      var node;\n      var openNodeNames;\n\n      // Reset the spies\n      this.spyOpenNode.reset();\n      this.spyCloseNode.reset();\n\n      // get the Branch 1 node\n      node = this.model.getItem(0).getKids().getItem(0);\n\n      // send an open event to the controller as if the open button were clicked\n      this.fireDataEvent(\"open\", node);\n\n      // openNode should have been called exactly once\n      this.assertCalledOnce(this.spyOpenNode);\n\n      // there should be only one node open\n      openNodeNames = Object.keys(this.nodesOpen);\n      this.assertEquals(openNodeNames.length, 1);\n\n      // the name of the open node should be \"Branch 1\"\n      this.assertEquals(openNodeNames[0], \"Branch 1\");\n\n      // the model value should now be true\n      this.assertTrue(node.getOpen())\n\n      // send a close event to the controller as if the open button were clicked\n      this.fireDataEvent(\"close\", node);\n\n      // closeNode should have been called exactly once\n      this.assertCalledOnce(this.spyCloseNode);\n\n      // there should be no nodes open\n      openNodeNames = Object.keys(this.nodesOpen);\n      this.assertEquals(openNodeNames.length, 0);\n\n      // the model value should now be false\n      this.assertFalse(node.getOpen())\n    },\n\n\n    /*\n    ---------------------------------------------------------------------------\n      MOCK API\n    ---------------------------------------------------------------------------\n    */\n\n    isShowTopLevelOpenCloseIcons : function() {\n      return true;\n    },\n\n\n    isShowLeafs : function() {\n      return true;\n    },\n\n\n    getSelection : function()\n    {\n      throw new Error(\"getSelection called unexpectedly\");\n    },\n\n\n    getLookupTable : function()\n    {\n      throw new Error(\"getLookupTable called unexpectedly\");\n    },\n\n\n    isNode : function(item)\n    {\n      throw new Error(\"isNode called unexpectedly\");\n    },\n\n\n    isNodeOpen : function(node)\n    {\n      return this.nodesOpen[node.getName()];\n    },\n\n\n    getLevel : function(row)\n    {\n      throw new Error(\"getLevel called unexpectedly\");\n    },\n\n\n    hasChildren : function(node)\n    {\n      throw new Error(\"hasChildren called unexpectedly\");\n    },\n\n    openNode : function(node)\n    {\n      this.nodesOpen[node.getName()] = true;\n    },\n    \n    closeNode : function(node)\n    {\n      delete this.nodesOpen[node.getName()];\n    },\n\n    openNodeWithoutScrolling : function(node) {},\n    closeNodeWithoutScrolling : function(node) {},\n\n    refresh : function()\n    {\n      // nothing to do\n    }\n  }\n});\n"
  ]
}