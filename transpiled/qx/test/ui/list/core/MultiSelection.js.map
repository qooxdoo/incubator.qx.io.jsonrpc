{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/list/core/MultiSelection.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "list",
    "AbstractListTest",
    "members",
    "setUp",
    "_list",
    "setSelectionMode",
    "createModelData",
    "model",
    "data",
    "Array",
    "i",
    "push",
    "testSelection",
    "selection",
    "getSelection",
    "_model",
    "getItem",
    "flush",
    "assertEquals",
    "getLength",
    "expectedSelection",
    "assertDataArrayEquals",
    "dispose",
    "selectionFromManager",
    "_manager",
    "length",
    "_getDataFromRow",
    "testSelectionByUserInteraction",
    "replaceSelection",
    "assertTrue",
    "equals",
    "testSelectionEventByUserInteraction",
    "self",
    "assertEventFired",
    "e",
    "testSelectionWithSorter",
    "setDelegate",
    "sorter",
    "a",
    "b",
    "testOneSelection",
    "testOneSelectionByChangingModel",
    "oldModel",
    "copy",
    "removeAll",
    "setModel",
    "testOneSelectionWithEmptyModel",
    "core",
    "MultiSelection"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.list.core.MultiSelection\",\n{\n  extend : qx.test.ui.list.AbstractListTest,\n\n  members :\n  {\n    setUp : function()\n    {\n      this.base(arguments);\n      this._list.setSelectionMode(\"multi\");\n    },\n\n    createModelData : function()\n    {\n      var model = new qx.data.Array();\n\n      for (var i = 0; i < 100; i++) {\n        model.push(\"item \" + (i + 1));\n      }\n\n      return model;\n    },\n\n    testSelection : function()\n    {\n      var selection = this._list.getSelection();\n      selection.push(this._model.getItem(1));\n      selection.push(this._model.getItem(2));\n      selection.push(this._model.getItem(3));\n      this.flush();\n\n      // check selection on list\n      this.assertEquals(3, this._list.getSelection().getLength(), \"On List\");\n      var expectedSelection = new qx.data.Array(\n      [\n        this._model.getItem(1),\n        this._model.getItem(2),\n        this._model.getItem(3)\n      ]);\n      this.assertDataArrayEquals(selection, expectedSelection, \"On List\");\n      expectedSelection.dispose();\n\n      // check selection on manager\n      var selectionFromManager = this._list._manager.getSelection();\n      for (var i = 0; i < selectionFromManager.length; i++) {\n        selectionFromManager[i] = this._list._getDataFromRow(selectionFromManager[i]);\n      }\n      this.assertEquals(3, selectionFromManager.length, \"On selection manager\");\n      expectedSelection = new qx.data.Array(selectionFromManager);\n      this.assertDataArrayEquals(selection, expectedSelection, \"On selection manager\");\n      expectedSelection.dispose();\n    },\n\n    testSelectionByUserInteraction : function()\n    {\n      var selection = this._list.getSelection();\n      this._list._manager.replaceSelection([2, 3, 4, 7, 8, 9]);\n      this.flush();\n\n      // check selection on manager\n      var selectionFromManager = this._list._manager.getSelection();\n      for (var i = 0; i < selectionFromManager.length; i++) {\n        selectionFromManager[i] = this._list._getDataFromRow(selectionFromManager[i]);\n      }\n      this.assertEquals(6, selectionFromManager.length, \"On selection manager\");\n      var expectedSelection = new qx.data.Array(selectionFromManager);\n      this.assertTrue(selection.equals(expectedSelection), \"On selection manager\");\n      expectedSelection.dispose();\n\n      // check selection on list\n      this.assertEquals(6, selection.getLength(), \"On List\");\n      expectedSelection = new qx.data.Array(\n      [\n        this._model.getItem(2),\n        this._model.getItem(3),\n        this._model.getItem(4),\n        this._model.getItem(7),\n        this._model.getItem(8),\n        this._model.getItem(9)\n      ]);\n      this.assertDataArrayEquals(selection, expectedSelection, \"On List\");\n      expectedSelection.dispose();\n    },\n\n    testSelectionEventByUserInteraction : function()\n    {\n      var selection = this._list.getSelection();\n\n      var self = this;\n      this.assertEventFired(selection, \"change\",\n        function()\n        {\n          self._list._manager.replaceSelection([2, 3, 4, 7, 8, 9]);\n          self.flush();\n        },\n        function(e)\n        {\n          // check selection on manager\n          var selectionFromManager = self._list._manager.getSelection();\n          for (var i = 0; i < selectionFromManager.length; i++) {\n            selectionFromManager[i] = self._list._getDataFromRow(selectionFromManager[i]);\n          }\n          self.assertEquals(6, selectionFromManager.length, \"On selection manager\");\n          var expectedSelection = new qx.data.Array(selectionFromManager);\n          self.assertDataArrayEquals(selection, expectedSelection, \"On selection manager\");\n          expectedSelection.dispose();\n\n          // check selection on list\n          self.assertEquals(6, selection.getLength(), \"On List\");\n          expectedSelection = new qx.data.Array(\n          [\n            self._model.getItem(2),\n            self._model.getItem(3),\n            self._model.getItem(4),\n            self._model.getItem(7),\n            self._model.getItem(8),\n            self._model.getItem(9)\n          ]);\n          self.assertDataArrayEquals(selection, expectedSelection, \"On List\");\n          expectedSelection.dispose();\n        }\n      );\n    },\n\n    testSelectionWithSorter : function()\n    {\n      this._list.setDelegate({\n        sorter : function(a, b) {\n          return a < b ? 1 : a > b ? -1 : 0;\n        }\n      });\n\n      this.testSelection();\n    },\n\n    testOneSelection : function()\n    {\n      var selection = this._list.getSelection();\n\n      this.assertEquals(0, selection.getLength());\n\n      this._list.setSelectionMode(\"one\");\n\n      this.assertEquals(1, selection.getLength());\n      this.assertEquals(this._model.getItem(0), selection.getItem(0));\n    },\n\n    testOneSelectionByChangingModel : function()\n    {\n      var selection = this._list.getSelection();\n\n      this.assertEquals(0, selection.getLength());\n\n      var oldModel = this._model.copy();\n      this._model.removeAll();\n\n      this._list.setSelectionMode(\"one\");\n      this.assertEquals(0, selection.getLength());\n\n      this._model.dispose();\n      this._model = oldModel;\n      this._list.setModel(this._model);\n\n      this.assertEquals(1, selection.getLength());\n      this.assertEquals(this._model.getItem(0), selection.getItem(0));\n    },\n\n    testOneSelectionWithEmptyModel : function()\n    {\n      var selection = this._list.getSelection();\n      var oldModel = this._model.copy();\n      this._model.removeAll();\n      this._list.setSelectionMode(\"one\");\n\n      this.assertEquals(0, selection.getLength());\n\n      this._model.push(oldModel.getItem(2));\n\n      this.assertEquals(1, selection.getLength());\n      this.assertEquals(this._model.getItem(0), selection.getItem(0));\n      oldModel.dispose();\n    }\n  }\n});\n"
  ]
}