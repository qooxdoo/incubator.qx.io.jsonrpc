{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/list/core/SingleSelection.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "list",
    "AbstractListTest",
    "members",
    "createModelData",
    "model",
    "data",
    "Array",
    "i",
    "push",
    "testSelection",
    "selection",
    "_list",
    "getSelection",
    "_model",
    "getItem",
    "flush",
    "assertEquals",
    "getLength",
    "expectedSelection",
    "assertDataArrayEquals",
    "dispose",
    "item",
    "_manager",
    "getSelectedItem",
    "_getDataFromRow",
    "testInvalidSelection",
    "length",
    "testSelectionByUserInteraction",
    "selectItem",
    "testSelectionEventByUserInteraction",
    "self",
    "assertEventFired",
    "e",
    "testSelectionWithSorter",
    "setDelegate",
    "sorter",
    "a",
    "b",
    "testSelectionWithFilter",
    "filter",
    "parseInt",
    "slice",
    "testInvalidSelectionWithFilter",
    "testApplyFilterAfterSelection",
    "testApplySortingAfterSelection",
    "testRemoveItem",
    "removeAt",
    "testRemoveItemWithGrouping",
    "group",
    "lastIndex",
    "core",
    "SingleSelection"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,sCAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,IAAX,CAAgBC,gBAD3B;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,eAAe,EAAG,2BAClB;AACE,YAAIC,KAAK,GAAG,IAAIb,EAAE,CAACc,IAAH,CAAQC,KAAZ,EAAZ;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BH,UAAAA,KAAK,CAACI,IAAN,CAAW,UAAUD,CAArB;AACD;;AAED,eAAOH,KAAP;AACD,OAVH;AAYEK,MAAAA,aAAa,EAAG,yBAChB;AACE,YAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAhB;;AACAF,QAAAA,SAAS,CAACF,IAAV,CAAe,KAAKK,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAf;AACA,aAAKC,KAAL,GAHF,CAKE;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKL,KAAL,CAAWC,YAAX,GAA0BK,SAA1B,EAArB,EAA4D,SAA5D;AACA,YAAIC,iBAAiB,GAAG,IAAI3B,EAAE,CAACc,IAAH,CAAQC,KAAZ,CAAkB,CAAC,KAAKO,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAD,CAAlB,CAAxB;AACA,aAAKK,qBAAL,CAA2BT,SAA3B,EAAsCQ,iBAAtC,EAAyD,SAAzD;AACAA,QAAAA,iBAAiB,CAACE,OAAlB,GATF,CAWE;;AACA,YAAIC,IAAI,GAAG,KAAKV,KAAL,CAAWW,QAAX,CAAoBC,eAApB,EAAX;;AACAF,QAAAA,IAAI,GAAG,KAAKV,KAAL,CAAWa,eAAX,CAA2BH,IAA3B,CAAP;AAEA,aAAKL,YAAL,CAAkB,KAAKH,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAlB,EAA0CO,IAA1C;AACD,OA7BH;AA+BEI,MAAAA,oBAAoB,EAAG,gCACvB;AACE,YAAIf,SAAS,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAhB;;AACAF,QAAAA,SAAS,CAACF,IAAV,CAAe,KAAKK,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAf;AACAJ,QAAAA,SAAS,CAACF,IAAV,CAAe,KAAKK,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAf;AACA,aAAKC,KAAL,GAJF,CAME;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKL,KAAL,CAAWC,YAAX,GAA0BK,SAA1B,EAArB,EAA4D,SAA5D;AACA,YAAIC,iBAAiB,GAAG,IAAI3B,EAAE,CAACc,IAAH,CAAQC,KAAZ,CAAkB,CAAC,KAAKO,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAD,CAAlB,CAAxB;AACA,aAAKK,qBAAL,CAA2BT,SAA3B,EAAsCQ,iBAAtC,EAAyD,SAAzD;AACAA,QAAAA,iBAAiB,CAACE,OAAlB,GAVF,CAYE;;AACA,YAAIV,SAAS,GAAG,KAAKC,KAAL,CAAWW,QAAX,CAAoBV,YAApB,EAAhB;;AAEA,aAAKI,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAACgB,MAA/B;AACA,aAAKV,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAAC,CAAD,CAA9B;AACD,OAjDH;AAmDEiB,MAAAA,8BAA8B,EAAG,0CACjC;AACE,YAAIjB,SAAS,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAhB;;AAEA,aAAKD,KAAL,CAAWW,QAAX,CAAoBM,UAApB,CAA+B,CAA/B;;AACA,aAAKb,KAAL;AAEA,aAAKC,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAACO,SAAV,EAArB;AACA,aAAKD,YAAL,CAAkB,KAAKH,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAlB,EAA0CJ,SAAS,CAACI,OAAV,CAAkB,CAAlB,CAA1C;AACA,aAAKE,YAAL,CAAkB,CAAlB,EAAqB,KAAKL,KAAL,CAAWW,QAAX,CAAoBC,eAApB,EAArB;AACD,OA7DH;AA+DEM,MAAAA,mCAAmC,EAAG,+CACtC;AACE,YAAInB,SAAS,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAhB;;AAEA,YAAIkB,IAAI,GAAG,IAAX;AACA,aAAKC,gBAAL,CAAsBrB,SAAtB,EAAiC,QAAjC,EACE,YACA;AACEoB,UAAAA,IAAI,CAACnB,KAAL,CAAWW,QAAX,CAAoBM,UAApB,CAA+B,CAA/B;;AACAE,UAAAA,IAAI,CAACf,KAAL;AACD,SALH,EAME,UAASiB,CAAT,EACA;AACEF,UAAAA,IAAI,CAACd,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAACO,SAAV,EAArB;AACAa,UAAAA,IAAI,CAACd,YAAL,CAAkBc,IAAI,CAACjB,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAlB,EAA0CJ,SAAS,CAACI,OAAV,CAAkB,CAAlB,CAA1C;AACAgB,UAAAA,IAAI,CAACd,YAAL,CAAkB,CAAlB,EAAqBc,IAAI,CAACnB,KAAL,CAAWW,QAAX,CAAoBC,eAApB,EAArB;AACD,SAXH;AAaD,OAjFH;AAmFEU,MAAAA,uBAAuB,EAAG,mCAC1B;AACE,aAAKtB,KAAL,CAAWuB,WAAX,CAAuB;AACrBC,UAAAA,MAAM,EAAG,gBAASC,CAAT,EAAYC,CAAZ,EAAe;AACtB,mBAAOD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAYD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AACD;AAHoB,SAAvB;;AAMA,aAAK5B,aAAL;AACD,OA5FH;AA8FE6B,MAAAA,uBAAuB,EAAG,mCAAW;AACnC,aAAK3B,KAAL,CAAWuB,WAAX,CAAuB;AACrBK,UAAAA,MAAM,EAAG,gBAASlC,IAAT,EAAe;AACtB;AACA,mBAASmC,QAAQ,CAACnC,IAAI,CAACoC,KAAL,CAAW,CAAX,EAAcpC,IAAI,CAACqB,MAAnB,CAAD,EAA6B,EAA7B,CAAT,GAA6C,CAA7C,IAAkD,CAA1D;AACD;AAJoB,SAAvB;;AAOA,YAAIhB,SAAS,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAhB;;AACAF,QAAAA,SAAS,CAACF,IAAV,CAAe,KAAKK,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAf;AACA,aAAKC,KAAL,GAVmC,CAYnC;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKL,KAAL,CAAWC,YAAX,GAA0BK,SAA1B,EAArB,EAA4D,SAA5D;AACA,YAAIC,iBAAiB,GAAG,IAAI3B,EAAE,CAACc,IAAH,CAAQC,KAAZ,CAAkB,CAAC,KAAKO,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAD,CAAlB,CAAxB;AACA,aAAKK,qBAAL,CAA2BT,SAA3B,EAAsCQ,iBAAtC,EAAyD,SAAzD;AACAA,QAAAA,iBAAiB,CAACE,OAAlB,GAhBmC,CAkBnC;;AACA,YAAIV,SAAS,GAAG,KAAKC,KAAL,CAAWW,QAAX,CAAoBV,YAApB,EAAhB;;AACA,aAAKI,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAACgB,MAA/B;AACA,aAAKV,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAAC,CAAD,CAA9B;AACD,OApHH;AAsHEgC,MAAAA,8BAA8B,EAAG,0CAAW;AAC1C,aAAK/B,KAAL,CAAWuB,WAAX,CAAuB;AACrBK,UAAAA,MAAM,EAAG,gBAASlC,IAAT,EAAe;AACtB;AACA,mBAASmC,QAAQ,CAACnC,IAAI,CAACoC,KAAL,CAAW,CAAX,EAAcpC,IAAI,CAACqB,MAAnB,CAAD,EAA6B,EAA7B,CAAT,GAA6C,CAA7C,IAAkD,CAA1D;AACD;AAJoB,SAAvB;;AAOA,YAAIhB,SAAS,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAhB;;AACAF,QAAAA,SAAS,CAACF,IAAV,CAAe,KAAKK,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAf;AACA,aAAKC,KAAL,GAV0C,CAY1C;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKL,KAAL,CAAWC,YAAX,GAA0BK,SAA1B,EAArB,EAA4D,SAA5D,EAb0C,CAe1C;;AACA,YAAIP,SAAS,GAAG,KAAKC,KAAL,CAAWW,QAAX,CAAoBV,YAApB,EAAhB;;AACA,aAAKI,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAACgB,MAA/B;AACD,OAxIH;AA0IEiB,MAAAA,6BAA6B,EAAG,yCAAW;AACzC,YAAIjC,SAAS,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAhB;;AACAF,QAAAA,SAAS,CAACF,IAAV,CAAe,KAAKK,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAf;AACA,aAAKC,KAAL;;AAEA,aAAKJ,KAAL,CAAWuB,WAAX,CAAuB;AACrBK,UAAAA,MAAM,EAAG,gBAASlC,IAAT,EAAe;AACtB;AACA,mBAASmC,QAAQ,CAACnC,IAAI,CAACoC,KAAL,CAAW,CAAX,EAAcpC,IAAI,CAACqB,MAAnB,CAAD,EAA6B,EAA7B,CAAT,GAA6C,CAA7C,IAAkD,CAA1D;AACD;AAJoB,SAAvB;;AAMA,aAAKX,KAAL,GAXyC,CAazC;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKL,KAAL,CAAWC,YAAX,GAA0BK,SAA1B,EAArB,EAA4D,SAA5D,EAdyC,CAgBzC;;AACA,YAAIP,SAAS,GAAG,KAAKC,KAAL,CAAWW,QAAX,CAAoBV,YAApB,EAAhB;;AACA,aAAKI,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAACgB,MAA/B,EAAuC,YAAvC;AACD,OA7JH;AA+JEkB,MAAAA,8BAA8B,EAAG,0CACjC;AACE,YAAIlC,SAAS,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAhB;;AACAF,QAAAA,SAAS,CAACF,IAAV,CAAe,KAAKK,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAf;AACA,aAAKC,KAAL,GAHF,CAKE;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKL,KAAL,CAAWC,YAAX,GAA0BK,SAA1B,EAArB,EAA4D,SAA5D,EANF,CAQE;;AACA,YAAIP,SAAS,GAAG,KAAKC,KAAL,CAAWW,QAAX,CAAoBV,YAApB,EAAhB;;AACA,aAAKI,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAACgB,MAA/B,EAAuC,YAAvC;;AAEA,aAAKf,KAAL,CAAWuB,WAAX,CAAuB;AACrBC,UAAAA,MAAM,EAAG,gBAASC,CAAT,EAAYC,CAAZ,EAAe;AACtB,mBAAOD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAYD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AACD;AAHoB,SAAvB;;AAKA,aAAKtB,KAAL,GAjBF,CAmBE;;AACA,YAAIG,iBAAiB,GAAG,IAAI3B,EAAE,CAACc,IAAH,CAAQC,KAAZ,CAAkB,CAAC,KAAKO,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAD,CAAlB,CAAxB;AACA,aAAKK,qBAAL,CAA2BD,iBAA3B,EAA8C,KAAKP,KAAL,CAAWC,YAAX,EAA9C,EAAyE,SAAzE;AACAM,QAAAA,iBAAiB,CAACE,OAAlB,GAtBF,CAwBE;;AACA,YAAIV,SAAS,GAAG,KAAKC,KAAL,CAAWW,QAAX,CAAoBV,YAApB,EAAhB;;AACA,aAAKI,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAACgB,MAA/B,EAAuC,YAAvC,EA1BF,CA4BE;;AACA,aAAKV,YAAL,CAAkB,KAAKH,MAAL,CAAYI,SAAZ,KAA0B,CAA5C,EAA+C,KAAKN,KAAL,CAAWW,QAAX,CAAoBV,YAApB,GAAmC,CAAnC,CAA/C,EAAsF,yBAAtF;AACD,OA9LH;AAgMEiC,MAAAA,cAAc,EAAG,0BACjB;AACE,YAAInC,SAAS,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAhB;;AACAF,QAAAA,SAAS,CAACF,IAAV,CAAe,KAAKK,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAAf;AACA,aAAKC,KAAL;;AAEA,aAAKF,MAAL,CAAYiC,QAAZ,CAAqB,CAArB;;AACA,aAAK/B,KAAL,GANF,CAQE;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKL,KAAL,CAAWC,YAAX,GAA0BK,SAA1B,EAArB,EAA4D,SAA5D,EATF,CAWE;;AACA,YAAIP,SAAS,GAAG,KAAKC,KAAL,CAAWW,QAAX,CAAoBV,YAApB,EAAhB;;AACA,aAAKI,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAACgB,MAA/B,EAAuC,YAAvC;AACD,OA/MH;AAiNEqB,MAAAA,0BAA0B,EAAG,sCAC7B;AACE,aAAKpC,KAAL,CAAWuB,WAAX,CAAuB;AACrBc,UAAAA,KAAK,EAAG,eAAS3C,IAAT,EAAe;AACrB,mBAAOA,IAAP;AACD;AAHoB,SAAvB;;AAMA,YAAI4C,SAAS,GAAG,KAAKpC,MAAL,CAAYI,SAAZ,KAA0B,CAA1C;;AAEA,YAAIP,SAAS,GAAG,KAAKC,KAAL,CAAWC,YAAX,EAAhB;;AACAF,QAAAA,SAAS,CAACF,IAAV,CAAe,KAAKK,MAAL,CAAYC,OAAZ,CAAoBmC,SAApB,CAAf;AACA,aAAKlC,KAAL;;AAEA,aAAKF,MAAL,CAAYiC,QAAZ,CAAqBG,SAArB;;AACA,aAAKlC,KAAL,GAdF,CAgBE;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKL,KAAL,CAAWC,YAAX,GAA0BK,SAA1B,EAArB,EAA4D,SAA5D,EAjBF,CAmBE;;AACA,YAAIP,SAAS,GAAG,KAAKC,KAAL,CAAWW,QAAX,CAAoBV,YAApB,EAAhB;;AACA,aAAKI,YAAL,CAAkB,CAAlB,EAAqBN,SAAS,CAACgB,MAA/B,EAAuC,YAAvC;AACD;AAxOH;AAJF,GADA;AAlBAnC,EAAAA,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,IAAX,CAAgBkD,IAAhB,CAAqBC,eAArB,CAAqCzD,aAArC,GAAqDA,aAArD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.list.core.SingleSelection\",\n{\n  extend : qx.test.ui.list.AbstractListTest,\n\n  members :\n  {\n    createModelData : function()\n    {\n      var model = new qx.data.Array();\n\n      for (var i = 0; i < 100; i++) {\n        model.push(\"item \" + i);\n      }\n\n      return model;\n    },\n\n    testSelection : function()\n    {\n      var selection = this._list.getSelection();\n      selection.push(this._model.getItem(1));\n      this.flush();\n\n      // check selection from list\n      this.assertEquals(1, this._list.getSelection().getLength(), \"On List\");\n      var expectedSelection = new qx.data.Array([this._model.getItem(1)]);\n      this.assertDataArrayEquals(selection, expectedSelection, \"On List\");\n      expectedSelection.dispose();\n\n      // check selection from manager\n      var item = this._list._manager.getSelectedItem();\n      item = this._list._getDataFromRow(item);\n\n      this.assertEquals(this._model.getItem(1), item);\n    },\n\n    testInvalidSelection : function()\n    {\n      var selection = this._list.getSelection();\n      selection.push(this._model.getItem(1));\n      selection.push(this._model.getItem(2));\n      this.flush();\n\n      // check selection from list\n      this.assertEquals(1, this._list.getSelection().getLength(), \"On List\");\n      var expectedSelection = new qx.data.Array([this._model.getItem(2)]);\n      this.assertDataArrayEquals(selection, expectedSelection, \"On List\");\n      expectedSelection.dispose();\n\n      // check selection from manager\n      var selection = this._list._manager.getSelection();\n\n      this.assertEquals(1, selection.length);\n      this.assertEquals(2, selection[0]);\n    },\n\n    testSelectionByUserInteraction : function()\n    {\n      var selection = this._list.getSelection();\n\n      this._list._manager.selectItem(2);\n      this.flush();\n\n      this.assertEquals(1, selection.getLength());\n      this.assertEquals(this._model.getItem(2), selection.getItem(0));\n      this.assertEquals(2, this._list._manager.getSelectedItem());\n    },\n\n    testSelectionEventByUserInteraction : function()\n    {\n      var selection = this._list.getSelection();\n\n      var self = this;\n      this.assertEventFired(selection, \"change\",\n        function()\n        {\n          self._list._manager.selectItem(2);\n          self.flush();\n        },\n        function(e)\n        {\n          self.assertEquals(1, selection.getLength());\n          self.assertEquals(self._model.getItem(2), selection.getItem(0));\n          self.assertEquals(2, self._list._manager.getSelectedItem());\n        }\n      );\n    },\n\n    testSelectionWithSorter : function()\n    {\n      this._list.setDelegate({\n        sorter : function(a, b) {\n          return a < b ? 1 : a > b ? -1 : 0;\n        }\n      });\n\n      this.testSelection();\n    },\n\n    testSelectionWithFilter : function() {\n      this._list.setDelegate({\n        filter : function(data) {\n          // Filters all even items\n          return ((parseInt(data.slice(5, data.length), 10)) % 2 == 1);\n        }\n      });\n\n      var selection = this._list.getSelection();\n      selection.push(this._model.getItem(1));\n      this.flush();\n\n      // check selection from list\n      this.assertEquals(1, this._list.getSelection().getLength(), \"On List\");\n      var expectedSelection = new qx.data.Array([this._model.getItem(1)]);\n      this.assertDataArrayEquals(selection, expectedSelection, \"On List\");\n      expectedSelection.dispose();\n\n      // check selection from manager\n      var selection = this._list._manager.getSelection();\n      this.assertEquals(1, selection.length);\n      this.assertEquals(0, selection[0]);\n    },\n\n    testInvalidSelectionWithFilter : function() {\n      this._list.setDelegate({\n        filter : function(data) {\n          // Filters all even items\n          return ((parseInt(data.slice(5, data.length), 10)) % 2 == 1);\n        }\n      });\n\n      var selection = this._list.getSelection();\n      selection.push(this._model.getItem(0));\n      this.flush();\n\n      // check selection from list\n      this.assertEquals(0, this._list.getSelection().getLength(), \"On List\");\n\n      // check selection from manager\n      var selection = this._list._manager.getSelection();\n      this.assertEquals(0, selection.length);\n    },\n\n    testApplyFilterAfterSelection : function() {\n      var selection = this._list.getSelection();\n      selection.push(this._model.getItem(0));\n      this.flush();\n\n      this._list.setDelegate({\n        filter : function(data) {\n          // Filters all even items\n          return ((parseInt(data.slice(5, data.length), 10)) % 2 == 1);\n        }\n      });\n      this.flush();\n\n      // check selection from list\n      this.assertEquals(0, this._list.getSelection().getLength(), \"On List\");\n\n      // check selection from manager\n      var selection = this._list._manager.getSelection();\n      this.assertEquals(0, selection.length, \"On Manager\");\n    },\n\n    testApplySortingAfterSelection : function()\n    {\n      var selection = this._list.getSelection();\n      selection.push(this._model.getItem(0));\n      this.flush();\n\n      // check selection from list\n      this.assertEquals(1, this._list.getSelection().getLength(), \"On List\");\n\n      // check selection from manager\n      var selection = this._list._manager.getSelection();\n      this.assertEquals(1, selection.length, \"On Manager\");\n\n      this._list.setDelegate({\n        sorter : function(a, b) {\n          return a < b ? 1 : a > b ? -1 : 0;\n        }\n      });\n      this.flush();\n\n      // check selection from list\n      var expectedSelection = new qx.data.Array([this._model.getItem(0)]);\n      this.assertDataArrayEquals(expectedSelection, this._list.getSelection(), \"On List\");\n      expectedSelection.dispose();\n\n      // check selection from manager\n      var selection = this._list._manager.getSelection();\n      this.assertEquals(1, selection.length, \"On Manager\");\n\n      // check row == last index\n      this.assertEquals(this._model.getLength() - 1, this._list._manager.getSelection()[0], \"Row is wrong on Manager\");\n    },\n\n    testRemoveItem : function()\n    {\n      var selection = this._list.getSelection();\n      selection.push(this._model.getItem(0));\n      this.flush();\n\n      this._model.removeAt(0);\n      this.flush();\n\n      // check selection from list\n      this.assertEquals(0, this._list.getSelection().getLength(), \"On List\");\n\n      // check selection from manager\n      var selection = this._list._manager.getSelection();\n      this.assertEquals(0, selection.length, \"On Manager\");\n    },\n\n    testRemoveItemWithGrouping : function()\n    {\n      this._list.setDelegate({\n        group : function(data) {\n          return data;\n        }\n      });\n\n      var lastIndex = this._model.getLength() - 1;\n\n      var selection = this._list.getSelection();\n      selection.push(this._model.getItem(lastIndex));\n      this.flush();\n\n      this._model.removeAt(lastIndex);\n      this.flush();\n\n      // check selection from list\n      this.assertEquals(0, this._list.getSelection().getLength(), \"On List\");\n\n      // check selection from manager\n      var selection = this._list._manager.getSelection();\n      this.assertEquals(0, selection.length, \"On Manager\");\n    }\n  }\n});\n"
  ]
}