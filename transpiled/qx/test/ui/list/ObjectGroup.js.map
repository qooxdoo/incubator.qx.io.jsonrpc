{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/list/ObjectGroup.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "list",
    "AbstractListTest",
    "members",
    "__names",
    "__groups",
    "createModelData",
    "model",
    "data",
    "Array",
    "setAutoDisposeItems",
    "groups",
    "i",
    "length",
    "name",
    "groupName",
    "charAt",
    "group",
    "fixture",
    "GroupMock",
    "setName",
    "item",
    "ItemMock",
    "setGroup",
    "push",
    "configureList",
    "_list",
    "setLabelPath",
    "setGroupLabelPath",
    "tearDown",
    "key",
    "hasOwnProperty",
    "dispose",
    "testGroup",
    "delegate",
    "getGroup",
    "setDelegate",
    "flush",
    "groupedModel",
    "__convertModel",
    "_model",
    "assertModelEqualsRowData",
    "assertEquals",
    "getLength",
    "getPane",
    "getRowConfig",
    "getItemCount",
    "getGroups",
    "testMixWithObjectsAndDefaultGroup",
    "that",
    "assertException",
    "getName",
    "Error",
    "testMixWithObjectsAndDefaultGroupAsFirstItem",
    "indexOf",
    "testMixWithObjectsAndStrings",
    "testMixWithObjectsStringsAndDefaultGroup",
    "testGroupWithSorter",
    "sortedModel",
    "sorter",
    "a",
    "b",
    "getItem",
    "sort",
    "result",
    "k",
    "ObjectGroup"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.list.ObjectGroup\",\n{\n  extend : qx.test.ui.list.AbstractListTest,\n\n  members :\n  {\n    __names : [\"Luise Siemer\", \"Trauhard Franke\", \"Sarina Wilde\", \"Florine Bähr\",\n       \"Sigurd Adolph\", \"Sigmund Kurz\", \"Pankratius Hill\", \"Gerlinda Seel\",\n       \"Trixi Clauß\", \"Cecilia Hemmer\", \"Rosely Fröhlich\", \"Annemargret Hunger\",\n       \"Dietgar Münster\", \"Bertwin Joseph\", \"Edwina Schwarz\", \"Riana Dirks\"],\n\n    __groups : null,\n\n    createModelData : function() {\n      var model = new qx.data.Array();\n      model.setAutoDisposeItems(true);\n      var groups = this.__groups = {};\n\n      for (var i = 0; i < this.__names.length; i++) {\n        var name = this.__names[i];\n        var groupName = name.charAt(0);\n        var group = groups[groupName];\n\n        if (group == null)\n        {\n          group = groups[groupName] = new qx.test.ui.list.fixture.GroupMock();\n          group.setName(groupName);\n        }\n\n        var item = new qx.test.ui.list.fixture.ItemMock();\n        item.setName(name);\n        item.setGroup(group);\n        model.push(item);\n      }\n\n      return model;\n    },\n\n\n    configureList : function() {\n      this._list.setLabelPath(\"name\");\n      this._list.setGroupLabelPath(\"name\");\n    },\n\n\n    tearDown : function() {\n      this.base(arguments);\n      for (var key in this.__groups)\n      {\n        if (this.__groups.hasOwnProperty(key)) {\n          this.__groups[key].dispose();\n        }\n      }\n\n      this.__groups = null;\n    },\n\n\n    testGroup : function()\n    {\n      // Expected result\n      // \"L\", \"Luise Siemer\",\n      // \"T\", \"Trauhard Franke\", \"Trixi Clauß\",\n      // \"S\", \"Sarina Wilde\", \"Sigurd Adolph\", \"Sigmund Kurz\",\n      // \"F\", \"Florine Bähr\",\n      // \"P\", \"Pankratius Hill\",\n      // \"G\", \"Gerlinda Seel\",\n      // \"C\", \"Cecilia Hemmer\",\n      // \"R\", \"Rosely Fröhlich\", \"Riana Dirks\",\n      // \"A\", \"Annemargret Hunger\",\n      // \"D\", \"Dietgar Münster\",\n      // \"B\", \"Bertwin Joseph\",\n      // \"E\", \"Edwina Schwarz\"\n\n      var delegate = {\n        group : function(item) {\n          return item.getGroup();\n        }\n      };\n      this._list.setDelegate(delegate);\n      this.flush();\n\n      var groupedModel = this.__convertModel(this._model);\n      this.assertModelEqualsRowData(groupedModel, this._list);\n      this.assertEquals(groupedModel.getLength(), this._list.getPane().getRowConfig().getItemCount(), \"On Layer\");\n      this.assertEquals(12, this._list.getGroups().getLength(), \"On List\");\n      groupedModel.dispose();\n    },\n\n    testMixWithObjectsAndDefaultGroup : function()\n    {\n      var that = this;\n      this.assertException(function()\n      {\n        var delegate = {\n          group : function(item) {\n            var group = item.getGroup();\n            if (group.getName() == \"A\") {\n              return null;\n            }\n            return group;\n          }\n        };\n        that._list.setDelegate(delegate);\n        that.flush();\n      }, Error, /GroupingTypeError:/);\n    },\n\n\n    testMixWithObjectsAndDefaultGroupAsFirstItem : function()\n    {\n      var that = this;\n      this.assertException(function()\n      {\n        var delegate = {\n          group : function(item) {\n            if (that._model.indexOf(item) == 0) {\n              return null;\n            }\n            return item.getGroup();\n          }\n        };\n        that._list.setDelegate(delegate);\n        that.flush();\n      }, Error, /GroupingTypeError:/);\n    },\n\n\n    testMixWithObjectsAndStrings : function()\n    {\n      var that = this;\n      this.assertException(function()\n      {\n        var delegate = {\n          group : function(item) {\n            var group = item.getGroup();\n            if (group.getName() == \"A\") {\n              return group.getName();\n            }\n            return group;\n          }\n        };\n        that._list.setDelegate(delegate);\n        that.flush();\n      }, Error, /GroupingTypeError:/);\n    },\n\n\n    testMixWithObjectsStringsAndDefaultGroup : function()\n    {\n      var that = this;\n      this.assertException(function()\n      {\n        var delegate = {\n          group : function(item) {\n            var group = item.getGroup();\n            if (that._model.indexOf(item) == 0) {\n              return null;\n            }\n            if (group.getName() == \"A\") {\n              return group.getName();\n            }\n            return group;\n          }\n        };\n        that._list.setDelegate(delegate);\n        that.flush();\n      }, Error, /GroupingTypeError:/);\n    },\n\n\n    testGroupWithSorter : function()\n    {\n      // Expected result\n      // \"T\", \"Trixi Clauß\", \"Trauhard Franke\",\n      // \"S\", \"Sigurd Adolph\", \"Sigmund Kurz\", \"Sarina Wilde\",\n      // \"R\", \"Rosely Fröhlich\", \"Riana Dirks\",\n      // \"P\", \"Pankratius Hill\",\n      // \"L\", \"Luise Siemer\",\n      // \"G\", \"Gerlinda Seel\",\n      // \"F\", \"Florine Bähr\",\n      // \"E\", \"Edwina Schwarz\",\n      // \"D\", \"Dietgar Münster\",\n      // \"C\", \"Cecilia Hemmer\",\n      // \"B\", \"Bertwin Joseph\",\n      // \"A\", \"Annemargret Hunger\"\n\n      var sortedModel = new qx.data.Array();\n      var sorter = function(a, b) {\n        a = a.getName();\n        b = b.getName();\n        return a < b ? 1 : a > b ? -1 : 0;\n      };\n\n      for (var i = 0; i < this._model.getLength(); i++) {\n        sortedModel.push(this._model.getItem(i));\n      }\n      sortedModel.sort(sorter);\n\n      var delegate = {\n        sorter : sorter,\n        group : function(item) {\n          return item.getGroup();\n        }\n      };\n      this._list.setDelegate(delegate);\n      this.flush();\n\n      var groupedModel = this.__convertModel(sortedModel);\n      this.assertModelEqualsRowData(groupedModel, this._list);\n      this.assertEquals(groupedModel.getLength(), this._list.getPane().getRowConfig().getItemCount(), \"On Layer\");\n      this.assertEquals(12, this._list.getGroups().getLength(), \"On List\");\n      groupedModel.dispose();\n      sortedModel.dispose();\n    },\n\n    __convertModel : function(model) {\n      var result = new qx.data.Array();\n\n      // get all groups\n      var groups = [];\n      for (var i = 0; i < model.getLength(); i++)\n      {\n        var group = model.getItem(i).getGroup();\n\n        if (groups.indexOf(group) == -1) {\n          groups.push(group);\n        }\n      }\n\n      // build results\n      for (var i = 0; i < groups.length; i++)\n      {\n        result.push(groups[i]);\n\n        for (var k = 0; k < model.getLength(); k++)\n        {\n          var item = model.getItem(k);\n          var group = item.getGroup();\n\n          if (groups[i] === group) {\n            result.push(item);\n          }\n        }\n      }\n\n      return result;\n    }\n  }\n});"
  ]
}