{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/list/List.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "list",
    "AbstractListTest",
    "include",
    "dev",
    "unit",
    "MMock",
    "members",
    "createModelData",
    "model",
    "data",
    "Array",
    "i",
    "push",
    "testCreation",
    "_list",
    "setWidth",
    "setItemHeight",
    "flush",
    "assertEquals",
    "getPane",
    "getBounds",
    "width",
    "getColumnConfig",
    "getItemSize",
    "getRowConfig",
    "getDefaultItemSize",
    "_model",
    "getLength",
    "getItemCount",
    "getModel",
    "getSelection",
    "testNullModel",
    "setModel",
    "testChangeModelSize",
    "assertModelEqualsRowData",
    "dispose",
    "testChangeModelContent",
    "setItem",
    "_layer",
    "getRenderedCellWidget",
    "getLabel",
    "testResetModel",
    "resetModel",
    "testComplexModel",
    "rawData",
    "label",
    "icon",
    "marshal",
    "Json",
    "createModel",
    "setLabelPath",
    "setIconPath",
    "getIcon",
    "testReverseBinding",
    "delegate",
    "bindItem",
    "controller",
    "item",
    "id",
    "bindDefaultProperties",
    "bindPropertyReverse",
    "setDelegate",
    "widget",
    "setLabel",
    "getItem",
    "testFilter",
    "filteredModel",
    "filter",
    "parseInt",
    "slice",
    "length",
    "testSorter",
    "sortedModel",
    "sorter",
    "a",
    "b",
    "sort",
    "testSorterWithFilter",
    "testDisabledElements",
    "disabledItem",
    "enabled",
    "bindProperty",
    "assertTrue",
    "isEnabled",
    "assertFalse",
    "testOnPool",
    "onPool",
    "spy",
    "_provider",
    "getCellWidget",
    "poolCellWidget",
    "assertCalledOnce",
    "assertCalledWith",
    "testMultiSelectionMode",
    "setSelectionMode",
    "removeAll",
    "assertNull",
    "_manager",
    "getLeadItem",
    "testVariableItemHeight",
    "resetItemSizes",
    "sizes",
    "setVariableItemHeight",
    "event",
    "Timer",
    "once",
    "resume",
    "rowConfig",
    "testedWidgets",
    "getSizeHint",
    "height",
    "wait",
    "testChangeModelLengthListener",
    "assertEventFired",
    "ev",
    "assertInstance",
    "type",
    "Data",
    "assertPositiveInteger",
    "getData",
    "getOldData",
    "bind",
    "List"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,sBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,IAAX,CAAgBC,gBAD3B;AAEEC,IAAAA,OAAO,EAAGX,EAAE,CAACY,GAAH,CAAOC,IAAP,CAAYC,KAFxB;AAIEC,IAAAA,OAAO,EACP;AACEC,MAAAA,eAAe,EAAG,2BAClB;AACE,YAAIC,KAAK,GAAG,IAAIjB,EAAE,CAACkB,IAAH,CAAQC,KAAZ,EAAZ;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BH,UAAAA,KAAK,CAACI,IAAN,CAAW,WAAWD,CAAC,GAAG,CAAf,CAAX;AACD;;AAED,eAAOH,KAAP;AACD,OAVH;AAaEK,MAAAA,YAAY,EAAG,wBACf;AACE,aAAKC,KAAL,CAAWC,QAAX,CAAoB,GAApB;;AACA,aAAKD,KAAL,CAAWE,aAAX,CAAyB,EAAzB;;AAEA,aAAKC,KAAL;AAEA,aAAKC,YAAL,CAAkB,KAAKJ,KAAL,CAAWK,OAAX,GAAqBC,SAArB,GAAiCC,KAAnD,EAA0D,KAAKP,KAAL,CAAWK,OAAX,GAAqBG,eAArB,GAAuCC,WAAvC,CAAmD,CAAnD,CAA1D;AACA,aAAKL,YAAL,CAAkB,EAAlB,EAAsB,KAAKJ,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCC,kBAApC,EAAtB;AACA,aAAKP,YAAL,CAAkB,KAAKQ,MAAL,CAAYC,SAAZ,EAAlB,EAA2C,KAAKb,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAA3C;AACA,aAAKV,YAAL,CAAkB,KAAKQ,MAAvB,EAA+B,KAAKZ,KAAL,CAAWe,QAAX,EAA/B;AACA,aAAKX,YAAL,CAAkB,CAAlB,EAAqB,KAAKJ,KAAL,CAAWgB,YAAX,GAA0BH,SAA1B,EAArB;AACD,OAzBH;AA4BEI,MAAAA,aAAa,EAAG,yBAChB;AACE,aAAKjB,KAAL,CAAWkB,QAAX,CAAoB,IAApB;;AAEA,aAAKd,YAAL,CAAkB,CAAlB,EAAqB,KAAKJ,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAArB;AACA,aAAKV,YAAL,CAAkB,CAAlB,EAAqB,KAAKJ,KAAL,CAAWgB,YAAX,GAA0BH,SAA1B,EAArB;AACD,OAlCH;AAqCEM,MAAAA,mBAAmB,EAAG,+BACtB;AACE,aAAKP,MAAL,CAAYd,IAAZ,CAAiB,UAAjB;;AAEA,aAAKsB,wBAAL,CAA8B,KAAKR,MAAnC,EAA2C,KAAKZ,KAAhD;AACA,aAAKI,YAAL,CAAkB,KAAKQ,MAAL,CAAYC,SAAZ,EAAlB,EAA2C,KAAKb,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAA3C;;AAEA,aAAKF,MAAL,CAAYS,OAAZ;;AACA,aAAKT,MAAL,GAAc,IAAInC,EAAE,CAACkB,IAAH,CAAQC,KAAZ,EAAd;;AACA,aAAKgB,MAAL,CAAYd,IAAZ,CAAiB,MAAjB;;AACA,aAAKE,KAAL,CAAWkB,QAAX,CAAoB,KAAKN,MAAzB;;AAEA,aAAKQ,wBAAL,CAA8B,KAAKR,MAAnC,EAA2C,KAAKZ,KAAhD;AACA,aAAKI,YAAL,CAAkB,KAAKQ,MAAL,CAAYC,SAAZ,EAAlB,EAA2C,KAAKb,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAA3C;AACD,OAnDH;AAsDEQ,MAAAA,sBAAsB,EAAG,kCACzB;AACE,aAAKV,MAAL,CAAYW,OAAZ,CAAoB,CAApB,EAAuB,UAAvB;;AAEA,aAAKpB,KAAL;AAEA,aAAKiB,wBAAL,CAA8B,KAAKR,MAAnC,EAA2C,KAAKZ,KAAhD;AACA,aAAKI,YAAL,CAAkB,KAAKQ,MAAL,CAAYC,SAAZ,EAAlB,EAA2C,KAAKb,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAA3C;AACA,aAAKV,YAAL,CAAkB,UAAlB,EAA8B,KAAKJ,KAAL,CAAWwB,MAAX,CAAkBC,qBAAlB,CAAwC,CAAxC,EAA0C,CAA1C,EAA6CC,QAA7C,EAA9B;AACD,OA/DH;AAkEEC,MAAAA,cAAc,EAAG,0BACjB;AACE,YAAIjC,KAAK,GAAG,IAAIjB,EAAE,CAACkB,IAAH,CAAQC,KAAZ,EAAZ;AACAF,QAAAA,KAAK,CAACI,IAAN,CAAW,MAAX;;AAEA,aAAKE,KAAL,CAAWkB,QAAX,CAAoBxB,KAApB;;AACA,aAAKS,KAAL;AAEA,aAAKiB,wBAAL,CAA8B1B,KAA9B,EAAqC,KAAKM,KAA1C;;AAEA,aAAKA,KAAL,CAAW4B,UAAX;;AACA,aAAKzB,KAAL;AAEA,aAAKiB,wBAAL,CAA8B,KAAKR,MAAnC,EAA2C,KAAKZ,KAAhD;AAEA,aAAKI,YAAL,CAAkB,KAAKQ,MAAvB,EAA+B,KAAKZ,KAAL,CAAWe,QAAX,EAA/B;AACA,aAAKX,YAAL,CAAkB,KAAKJ,KAAL,CAAWe,QAAX,GAAsBF,SAAtB,EAAlB,EAAqD,KAAKb,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAArD,EAAyG,GAAzG;AACApB,QAAAA,KAAK,CAAC2B,OAAN;AACD,OApFH;AAuFEQ,MAAAA,gBAAgB,EAAG,4BACnB;AACE,YAAIC,OAAO,GAAG,EAAd;;AACA,aAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BiC,UAAAA,OAAO,CAACjC,CAAD,CAAP,GAAa;AAACkC,YAAAA,KAAK,EAAE,UAAUlC,CAAlB;AAAqBmC,YAAAA,IAAI,EAAE;AAA3B,WAAb;AACD;;AACD,YAAItC,KAAK,GAAGjB,EAAE,CAACkB,IAAH,CAAQsC,OAAR,CAAgBC,IAAhB,CAAqBC,WAArB,CAAiCL,OAAjC,CAAZ;;AAEA,aAAK9B,KAAL,CAAWoC,YAAX,CAAwB,OAAxB;;AACA,aAAKpC,KAAL,CAAWqC,WAAX,CAAuB,MAAvB;;AAEA,aAAKrC,KAAL,CAAWkB,QAAX,CAAoBxB,KAApB;;AACA,aAAKS,KAAL;AAEA,aAAKiB,wBAAL,CAA8B1B,KAA9B,EAAqC,KAAKM,KAA1C;AACA,aAAKI,YAAL,CAAkBV,KAAK,CAACmB,SAAN,EAAlB,EAAqC,KAAKb,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAArC;AACA,aAAKV,YAAL,CAAkB,QAAlB,EAA4B,KAAKJ,KAAL,CAAWwB,MAAX,CAAkBC,qBAAlB,CAAwC,CAAxC,EAA0C,CAA1C,EAA6CC,QAA7C,EAA5B;AACA,aAAKtB,YAAL,CAAkB,2BAAlB,EAA+C,KAAKJ,KAAL,CAAWwB,MAAX,CAAkBC,qBAAlB,CAAwC,CAAxC,EAA0C,CAA1C,EAA6Ca,OAA7C,EAA/C;AACA5C,QAAAA,KAAK,CAAC2B,OAAN;AACD,OA1GH;AA6GEkB,MAAAA,kBAAkB,EAAG,8BACrB;AACE,YAAIC,QAAQ,GAAG;AACbC,UAAAA,QAAQ,EAAG,kBAASC,UAAT,EAAqBC,IAArB,EAA2BC,EAA3B,EAA+B;AACxCF,YAAAA,UAAU,CAACG,qBAAX,CAAiCF,IAAjC,EAAuCC,EAAvC;AACAF,YAAAA,UAAU,CAACI,mBAAX,CAA+B,IAA/B,EAAqC,OAArC,EAA8C,IAA9C,EAAoDH,IAApD,EAA0DC,EAA1D;AACD;AAJY,SAAf;;AAMA,aAAK5C,KAAL,CAAW+C,WAAX,CAAuBP,QAAvB;;AAEA,aAAKrC,KAAL;;AAEA,YAAI6C,MAAM,GAAG,KAAKhD,KAAL,CAAWwB,MAAX,CAAkBC,qBAAlB,CAAwC,CAAxC,EAA0C,CAA1C,CAAb;;AACAuB,QAAAA,MAAM,CAACC,QAAP,CAAgB,OAAhB;AAEA,aAAK9C,KAAL;AAEA,aAAKC,YAAL,CAAkB,KAAKQ,MAAL,CAAYC,SAAZ,EAAlB,EAA2C,KAAKb,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAA3C,EAA+F,0BAA/F;AACA,aAAKV,YAAL,CAAkB,OAAlB,EAA2B,KAAKJ,KAAL,CAAWwB,MAAX,CAAkBC,qBAAlB,CAAwC,CAAxC,EAA0C,CAA1C,EAA6CC,QAA7C,EAA3B,EAAoF,cAApF;AACA,aAAKtB,YAAL,CAAkB,OAAlB,EAA2B,KAAKJ,KAAL,CAAWe,QAAX,GAAsBmC,OAAtB,CAA8B,CAA9B,CAA3B,EAA6D,aAA7D;AACD,OAjIH;AAoIEC,MAAAA,UAAU,EAAG,sBACb;AACE,YAAIC,aAAa,GAAG,IAAI3E,EAAE,CAACkB,IAAH,CAAQC,KAAZ,EAApB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKe,MAAL,CAAYC,SAAZ,EAApB,EAA6ChB,CAAC,EAA9C,EAAkD;AAChD,cAAIA,CAAC,GAAG,CAAJ,IAAS,CAAb,EAAgB;AACduD,YAAAA,aAAa,CAACtD,IAAd,CAAmB,WAAWD,CAAC,GAAG,CAAf,CAAnB;AACD;AACF;;AAED,YAAI2C,QAAQ,GAAG;AACba,UAAAA,MAAM,EAAG,gBAAS1D,IAAT,EAAe;AACtB,mBAAQ,CAAC2D,QAAQ,CAAC3D,IAAI,CAAC4D,KAAL,CAAW,CAAX,EAAc5D,IAAI,CAAC6D,MAAnB,CAAD,EAA6B,EAA7B,CAAR,GAA2C,CAA5C,IAAiD,CAAjD,IAAsD,CAA9D;AACD;AAHY,SAAf;;AAKA,aAAKxD,KAAL,CAAW+C,WAAX,CAAuBP,QAAvB;;AACA,aAAKrC,KAAL;AAEA,aAAKiB,wBAAL,CAA8BgC,aAA9B,EAA6C,KAAKpD,KAAlD;AACA,aAAKI,YAAL,CAAkBgD,aAAa,CAACvC,SAAd,EAAlB,EAA6C,KAAKb,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAA7C,EAAiG,KAAjG;AACAsC,QAAAA,aAAa,CAAC/B,OAAd;AACD,OAxJH;AA2JEoC,MAAAA,UAAU,EAAG,sBACb;AACE,YAAIC,WAAW,GAAG,IAAIjF,EAAE,CAACkB,IAAH,CAAQC,KAAZ,EAAlB;;AACA,YAAI+D,MAAM,GAAG,SAATA,MAAS,CAASC,CAAT,EAAYC,CAAZ,EAAe;AAC1B,iBAAOD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAYD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AACD,SAFD;;AAIA,aAAK,IAAIhE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKe,MAAL,CAAYC,SAAZ,EAApB,EAA6ChB,CAAC,EAA9C,EAAkD;AAChD6D,UAAAA,WAAW,CAAC5D,IAAZ,CAAiB,KAAKc,MAAL,CAAYsC,OAAZ,CAAoBrD,CAApB,CAAjB;AACD;;AACD6D,QAAAA,WAAW,CAACI,IAAZ,CAAiBH,MAAjB;AAEA,YAAInB,QAAQ,GAAG;AACbmB,UAAAA,MAAM,EAAGA;AADI,SAAf;;AAGA,aAAK3D,KAAL,CAAW+C,WAAX,CAAuBP,QAAvB;;AACA,aAAKrC,KAAL;AAEA,aAAKiB,wBAAL,CAA8BsC,WAA9B,EAA2C,KAAK1D,KAAhD;AACA,aAAKI,YAAL,CAAkBsD,WAAW,CAAC7C,SAAZ,EAAlB,EAA2C,KAAKb,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAA3C,EAA+F,KAA/F;AACA4C,QAAAA,WAAW,CAACrC,OAAZ;AACD,OAhLH;AAmLE0C,MAAAA,oBAAoB,EAAG,gCACvB;AACE,YAAIX,aAAa,GAAG,IAAI3E,EAAE,CAACkB,IAAH,CAAQC,KAAZ,EAApB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKe,MAAL,CAAYC,SAAZ,EAApB,EAA6ChB,CAAC,EAA9C,EAAkD;AAChD,cAAIA,CAAC,GAAG,CAAJ,IAAS,CAAb,EAAgB;AACduD,YAAAA,aAAa,CAACtD,IAAd,CAAmB,WAAWD,CAAC,GAAG,CAAf,CAAnB;AACD;AACF;;AAED,YAAI6D,WAAW,GAAG,IAAIjF,EAAE,CAACkB,IAAH,CAAQC,KAAZ,EAAlB;;AACA,YAAI+D,MAAM,GAAG,SAATA,MAAS,CAASC,CAAT,EAAYC,CAAZ,EAAe;AAC1B,iBAAOD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAYD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AACD,SAFD;;AAIA,aAAK,IAAIhE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuD,aAAa,CAACvC,SAAd,EAApB,EAA+ChB,CAAC,EAAhD,EAAoD;AAClD6D,UAAAA,WAAW,CAAC5D,IAAZ,CAAiBsD,aAAa,CAACF,OAAd,CAAsBrD,CAAtB,CAAjB;AACD;;AACD6D,QAAAA,WAAW,CAACI,IAAZ,CAAiBH,MAAjB;AAEA,YAAInB,QAAQ,GAAG;AACbmB,UAAAA,MAAM,EAAGA,MADI;AAGbN,UAAAA,MAAM,EAAG,gBAAS1D,IAAT,EAAe;AACtB,mBAAQ,CAAC2D,QAAQ,CAAC3D,IAAI,CAAC4D,KAAL,CAAW,CAAX,EAAc5D,IAAI,CAAC6D,MAAnB,CAAD,EAA6B,EAA7B,CAAR,GAA2C,CAA5C,IAAiD,CAAjD,IAAsD,CAA9D;AACD;AALY,SAAf;;AAOA,aAAKxD,KAAL,CAAW+C,WAAX,CAAuBP,QAAvB;;AACA,aAAKrC,KAAL;AAEA,aAAKiB,wBAAL,CAA8BsC,WAA9B,EAA2C,KAAK1D,KAAhD;AACA,aAAKI,YAAL,CAAkBsD,WAAW,CAAC7C,SAAZ,EAAlB,EAA2C,KAAKb,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoCI,YAApC,EAA3C,EAA+F,KAA/F;AACA4C,QAAAA,WAAW,CAACrC,OAAZ;AACA+B,QAAAA,aAAa,CAAC/B,OAAd;AACD,OApNH;AAuNE2C,MAAAA,oBAAoB,EAAG,gCACvB;AACE,YAAIC,YAAY,GAAG,CAAnB;AACA,YAAInC,OAAO,GAAG,EAAd;;AACA,aAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BiC,UAAAA,OAAO,CAACjC,CAAD,CAAP,GAAa;AAACkC,YAAAA,KAAK,EAAE,UAAUlC,CAAlB;AAAqBmC,YAAAA,IAAI,EAAE,2BAA3B;AAAwDkC,YAAAA,OAAO,EAAGrE,CAAC,IAAIoE;AAAvE,WAAb;AACD;;AACD,YAAIvE,KAAK,GAAGjB,EAAE,CAACkB,IAAH,CAAQsC,OAAR,CAAgBC,IAAhB,CAAqBC,WAArB,CAAiCL,OAAjC,CAAZ;;AAEA,aAAK9B,KAAL,CAAW+C,WAAX,CAAuB;AACrBN,UAAAA,QAAQ,EAAG,kBAASC,UAAT,EAAqBC,IAArB,EAA2BC,EAA3B,EAA+B;AACxCF,YAAAA,UAAU,CAACG,qBAAX,CAAiCF,IAAjC,EAAuCC,EAAvC;AACAF,YAAAA,UAAU,CAACyB,YAAX,CAAwB,SAAxB,EAAmC,SAAnC,EAA8C,IAA9C,EAAoDxB,IAApD,EAA0DC,EAA1D;AACD;AAJoB,SAAvB;;AAOA,aAAK5C,KAAL,CAAWoC,YAAX,CAAwB,OAAxB;;AACA,aAAKpC,KAAL,CAAWqC,WAAX,CAAuB,MAAvB;;AAEA,aAAKrC,KAAL,CAAWkB,QAAX,CAAoBxB,KAApB;;AACA,aAAKS,KAAL;;AAEA,aAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,cAAImD,MAAM,GAAG,KAAKhD,KAAL,CAAWwB,MAAX,CAAkBC,qBAAlB,CAAwC5B,CAAxC,EAA0C,CAA1C,CAAb;;AAEA,cAAImD,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA;AACD;;AAED,cAAInD,CAAC,IAAIoE,YAAT,EAAuB;AACrB,iBAAKG,UAAL,CAAgBpB,MAAM,CAACqB,SAAP,EAAhB;AACD,WAFD,MAEO;AACL,iBAAKC,WAAL,CAAiBtB,MAAM,CAACqB,SAAP,EAAjB;AACD;AACF;;AACD3E,QAAAA,KAAK,CAAC2B,OAAN;AACD,OA5PH;AA+PEkD,MAAAA,UAAU,EAAG,sBACb;AACE,YAAI/B,QAAQ,GAAG;AACbgC,UAAAA,MAAM,EAAG,gBAAS7B,IAAT,EAAe,CAAE;AADb,SAAf;AAIA,YAAI8B,GAAG,GAAG,KAAKA,GAAL,CAASjC,QAAT,EAAmB,QAAnB,CAAV;;AACA,aAAKxC,KAAL,CAAW0E,SAAX,CAAqB3B,WAArB,CAAiCP,QAAjC;;AAEA,YAAIQ,MAAM,GAAG,KAAKhD,KAAL,CAAW0E,SAAX,CAAqBC,aAArB,CAAmC,CAAnC,EAAsC,CAAtC,CAAb;;AACA,aAAK3E,KAAL,CAAW0E,SAAX,CAAqBE,cAArB,CAAoC5B,MAApC;;AACA,aAAK6B,gBAAL,CAAsBJ,GAAtB;AACA,aAAKK,gBAAL,CAAsBL,GAAtB,EAA2BzB,MAA3B;AACAA,QAAAA,MAAM,CAAC3B,OAAP;AACD,OA7QH;AAgRE0D,MAAAA,sBAAsB,EAAG,kCACzB;AACE,YAAIrF,KAAK,GAAGjB,EAAE,CAACkB,IAAH,CAAQsC,OAAR,CAAgBC,IAAhB,CAAqBC,WAArB,CAAiC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAjC,CAAZ;;AACA,aAAKnC,KAAL,CAAWkB,QAAX,CAAoBxB,KAApB;;AACA,aAAKM,KAAL,CAAWgF,gBAAX,CAA4B,OAA5B;;AACA,aAAKhF,KAAL,CAAWgB,YAAX,GAA0BlB,IAA1B,CAA+BJ,KAAK,CAACwD,OAAN,CAAc,CAAd,CAA/B;;AAEA,aAAKlD,KAAL,CAAWgB,YAAX,GAA0BiE,SAA1B;;AACA,aAAKC,UAAL,CAAgB,KAAKlF,KAAL,CAAWmF,QAAX,CAAoBC,WAApB,EAAhB;AACA1F,QAAAA,KAAK,CAAC2B,OAAN;AACD,OA1RH;AA6REgE,MAAAA,sBAAsB,EAAG,kCACzB;AACE,aAAKrF,KAAL,CAAWkB,QAAX,CAAoB,IAApB;;AACA,aAAKf,KAAL;;AACA,aAAKH,KAAL,CAAWK,OAAX,GAAqBK,YAArB,GAAoC4E,cAApC;;AAEA,YAAIC,KAAK,GAAG,CAAE,EAAF,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,EAA9C,CAAZ;AACA,YAAIzD,OAAO,GAAG,EAAd;;AACA,aAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0F,KAAK,CAAC/B,MAA1B,EAAkC3D,CAAC,EAAnC,EAAuC;AACrCiC,UAAAA,OAAO,CAACjC,CAAD,CAAP,GAAa;AAACkC,YAAAA,KAAK,EAAE,UAAQwD,KAAK,CAAC1F,CAAD,CAAb,GAAiB,IAAzB;AAA+BmC,YAAAA,IAAI,EAAE,UAAQuD,KAAK,CAAC1F,CAAD,CAAb,GAAiB;AAAtD,WAAb;AACD;;AAED,YAAIH,KAAK,GAAGjB,EAAE,CAACkB,IAAH,CAAQsC,OAAR,CAAgBC,IAAhB,CAAqBC,WAArB,CAAiCL,OAAjC,CAAZ;;AAEA,aAAK9B,KAAL,CAAWwF,qBAAX,CAAiC,IAAjC;;AAEA,aAAKxF,KAAL,CAAW+C,WAAX,CAAuB;AACrBN,UAAAA,QAAQ,EAAG,kBAASC,UAAT,EAAqBC,IAArB,EAA2BC,EAA3B,EAA+B;AACxCF,YAAAA,UAAU,CAACG,qBAAX,CAAiCF,IAAjC,EAAuCC,EAAvC;AACD;AAHoB,SAAvB;;AAMA,aAAK5C,KAAL,CAAWoC,YAAX,CAAwB,OAAxB;;AACA,aAAKpC,KAAL,CAAWqC,WAAX,CAAuB,MAAvB;;AAEA,aAAKrC,KAAL,CAAWkB,QAAX,CAAoBxB,KAApB;;AACA,aAAKS,KAAL;AAEA1B,QAAAA,EAAE,CAACgH,KAAH,CAASC,KAAT,CAAeC,IAAf,CAAoB,YAAW;AAC7B,eAAKC,MAAL,CAAY,YAAW;AAErB,gBAAIC,SAAS,GAAG,KAAK7F,KAAL,CAAWK,OAAX,GAAqBK,YAArB,EAAhB;;AAEA,gBAAIoF,aAAa,GAAG,CAApB;;AAEA,iBAAK,IAAIjG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,OAAO,CAAC0B,MAA5B,EAAoC3D,CAAC,EAArC,EAAyC;AACvC,kBAAImD,MAAM,GAAG,KAAKhD,KAAL,CAAWwB,MAAX,CAAkBC,qBAAlB,CAAwC5B,CAAxC,EAA0C,CAA1C,CAAb;;AAEA,kBAAImD,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA;AACD;;AAED,mBAAK5C,YAAL,CAAkB4C,MAAM,CAAC+C,WAAP,GAAqBC,MAAvC,EAA+CH,SAAS,CAACpF,WAAV,CAAsBZ,CAAtB,CAA/C;AAEAiG,cAAAA,aAAa;AACd;;AAED,iBAAK1B,UAAL,CAAgB0B,aAAa,IAAI,CAAjC;;AAEA,iBAAK9F,KAAL,CAAWwF,qBAAX,CAAiC,KAAjC;;AAEA9F,YAAAA,KAAK,CAAC2B,OAAN;AACD,WAxBD;AAyBD,SA1BD,EA0BG,IA1BH,EA0BS,GA1BT;AA4BA,aAAK4E,IAAL;AACD,OAtVH;AAyVEC,MAAAA,6BAA6B,EAAG,yCAAW;AACzC,YAAIxG,KAAK,GAAG,IAAIjB,EAAE,CAACkB,IAAH,CAAQC,KAAZ,CAAkB,CAAC,GAAD,CAAlB,CAAZ;;AACA,aAAKI,KAAL,CAAWkB,QAAX,CAAoBxB,KAApB;;AAEA,aAAKU,YAAL,CAAkB,CAAlB,EAAqBV,KAAK,CAACmB,SAAN,EAArB;AAEA,aAAKsF,gBAAL,CAAsB,KAAKnG,KAA3B,EAAkC,mBAAlC,EAAuD,YACvD;AACEN,UAAAA,KAAK,CAACI,IAAN,CAAW,GAAX;AACD,SAHD,EAIA,UAASsG,EAAT,EACA;AACE,eAAKC,cAAL,CAAoBD,EAApB,EAAwB3H,EAAE,CAACgH,KAAH,CAASa,IAAT,CAAcC,IAAtC;AACA,eAAKC,qBAAL,CAA2BJ,EAAE,CAACK,OAAH,EAA3B;AACA,eAAKrG,YAAL,CAAkB,CAAlB,EAAqBgG,EAAE,CAACK,OAAH,EAArB;AACA,eAAKD,qBAAL,CAA2BJ,EAAE,CAACM,UAAH,EAA3B;AACA,eAAKtG,YAAL,CAAkB,CAAlB,EAAqBgG,EAAE,CAACM,UAAH,EAArB;AACD,SAPD,CAOEC,IAPF,CAOO,IAPP,CAJA;;AAaA,aAAK3G,KAAL,CAAWkB,QAAX,CAAoB,IAApB;;AACAxB,QAAAA,KAAK,CAAC2B,OAAN;AACD;AA9WH;AALF,GADA;AAtBA5C,EAAAA,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,IAAX,CAAgB0H,IAAhB,CAAqBhI,aAArB,GAAqCA,aAArC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * @asset(qx/icon/${qx.icontheme}/16/places/folder.png)\n */\n\nqx.Class.define(\"qx.test.ui.list.List\",\n{\n  extend : qx.test.ui.list.AbstractListTest,\n  include : qx.dev.unit.MMock,\n\n  members :\n  {\n    createModelData : function()\n    {\n      var model = new qx.data.Array();\n\n      for (var i = 0; i < 100; i++) {\n        model.push(\"item \" + (i + 1));\n      }\n\n      return model;\n    },\n\n\n    testCreation : function()\n    {\n      this._list.setWidth(300);\n      this._list.setItemHeight(30);\n\n      this.flush();\n\n      this.assertEquals(this._list.getPane().getBounds().width, this._list.getPane().getColumnConfig().getItemSize(0));\n      this.assertEquals(30, this._list.getPane().getRowConfig().getDefaultItemSize());\n      this.assertEquals(this._model.getLength(), this._list.getPane().getRowConfig().getItemCount());\n      this.assertEquals(this._model, this._list.getModel());\n      this.assertEquals(0, this._list.getSelection().getLength());\n    },\n\n\n    testNullModel : function()\n    {\n      this._list.setModel(null);\n\n      this.assertEquals(0, this._list.getPane().getRowConfig().getItemCount());\n      this.assertEquals(0, this._list.getSelection().getLength());\n    },\n\n\n    testChangeModelSize : function()\n    {\n      this._model.push(\"new item\");\n\n      this.assertModelEqualsRowData(this._model, this._list);\n      this.assertEquals(this._model.getLength(), this._list.getPane().getRowConfig().getItemCount());\n\n      this._model.dispose();\n      this._model = new qx.data.Array();\n      this._model.push(\"item\");\n      this._list.setModel(this._model);\n\n      this.assertModelEqualsRowData(this._model, this._list);\n      this.assertEquals(this._model.getLength(), this._list.getPane().getRowConfig().getItemCount());\n    },\n\n\n    testChangeModelContent : function()\n    {\n      this._model.setItem(0, \"new item\");\n\n      this.flush();\n\n      this.assertModelEqualsRowData(this._model, this._list);\n      this.assertEquals(this._model.getLength(), this._list.getPane().getRowConfig().getItemCount());\n      this.assertEquals(\"new item\", this._list._layer.getRenderedCellWidget(0,0).getLabel());\n    },\n\n\n    testResetModel : function()\n    {\n      var model = new qx.data.Array();\n      model.push(\"item\");\n\n      this._list.setModel(model);\n      this.flush();\n\n      this.assertModelEqualsRowData(model, this._list);\n\n      this._list.resetModel();\n      this.flush();\n\n      this.assertModelEqualsRowData(this._model, this._list);\n\n      this.assertEquals(this._model, this._list.getModel());\n      this.assertEquals(this._list.getModel().getLength(), this._list.getPane().getRowConfig().getItemCount(), \"b\");\n      model.dispose();\n    },\n\n\n    testComplexModel : function()\n    {\n      var rawData = [];\n      for (var i = 0; i < 10; i++) {\n        rawData[i] = {label: \"Item \" + i, icon: \"icon/16/places/folder.png\"};\n      }\n      var model = qx.data.marshal.Json.createModel(rawData);\n\n      this._list.setLabelPath(\"label\");\n      this._list.setIconPath(\"icon\");\n\n      this._list.setModel(model);\n      this.flush();\n\n      this.assertModelEqualsRowData(model, this._list);\n      this.assertEquals(model.getLength(), this._list.getPane().getRowConfig().getItemCount());\n      this.assertEquals(\"Item 5\", this._list._layer.getRenderedCellWidget(5,0).getLabel());\n      this.assertEquals(\"icon/16/places/folder.png\", this._list._layer.getRenderedCellWidget(0,0).getIcon());\n      model.dispose();\n    },\n\n\n    testReverseBinding : function()\n    {\n      var delegate = {\n        bindItem : function(controller, item, id) {\n          controller.bindDefaultProperties(item, id);\n          controller.bindPropertyReverse(null, \"label\", null, item, id);\n        }\n      };\n      this._list.setDelegate(delegate);\n\n      this.flush();\n\n      var widget = this._list._layer.getRenderedCellWidget(0,0);\n      widget.setLabel(\"abcde\");\n\n      this.flush();\n\n      this.assertEquals(this._model.getLength(), this._list.getPane().getRowConfig().getItemCount(), \"Model size <-> pane size\");\n      this.assertEquals(\"abcde\", this._list._layer.getRenderedCellWidget(0,0).getLabel(), \"Widget value\");\n      this.assertEquals(\"abcde\", this._list.getModel().getItem(0), \"Model value\");\n    },\n\n\n    testFilter : function()\n    {\n      var filteredModel = new qx.data.Array();\n      for (var i = 0; i < this._model.getLength(); i++) {\n        if (i % 2 == 0) {\n          filteredModel.push(\"item \" + (i + 1));\n        }\n      }\n\n      var delegate = {\n        filter : function(data) {\n          return ((parseInt(data.slice(5, data.length), 10) - 1) % 2 == 0);\n        }\n      };\n      this._list.setDelegate(delegate);\n      this.flush();\n\n      this.assertModelEqualsRowData(filteredModel, this._list);\n      this.assertEquals(filteredModel.getLength(), this._list.getPane().getRowConfig().getItemCount(), \"two\");\n      filteredModel.dispose();\n    },\n\n\n    testSorter : function()\n    {\n      var sortedModel = new qx.data.Array();\n      var sorter = function(a, b) {\n        return a < b ? 1 : a > b ? -1 : 0;\n      };\n\n      for (var i = 0; i < this._model.getLength(); i++) {\n        sortedModel.push(this._model.getItem(i));\n      }\n      sortedModel.sort(sorter);\n\n      var delegate = {\n        sorter : sorter\n      };\n      this._list.setDelegate(delegate);\n      this.flush();\n\n      this.assertModelEqualsRowData(sortedModel, this._list);\n      this.assertEquals(sortedModel.getLength(), this._list.getPane().getRowConfig().getItemCount(), \"two\");\n      sortedModel.dispose();\n    },\n\n\n    testSorterWithFilter : function()\n    {\n      var filteredModel = new qx.data.Array();\n      for (var i = 0; i < this._model.getLength(); i++) {\n        if (i % 2 == 0) {\n          filteredModel.push(\"item \" + (i + 1));\n        }\n      }\n\n      var sortedModel = new qx.data.Array();\n      var sorter = function(a, b) {\n        return a < b ? 1 : a > b ? -1 : 0;\n      };\n\n      for (var i = 0; i < filteredModel.getLength(); i++) {\n        sortedModel.push(filteredModel.getItem(i));\n      }\n      sortedModel.sort(sorter);\n\n      var delegate = {\n        sorter : sorter,\n\n        filter : function(data) {\n          return ((parseInt(data.slice(5, data.length), 10) - 1) % 2 == 0);\n        }\n      };\n      this._list.setDelegate(delegate);\n      this.flush();\n\n      this.assertModelEqualsRowData(sortedModel, this._list);\n      this.assertEquals(sortedModel.getLength(), this._list.getPane().getRowConfig().getItemCount(), \"two\");\n      sortedModel.dispose();\n      filteredModel.dispose();\n    },\n\n\n    testDisabledElements : function()\n    {\n      var disabledItem = 3;\n      var rawData = [];\n      for (var i = 0; i < 10; i++) {\n        rawData[i] = {label: \"Item \" + i, icon: \"icon/16/places/folder.png\", enabled: (i != disabledItem)};\n      }\n      var model = qx.data.marshal.Json.createModel(rawData);\n\n      this._list.setDelegate({\n        bindItem : function(controller, item, id) {\n          controller.bindDefaultProperties(item, id);\n          controller.bindProperty(\"enabled\", \"enabled\", null, item, id);\n        }\n      });\n\n      this._list.setLabelPath(\"label\");\n      this._list.setIconPath(\"icon\");\n\n      this._list.setModel(model);\n      this.flush();\n\n      for (var i = 0; i < 10; i++) {\n        var widget = this._list._layer.getRenderedCellWidget(i,0);\n\n        if (widget == null) {\n          // row is not rendered\n          continue;\n        }\n\n        if (i != disabledItem) {\n          this.assertTrue(widget.isEnabled());\n        } else {\n          this.assertFalse(widget.isEnabled());\n        }\n      }\n      model.dispose();\n    },\n\n\n    testOnPool : function()\n    {\n      var delegate = {\n        onPool : function(item) {}\n      };\n\n      var spy = this.spy(delegate, \"onPool\");\n      this._list._provider.setDelegate(delegate);\n\n      var widget = this._list._provider.getCellWidget(4, 0);\n      this._list._provider.poolCellWidget(widget);\n      this.assertCalledOnce(spy);\n      this.assertCalledWith(spy, widget);\n      widget.dispose();\n    },\n\n\n    testMultiSelectionMode : function()\n    {\n      var model = qx.data.marshal.Json.createModel([\"a\", \"b\", \"c\"]);\n      this._list.setModel(model);\n      this._list.setSelectionMode('multi');\n      this._list.getSelection().push(model.getItem(0));\n\n      this._list.getSelection().removeAll();\n      this.assertNull(this._list._manager.getLeadItem());\n      model.dispose();\n    },\n\n\n    testVariableItemHeight : function()\n    {\n      this._list.setModel(null);\n      this.flush();\n      this._list.getPane().getRowConfig().resetItemSizes();\n      \n      var sizes = [ 16, 32, 48, 16, 32, 48, 16, 32, 48, 16, 32, 48 ];\n      var rawData = [];\n      for (var i = 0; i < sizes.length; i++) {\n        rawData[i] = {label: \"Item \"+sizes[i]+\"px\", icon: \"icon/\"+sizes[i]+\"/places/folder.png\"}\n      }      \n      \n      var model = qx.data.marshal.Json.createModel(rawData);\n\n      this._list.setVariableItemHeight(true);\n      \n      this._list.setDelegate({\n        bindItem : function(controller, item, id) {\n          controller.bindDefaultProperties(item, id);\n        }\n      });\n\n      this._list.setLabelPath(\"label\");\n      this._list.setIconPath(\"icon\");\n\n      this._list.setModel(model);\n      this.flush();\n\n      qx.event.Timer.once(function() {\n        this.resume(function() {\n        \n          var rowConfig = this._list.getPane().getRowConfig();\n\n          var testedWidgets = 0;\n          \n          for (var i = 0; i < rawData.length; i++) {\n            var widget = this._list._layer.getRenderedCellWidget(i,0);\n    \n            if (widget == null) {\n              // row is not rendered\n              continue;\n            }\n\n            this.assertEquals(widget.getSizeHint().height, rowConfig.getItemSize(i));\n            \n            testedWidgets++;\n          }\n          \n          this.assertTrue(testedWidgets >= 3);\n          \n          this._list.setVariableItemHeight(false);\n          \n          model.dispose();\n        });\n      }, this, 100);\n          \n      this.wait();\n    },\n\n\n    testChangeModelLengthListener : function() {\n      var model = new qx.data.Array([\"a\"]);\n      this._list.setModel(model);\n\n      this.assertEquals(1, model.getLength());\n\n      this.assertEventFired(this._list, \"changeModelLength\", function()\n      {\n        model.push(\"b\");\n      },\n      function(ev)\n      {\n        this.assertInstance(ev, qx.event.type.Data);\n        this.assertPositiveInteger(ev.getData());\n        this.assertEquals(2, ev.getData());\n        this.assertPositiveInteger(ev.getOldData());\n        this.assertEquals(1, ev.getOldData());\n      }.bind(this));\n\n      this._list.setModel(null);\n      model.dispose();\n    }\n\n  }\n});\n"
  ]
}