{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/core/SizeHint.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "type",
    "members",
    "setUp",
    "widget",
    "ui",
    "core",
    "Widget",
    "tearDown",
    "dispose",
    "getHint",
    "invalidateLayoutCache",
    "getSizeHint",
    "assertHint",
    "min",
    "size",
    "max",
    "Error",
    "getDefaultSize",
    "setSize",
    "setStretching",
    "shrink",
    "grow",
    "testDefaultSize",
    "Infinity",
    "testSize",
    "testMinLargerThanSize",
    "testMinSmallerThanSize",
    "testMaxSmallerThanSize",
    "testMaxLargerThanSize",
    "testNoGrow",
    "testNoShrink",
    "testNoStretch",
    "testNoGrowAndMaxLargerThanSize",
    "testNoGrowAndMaxSmallerThanSize",
    "testNoGrowAndMinLargerThanSize",
    "testNoShrinkAndMinLargerSize",
    "testNoShrinkAndMinSmallerSize",
    "testNoShrinkAndMaxSmallerSize",
    "testMinLargerThanMax",
    "isDebugOn",
    "that",
    "assertException",
    "AssertionError",
    "testMinAndMaxLargerThanSize",
    "testMinAndMaxSmallerThanSize",
    "test",
    "SizeHint"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,0BAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAEEC,IAAAA,IAAI,EAAG,UAFT;AAIEC,IAAAA,OAAO,EACP;AACEC,MAAAA,KAAK,EAAG,iBAAW;AACjB,aAAKC,MAAL,GAAc,IAAIb,EAAE,CAACc,EAAH,CAAMC,IAAN,CAAWC,MAAf,EAAd;AACD,OAHH;AAMEC,MAAAA,QAAQ,EAAG,oBAAW;AACpB,aAAKJ,MAAL,CAAYK,OAAZ;AACD,OARH;AAWEC,MAAAA,OAAO,EAAG,mBACV;AACE,aAAKN,MAAL,CAAYO,qBAAZ;AACA,eAAO,KAAKP,MAAL,CAAYQ,WAAZ,EAAP;AACD,OAfH;AAkBEC,MAAAA,UAAU,EAAG,oBAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyB;AACpC,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD,OApBH;AAuBEC,MAAAA,cAAc,EAAG,0BAAW;AAC1B,cAAM,IAAID,KAAJ,CAAU,sBAAV,CAAN;AACD,OAzBH;AA4BEE,MAAAA,OAAO,EAAG,iBAASL,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyB;AACjC,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD,OA9BH;AAiCEG,MAAAA,aAAa,EAAG,uBAASC,MAAT,EAAiBC,IAAjB,EAAuB;AACrC,cAAM,IAAIL,KAAJ,CAAU,sBAAV,CAAN;AACD,OAnCH;AAsCEM,MAAAA,eAAe,EAAG,2BAAW;AAC3B,aAAKV,UAAL,CAAgB,CAAhB,EAAmB,KAAKK,cAAL,EAAnB,EAA0CM,QAA1C;AACD,OAxCH;AA2CEC,MAAAA,QAAQ,EAAG,oBACX;AACE,aAAKL,aAAL,CAAmB,IAAnB,EAAyB,IAAzB;AACA,aAAKD,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwB,IAAxB;AACA,aAAKN,UAAL,CAAgB,CAAhB,EAAmB,GAAnB,EAAwBW,QAAxB;AACD,OAhDH;AAmDEE,MAAAA,qBAAqB,EAAG,iCACxB;AACE,aAAKN,aAAL,CAAmB,IAAnB,EAAyB,IAAzB;AACA,aAAKD,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAvB;AACA,aAAKN,UAAL,CAAgB,GAAhB,EAAqB,GAArB,EAA0BW,QAA1B;AACD,OAxDH;AA2DEG,MAAAA,sBAAsB,EAAG,kCACzB;AACE,aAAKP,aAAL,CAAmB,IAAnB,EAAyB,IAAzB;AACA,aAAKD,OAAL,CAAa,EAAb,EAAiB,GAAjB,EAAsB,IAAtB;AACA,aAAKN,UAAL,CAAgB,EAAhB,EAAoB,GAApB,EAAyBW,QAAzB;AACD,OAhEH;AAmEEI,MAAAA,sBAAsB,EAAG,kCACzB;AACE,aAAKR,aAAL,CAAmB,IAAnB,EAAyB,IAAzB;AACA,aAAKD,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwB,EAAxB;AACA,aAAKN,UAAL,CAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB;AACD,OAxEH;AA2EEgB,MAAAA,qBAAqB,EAAG,iCACxB;AACE,aAAKT,aAAL,CAAmB,IAAnB,EAAyB,IAAzB;AACA,aAAKD,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwB,GAAxB;AACA,aAAKN,UAAL,CAAgB,CAAhB,EAAmB,GAAnB,EAAwB,GAAxB;AACD,OAhFH;AAmFEiB,MAAAA,UAAU,EAAG,sBACb;AACE,aAAKV,aAAL,CAAmB,IAAnB,EAAyB,KAAzB;AACA,aAAKD,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwB,IAAxB;AACA,aAAKN,UAAL,CAAgB,CAAhB,EAAmB,GAAnB,EAAwB,GAAxB;AACD,OAxFH;AA2FEkB,MAAAA,YAAY,EAAG,wBACf;AACE,aAAKX,aAAL,CAAmB,KAAnB,EAA0B,IAA1B;AACA,aAAKD,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwB,IAAxB;AACA,aAAKN,UAAL,CAAgB,GAAhB,EAAqB,GAArB,EAA0BW,QAA1B;AACD,OAhGH;AAmGEQ,MAAAA,aAAa,EAAG,yBAAW;AACzB,aAAKZ,aAAL,CAAmB,KAAnB,EAA0B,KAA1B;AACA,aAAKD,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwB,IAAxB;AACA,aAAKN,UAAL,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B;AACD,OAvGH;AA0GEoB,MAAAA,8BAA8B,EAAG,0CACjC;AACE,aAAKb,aAAL,CAAmB,IAAnB,EAAyB,KAAzB;AACA,aAAKD,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwB,GAAxB;AACA,aAAKN,UAAL,CAAgB,CAAhB,EAAmB,GAAnB,EAAwB,GAAxB;AACD,OA/GH;AAkHEqB,MAAAA,+BAA+B,EAAG,2CAClC;AACE,aAAKd,aAAL,CAAmB,IAAnB,EAAyB,KAAzB;AACA,aAAKD,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwB,EAAxB;AACA,aAAKN,UAAL,CAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB;AACD,OAvHH;AA0HEsB,MAAAA,8BAA8B,EAAG,0CACjC;AACE,aAAKf,aAAL,CAAmB,IAAnB,EAAyB,KAAzB;AACA,aAAKD,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAvB;AACA,aAAKN,UAAL,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B;AACD,OA/HH;AAkIEuB,MAAAA,4BAA4B,EAAG,wCAC/B;AACE,aAAKhB,aAAL,CAAmB,KAAnB,EAA0B,IAA1B;AACA,aAAKD,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuB,IAAvB;AACA,aAAKN,UAAL,CAAgB,GAAhB,EAAqB,GAArB,EAA0BW,QAA1B;AACD,OAvIH;AA0IEa,MAAAA,6BAA6B,EAAG,yCAChC;AACE,aAAKjB,aAAL,CAAmB,KAAnB,EAA0B,IAA1B;AACA,aAAKD,OAAL,CAAa,EAAb,EAAiB,GAAjB,EAAsB,IAAtB;AACA,aAAKN,UAAL,CAAgB,GAAhB,EAAqB,GAArB,EAA0BW,QAA1B;AACD,OA/IH;AAkJEc,MAAAA,6BAA6B,EAAG,yCAChC;AACE,aAAKlB,aAAL,CAAmB,KAAnB,EAA0B,IAA1B;AACA,aAAKD,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwB,EAAxB;AACA,aAAKN,UAAL,CAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB;AACD,OAvJH;AA0JE0B,MAAAA,oBAAoB,EAAG,gCACvB;AACE,aAAKnB,aAAL,CAAmB,IAAnB,EAAyB,IAAzB;AACA,aAAKD,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB;;AACA,YAAI,KAAKqB,SAAL,EAAJ,EACA;AACE,cAAIC,IAAI,GAAG,IAAX;AACA,eAAKC,eAAL,CAAqB,YAAW;AAC9BD,YAAAA,IAAI,CAAC/B,OAAL;AACD,WAFD,EAEGnB,EAAE,CAACe,IAAH,CAAQqC,cAFX;AAGD;AACF,OArKH;AAwKEC,MAAAA,2BAA2B,EAAG,uCAC9B;AACE,aAAKxB,aAAL,CAAmB,IAAnB,EAAyB,IAAzB;AACA,aAAKD,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB;AACA,aAAKN,UAAL,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B;AACD,OA7KH;AAgLEgC,MAAAA,4BAA4B,EAAG,wCAC/B;AACE,aAAKzB,aAAL,CAAmB,IAAnB,EAAyB,IAAzB;AACA,aAAKD,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB;AACA,aAAKN,UAAL,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B;AACD;AArLH;AALF,GADA;AAlBAtB,EAAAA,EAAE,CAACuD,IAAH,CAAQzC,EAAR,CAAWC,IAAX,CAAgByC,QAAhB,CAAyBrD,aAAzB,GAAyCA,aAAzC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.core.SizeHint\",\n{\n  extend : qx.dev.unit.TestCase,\n  type : \"abstract\",\n\n  members :\n  {\n    setUp : function() {\n      this.widget = new qx.ui.core.Widget();\n    },\n\n\n    tearDown : function() {\n      this.widget.dispose();\n    },\n\n\n    getHint : function()\n    {\n      this.widget.invalidateLayoutCache();\n      return this.widget.getSizeHint();\n    },\n\n\n    assertHint : function(min, size, max) {\n      throw new Error(\"abstract method call\");\n    },\n\n\n    getDefaultSize : function() {\n      throw new Error(\"abstract method call\");\n    },\n\n\n    setSize : function(min, size, max) {\n      throw new Error(\"abstract method call\");\n    },\n\n\n    setStretching : function(shrink, grow) {\n      throw new Error(\"abstract method call\");\n    },\n\n\n    testDefaultSize : function() {\n      this.assertHint(0, this.getDefaultSize(), Infinity);\n    },\n\n\n    testSize : function()\n    {\n      this.setStretching(true, true);\n      this.setSize(null, 200, null);\n      this.assertHint(0, 200, Infinity);\n    },\n\n\n    testMinLargerThanSize : function()\n    {\n      this.setStretching(true, true);\n      this.setSize(200, 100, null);\n      this.assertHint(200, 200, Infinity);\n    },\n\n\n    testMinSmallerThanSize : function()\n    {\n      this.setStretching(true, true);\n      this.setSize(50, 150, null);\n      this.assertHint(50, 150, Infinity);\n    },\n\n\n    testMaxSmallerThanSize : function()\n    {\n      this.setStretching(true, true);\n      this.setSize(null, 100, 10);\n      this.assertHint(0, 10, 10);\n    },\n\n\n    testMaxLargerThanSize : function()\n    {\n      this.setStretching(true, true);\n      this.setSize(null, 100, 150);\n      this.assertHint(0, 100, 150);\n    },\n\n\n    testNoGrow : function()\n    {\n      this.setStretching(true, false);\n      this.setSize(null, 100, null);\n      this.assertHint(0, 100, 100);\n    },\n\n\n    testNoShrink : function()\n    {\n      this.setStretching(false, true);\n      this.setSize(null, 100, null);\n      this.assertHint(100, 100, Infinity);\n    },\n\n\n    testNoStretch : function() {\n      this.setStretching(false, false);\n      this.setSize(null, 100, null);\n      this.assertHint(100, 100, 100);\n    },\n\n\n    testNoGrowAndMaxLargerThanSize : function()\n    {\n      this.setStretching(true, false);\n      this.setSize(null, 100, 150);\n      this.assertHint(0, 100, 100);\n    },\n\n\n    testNoGrowAndMaxSmallerThanSize : function()\n    {\n      this.setStretching(true, false);\n      this.setSize(null, 100, 50);\n      this.assertHint(0, 50, 50);\n    },\n\n\n    testNoGrowAndMinLargerThanSize : function()\n    {\n      this.setStretching(true, false);\n      this.setSize(150, 100, null);\n      this.assertHint(150, 150, 150);\n    },\n\n\n    testNoShrinkAndMinLargerSize : function()\n    {\n      this.setStretching(false, true);\n      this.setSize(150, 100, null);\n      this.assertHint(150, 150, Infinity);\n    },\n\n\n    testNoShrinkAndMinSmallerSize : function()\n    {\n      this.setStretching(false, true);\n      this.setSize(50, 100, null);\n      this.assertHint(100, 100, Infinity);\n    },\n\n\n    testNoShrinkAndMaxSmallerSize : function()\n    {\n      this.setStretching(false, true);\n      this.setSize(null, 100, 50);\n      this.assertHint(50, 50, 50);\n    },\n\n\n    testMinLargerThanMax : function()\n    {\n      this.setStretching(true, true);\n      this.setSize(200, 100, 150);\n      if (this.isDebugOn())\n      {\n        var that = this;\n        this.assertException(function() {\n          that.getHint();\n        }, qx.core.AssertionError);\n      }\n    },\n\n\n    testMinAndMaxLargerThanSize : function()\n    {\n      this.setStretching(true, true);\n      this.setSize(150, 100, 200);\n      this.assertHint(150, 150, 200);\n    },\n\n\n    testMinAndMaxSmallerThanSize : function()\n    {\n      this.setStretching(true, true);\n      this.setSize(150, 300, 200);\n      this.assertHint(150, 200, 200);\n    }\n  }\n});\n"
  ]
}