{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/core/Blocker.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "__blocker",
    "setUp",
    "core",
    "Blocker",
    "getRoot",
    "setColor",
    "setOpacity",
    "tearDown",
    "dispose",
    "testBlocker",
    "blockerElement",
    "getBlockerElement",
    "block",
    "flush",
    "assertTrue",
    "isBlocked",
    "isIncluded",
    "unblock",
    "assertFalse",
    "testBlockerThrice",
    "testForceUnblock",
    "forceUnblock",
    "testBlockedEvent",
    "__blockedEventFired",
    "__unblockedEventFired",
    "addListenerOnce",
    "e",
    "wait",
    "testRestoreActiveAndFocusedWidgets",
    "activeWidget",
    "focusedWidget",
    "focusHandler",
    "event",
    "Registration",
    "getManager",
    "window",
    "getHandler",
    "handler",
    "Focus",
    "txt2",
    "form",
    "TextField",
    "add",
    "left",
    "top",
    "focus",
    "txt1",
    "activate",
    "Widget",
    "getWidgetByElement",
    "getActive",
    "getFocus",
    "destroy",
    "testRestoreDisposedWidget",
    "widget",
    "txt"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.core.Blocker\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    __blocker : null,\n\n    setUp : function() {\n      this.base(arguments);\n\n      this.__blocker = new qx.ui.core.Blocker(this.getRoot());\n      this.__blocker.setColor(\"green\");\n      this.__blocker.setOpacity(0.5);\n    },\n\n    tearDown : function() {\n      this.base(arguments);\n\n      this.__blocker.dispose();\n    },\n\n    testBlocker : function()\n    {\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertFalse(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertFalse(blockerElement.isIncluded(), \"isIncluded()\");\n    },\n\n    testBlockerThrice : function()\n    {\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertFalse(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertFalse(blockerElement.isIncluded(), \"isIncluded()\");\n    },\n\n    testForceUnblock : function()\n    {\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      this.__blocker.forceUnblock();\n      this.flush();\n      this.assertFalse(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertFalse(blockerElement.isIncluded(), \"isIncluded()\");\n    },\n\n    testBlockedEvent : function()\n    {\n      this.__blockedEventFired = false;\n      this.__unblockedEventFired = false;\n\n      this.__blocker.addListenerOnce(\"blocked\", function(e){\n        this.__blockedEventFired = true;\n      }, this);\n\n      this.__blocker.addListenerOnce(\"unblocked\", function(e){\n        this.__unblockedEventFired = true;\n      }, this);\n\n      this.__blocker.block();\n      this.__blocker.unblock();\n\n      this.wait(100, function() {\n        this.assertTrue(this.__blockedEventFired, \"'blocked' event was not fired, after block() was executed!\");\n        this.assertTrue(this.__unblockedEventFired, \"'unblocked' event was not fired, after unblock() was executed!\");\n      }, this);\n    },\n\n    testRestoreActiveAndFocusedWidgets : function()\n    {\n      var activeWidget, focusedWidget;\n      var focusHandler = qx.event.Registration.getManager(window).getHandler(qx.event.handler.Focus);\n\n      var txt2 = new qx.ui.form.TextField();\n      this.getRoot().add(txt2, {left: 100, top:0});\n      txt2.focus();\n\n      var txt1 = new qx.ui.form.TextField();\n      this.getRoot().add(txt1);\n      // set active widget after focusing a widget, because focus() sets the same widget as active one.\n      txt1.activate();\n\n      this.flush();\n\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      activeWidget = qx.ui.core.Widget.getWidgetByElement(focusHandler.getActive());\n      this.assertFalse(activeWidget === txt1, \"text field 1 must not be active\");\n\n      focusedWidget = qx.ui.core.Widget.getWidgetByElement(focusHandler.getFocus());\n      this.assertFalse(focusedWidget === txt2, \"text field 2 must not be focused\");\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertFalse(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertFalse(blockerElement.isIncluded(), \"isIncluded()\");\n\n      activeWidget = qx.ui.core.Widget.getWidgetByElement(focusHandler.getActive());\n      this.assertTrue(activeWidget === txt1, \"text field 1 must be active\");\n\n      focusedWidget = qx.ui.core.Widget.getWidgetByElement(focusHandler.getFocus());\n      this.assertTrue(focusedWidget === txt2, \"text field 2 must be focused\");\n\n      // clear\n      txt1.destroy();\n      txt2.destroy();\n      this.flush();\n    },\n\n\n    testRestoreDisposedWidget : function()\n    {\n      var widget;\n      var focusHandler = qx.event.Registration.getManager(window).getHandler(qx.event.handler.Focus);\n      var txt = new qx.ui.form.TextField();\n      this.getRoot().add(txt);\n      txt.focus();\n      this.flush();\n\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.__blocker.block();\n      this.flush();\n      this.assertTrue(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertTrue(blockerElement.isIncluded(), \"isIncluded()\");\n\n      // destroy text field\n      txt.destroy();\n      this.flush();\n\n      this.__blocker.unblock();\n      this.flush();\n      this.assertFalse(this.__blocker.isBlocked(), \"isBlocked()\");\n      this.assertFalse(blockerElement.isIncluded(), \"isIncluded()\");\n\n      // text field must not be focused\n      widget = qx.ui.core.Widget.getWidgetByElement(focusHandler.getFocus());\n      this.assertFalse(widget === txt, \"text field must be focused, because it is destroyed\");\n\n      txt.destroy();\n      this.flush();\n    }\n  }\n});\n"
  ]
}