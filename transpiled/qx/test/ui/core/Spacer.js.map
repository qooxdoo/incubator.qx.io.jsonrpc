{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/core/Spacer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "members",
    "tearDown",
    "getSandbox",
    "restore",
    "testConstructor",
    "spacer",
    "ui",
    "core",
    "Spacer",
    "assertEquals",
    "getWidth",
    "getHeight",
    "destroy",
    "testConstructorWithParams",
    "testDestroy",
    "spy",
    "queue",
    "Dispose",
    "assertCalledOnce",
    "add",
    "assertCalledWith",
    "testDestroyOnAlreadyDestroyed",
    "flush",
    "assertNotCalled",
    "testDestroyWithParent",
    "layout",
    "HBox",
    "container",
    "Composite",
    "_remove",
    "dispose",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2016 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.core.Spacer\",\n{\n  extend : qx.dev.unit.TestCase,\n  include : qx.dev.unit.MMock,\n\n  members :\n  {\n    tearDown: function() {\n      // Restore all stubs, spies and overridden host objects.\n      this.getSandbox().restore();\n    },\n\n\n    testConstructor : function() {\n      var spacer = new qx.ui.core.Spacer();\n\n      this.assertEquals(0, spacer.getWidth());\n      this.assertEquals(0, spacer.getHeight());\n\n      // cleanup memory\n      spacer.destroy();\n    },\n\n\n    testConstructorWithParams : function() {\n      var spacer = new qx.ui.core.Spacer(100, 200);\n\n      this.assertEquals(100, spacer.getWidth());\n      this.assertEquals(200, spacer.getHeight());\n\n      // cleanup memory\n      spacer.destroy();\n    },\n\n\n    testDestroy : function() {\n      this.spy(qx.ui.core.queue.Dispose, \"add\");\n\n      var spacer = new qx.ui.core.Spacer();\n      spacer.destroy();\n\n      this.assertCalledOnce(qx.ui.core.queue.Dispose.add);\n      this.assertCalledWith(qx.ui.core.queue.Dispose.add, spacer);\n    },\n\n\n    testDestroyOnAlreadyDestroyed : function() {\n      var spacer = new qx.ui.core.Spacer();\n\n      // destroy it and flush the dispose queue\n      spacer.destroy();\n      qx.ui.core.queue.Dispose.flush();\n\n      // add spy now, otherwise the previous destroy call is counted\n      this.spy(qx.ui.core.queue.Dispose, \"add\");\n\n      // now test it\n      spacer.destroy();\n\n      this.assertNotCalled(qx.ui.core.queue.Dispose.add);\n    },\n\n\n    testDestroyWithParent : function() {\n      var layout = new qx.ui.layout.HBox();\n      var container = new qx.ui.container.Composite(layout);\n      var spacer = new qx.ui.core.Spacer();\n      container.add(spacer);\n\n      this.spy(container, \"_remove\");\n\n      spacer.destroy();\n\n      this.assertCalledOnce(container._remove);\n      this.assertCalledWith(container._remove, spacer);\n\n      // cleanup memory\n      container.destroy();\n      layout.dispose();\n    }\n  }\n});\n"
  ]
}