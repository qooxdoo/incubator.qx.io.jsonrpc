{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/ComboBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "include",
    "dev",
    "unit",
    "MMock",
    "members",
    "testWithSetValueWithArbitraryValue",
    "combobox",
    "__createComboBox",
    "getRoot",
    "add",
    "flush",
    "assertIdentical",
    "getValue",
    "open",
    "getChildrenContainer",
    "getSelection",
    "length",
    "removeAll",
    "dispose",
    "testWithSetValueWith",
    "list",
    "item",
    "findItem",
    "setValue",
    "assertEquals",
    "testWithoutSetValue",
    "testFocusTextOnClose",
    "getChildControl",
    "setSelection",
    "spy",
    "close",
    "assertCalled",
    "tabFocus",
    "testNotFocusTextOnCloseWhenInvisibleBefore",
    "assertNotCalled",
    "initValue",
    "comboBox",
    "form",
    "ComboBox",
    "i",
    "ListItem"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,0BAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,cADtB;AAGEC,IAAAA,OAAO,EAAGV,EAAE,CAACW,GAAH,CAAOC,IAAP,CAAYC,KAHxB;AAKEC,IAAAA,OAAO,EACP;AACEC,MAAAA,kCAAkC,EAAE,8CAAW;AAC7C,YAAIC,QAAQ,GAAG,KAAKC,yBAAL,CAAsB,iBAAtB,CAAf;;AACA,aAAKC,OAAL,GAAeC,GAAf,CAAmBH,QAAnB;AACA,aAAKI,KAAL;AAEA,aAAKC,eAAL,CAAqB,iBAArB,EAAwCL,QAAQ,CAACM,QAAT,EAAxC,EACE,8BADF;AAGAN,QAAAA,QAAQ,CAACO,IAAT;AACA,aAAKH,KAAL;AAEA,aAAKC,eAAL,CAAqB,CAArB,EAAwBL,QAAQ,CAACQ,oBAAT,GAAgCC,YAAhC,GAA+CC,MAAvE,EACE,uCADF;AAGA,aAAKR,OAAL,GAAeS,SAAf;AACAX,QAAAA,QAAQ,CAACY,OAAT;AACA,aAAKR,KAAL;AACD,OAlBH;AAoBES,MAAAA,oBAAoB,EAAE,gCAAW;AAC/B,YAAIb,QAAQ,GAAG,KAAKC,yBAAL,CAAsB,QAAtB,CAAf;;AACA,aAAKC,OAAL,GAAeC,GAAf,CAAmBH,QAAnB;AACA,aAAKI,KAAL;AAEA,aAAKC,eAAL,CAAqB,QAArB,EAA+BL,QAAQ,CAACM,QAAT,EAA/B,EACE,8BADF;AAGAN,QAAAA,QAAQ,CAACO,IAAT;AACA,aAAKH,KAAL;AAEA,YAAIU,IAAI,GAAGd,QAAQ,CAACQ,oBAAT,EAAX;AACA,YAAIO,IAAI,GAAGD,IAAI,CAACE,QAAL,CAAc,QAAd,CAAX;AACA,aAAKX,eAAL,CAAqBU,IAArB,EAA2BD,IAAI,CAACL,YAAL,GAAoB,CAApB,CAA3B,EACE,yCADF,EAb+B,CAgB/B;;AACAT,QAAAA,QAAQ,CAACiB,QAAT,CAAkB,QAAlB;AACA,aAAKC,YAAL,CAAkB,QAAlB,EAA4BlB,QAAQ,CAACM,QAAT,EAA5B;AACA,aAAKY,YAAL,CAAkB,CAAlB,EAAqBJ,IAAI,CAACL,YAAL,GAAoBC,MAAzC;AAEA,aAAKR,OAAL,GAAeS,SAAf;AACAX,QAAAA,QAAQ,CAACY,OAAT;AACA,aAAKR,KAAL;AACD,OA5CH;AA8CEe,MAAAA,mBAAmB,EAAE,+BAAW;AAC9B,YAAInB,QAAQ,GAAG,KAAKC,yBAAL,EAAf;;AACA,aAAKC,OAAL,GAAeC,GAAf,CAAmBH,QAAnB;AACA,aAAKI,KAAL;AAEA,aAAKC,eAAL,CAAqB,IAArB,EAA2BL,QAAQ,CAACM,QAAT,EAA3B,EACE,8BADF;AAGAN,QAAAA,QAAQ,CAACO,IAAT;AACA,aAAKH,KAAL;AAEA,aAAKC,eAAL,CAAqB,CAArB,EAAwBL,QAAQ,CAACQ,oBAAT,GAAgCC,YAAhC,GAA+CC,MAAvE,EACE,uCADF;AAGA,aAAKR,OAAL,GAAeS,SAAf;AACAX,QAAAA,QAAQ,CAACY,OAAT;AACA,aAAKR,KAAL;AACD,OA/DH;AAiEEgB,MAAAA,oBAAoB,EAAE,gCAAW;AAC/B,YAAIpB,QAAQ,GAAG,KAAKC,yBAAL,EAAf;;AACA,aAAKC,OAAL,GAAeC,GAAf,CAAmBH,QAAnB;AACA,aAAKI,KAAL,GAH+B,CAK/B;;AACAJ,QAAAA,QAAQ,CAACO,IAAT;AACA,aAAKH,KAAL,GAP+B,CAS/B;;AACA,YAAIU,IAAI,GAAGd,QAAQ,CAACqB,eAAT,CAAyB,MAAzB,CAAX;AACA,YAAIN,IAAI,GAAGD,IAAI,CAACE,QAAL,CAAc,QAAd,CAAX;AACAF,QAAAA,IAAI,CAACQ,YAAL,CAAkB,CAACP,IAAD,CAAlB;AACA,aAAKX,KAAL,GAb+B,CAe/B;;AACA,aAAKmB,GAAL,CAASvB,QAAT,EAAmB,UAAnB;AACAA,QAAAA,QAAQ,CAACwB,KAAT;AACA,aAAKC,YAAL,CAAkBzB,QAAQ,CAAC0B,QAA3B;AAEA,aAAKxB,OAAL,GAAeS,SAAf;AACAX,QAAAA,QAAQ,CAACY,OAAT;AACD,OAvFH;AAyFEe,MAAAA,0CAA0C,EAAE,sDAAW;AACrD,YAAI3B,QAAQ,GAAG,KAAKC,yBAAL,EAAf;;AACA,aAAKC,OAAL,GAAeC,GAAf,CAAmBH,QAAnB;AACA,aAAKI,KAAL,GAHqD,CAKrD;;AACAJ,QAAAA,QAAQ,CAACiB,QAAT,CAAkB,QAAlB;AACA,aAAKb,KAAL,GAPqD,CASrD;;AACA,aAAKmB,GAAL,CAASvB,QAAT,EAAmB,UAAnB;AACAA,QAAAA,QAAQ,CAACwB,KAAT;AACA,aAAKI,eAAL,CAAqB5B,QAAQ,CAAC0B,QAA9B;AAEA,aAAKxB,OAAL,GAAeS,SAAf;AACAX,QAAAA,QAAQ,CAACY,OAAT;AACD,OAzGH;AA2GEX,MAAAA,yBAAgB,EAAG,mCAAS4B,SAAT,EACnB;AACE,YAAIC,QAAQ,GAAG,IAAI9C,EAAE,CAACQ,EAAH,CAAMuC,IAAN,CAAWC,QAAf,EAAf;;AAEA,YAAIH,SAAJ,EAAe;AACbC,UAAAA,QAAQ,CAACb,QAAT,CAAkBY,SAAlB;AACD;;AAED,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BH,UAAAA,QAAQ,CAAC3B,GAAT,CAAa,IAAInB,EAAE,CAACQ,EAAH,CAAMuC,IAAN,CAAWG,QAAf,CAAwB,UAAUD,CAAlC,CAAb;AACD;;AAED,eAAOH,QAAP;AACD;AAxHH;AANF,GADA;AAjBA9C,EAAAA,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWuC,IAAX,CAAgBC,QAAhB,CAAyB7C,aAAzB,GAAyCA,aAAzC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.form.ComboBox\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  include : qx.dev.unit.MMock,\n\n  members :\n  {\n    testWithSetValueWithArbitraryValue: function() {\n      var combobox = this.__createComboBox(\"arbitrary value\");\n      this.getRoot().add(combobox);\n      this.flush();\n\n      this.assertIdentical(\"arbitrary value\", combobox.getValue(),\n        \"Wrong result from getValue()\");\n\n      combobox.open();\n      this.flush();\n\n      this.assertIdentical(0, combobox.getChildrenContainer().getSelection().length,\n        \"The pop-up list has an item selected!\");\n\n      this.getRoot().removeAll();\n      combobox.dispose();\n      this.flush();\n    },\n\n    testWithSetValueWith: function() {\n      var combobox = this.__createComboBox(\"Item 0\");\n      this.getRoot().add(combobox);\n      this.flush();\n\n      this.assertIdentical(\"Item 0\", combobox.getValue(),\n        \"Wrong result from getValue()\");\n\n      combobox.open();\n      this.flush();\n\n      var list = combobox.getChildrenContainer();\n      var item = list.findItem(\"Item 0\");\n      this.assertIdentical(item, list.getSelection()[0],\n        \"The wrong item selected in pop-up list!\");\n\n      // check if the combobox is case sensitive, [BUG #3024]\n      combobox.setValue(\"item 2\");\n      this.assertEquals(\"item 2\", combobox.getValue());\n      this.assertEquals(0, list.getSelection().length);\n\n      this.getRoot().removeAll();\n      combobox.dispose();\n      this.flush();\n    },\n\n    testWithoutSetValue: function() {\n      var combobox = this.__createComboBox();\n      this.getRoot().add(combobox);\n      this.flush();\n\n      this.assertIdentical(null, combobox.getValue(),\n        \"Wrong result from getValue()\");\n\n      combobox.open();\n      this.flush();\n\n      this.assertIdentical(0, combobox.getChildrenContainer().getSelection().length,\n        \"The pop-up list has an item selected!\");\n\n      this.getRoot().removeAll();\n      combobox.dispose();\n      this.flush();\n    },\n\n    testFocusTextOnClose: function() {\n      var combobox = this.__createComboBox();\n      this.getRoot().add(combobox);\n      this.flush();\n\n      // Open list popup\n      combobox.open();\n      this.flush();\n\n      // Select item\n      var list = combobox.getChildControl(\"list\");\n      var item = list.findItem(\"Item 0\");\n      list.setSelection([item]);\n      this.flush();\n\n      // Asssert focus on close\n      this.spy(combobox, \"tabFocus\");\n      combobox.close();\n      this.assertCalled(combobox.tabFocus);\n\n      this.getRoot().removeAll();\n      combobox.dispose();\n    },\n\n    testNotFocusTextOnCloseWhenInvisibleBefore: function() {\n      var combobox = this.__createComboBox();\n      this.getRoot().add(combobox);\n      this.flush();\n\n      // Enter value\n      combobox.setValue(\"Item 0\");\n      this.flush();\n\n      // Assert not focus on close\n      this.spy(combobox, \"tabFocus\");\n      combobox.close();\n      this.assertNotCalled(combobox.tabFocus);\n\n      this.getRoot().removeAll();\n      combobox.dispose();\n    },\n\n    __createComboBox : function(initValue)\n    {\n      var comboBox = new qx.ui.form.ComboBox();\n\n      if (initValue) {\n        comboBox.setValue(initValue);\n      }\n\n      for (var i = 0; i < 10; i++) {\n        comboBox.add(new qx.ui.form.ListItem(\"Item \" + i));\n      }\n\n      return comboBox;\n    }\n\n  }\n});"
  ]
}