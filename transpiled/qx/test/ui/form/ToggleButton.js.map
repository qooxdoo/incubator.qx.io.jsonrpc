{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/ToggleButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "__button",
    "setUp",
    "button",
    "form",
    "ToggleButton",
    "getRoot",
    "add",
    "flush",
    "testInitial",
    "assertNotState",
    "testCheck",
    "setValue",
    "assertState",
    "testUncheck",
    "testImplicitCheckTri",
    "setTriState",
    "testImplicitCheckTriLater",
    "testCheckTri",
    "testUncheckTri",
    "widget",
    "state",
    "assertTrue",
    "hasState",
    "assertFalse",
    "executeOn",
    "that",
    "window",
    "setTimeout",
    "immediateExecuteOn",
    "fireEvent",
    "event",
    "type",
    "Event",
    "tearDown",
    "destroy"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.form.ToggleButton\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    __button : null,\n\n    setUp : function()\n    {\n      var button = this.__button = new qx.ui.form.ToggleButton;\n      this.getRoot().add(button);\n      this.flush();\n    },\n\n    //\n    // 2-state button\n    //\n\n    testInitial: function(){\n      var button = this.__button;\n\n      this.assertNotState(button, \"checked\");\n    },\n\n    testCheck: function(){\n      var button = this.__button;\n      button.setValue(true);\n\n      this.assertState(button, \"checked\");\n    },\n\n    testUncheck: function() {\n      var button = this.__button;\n      button.setValue(false);\n\n      this.assertNotState(button, \"checked\");\n    },\n\n    //\n    // 3-state button\n    //\n\n    testImplicitCheckTri: function() {\n      var button = this.__button;\n      button.setTriState(true);\n      button.setValue(null);\n\n      // [x] checked\n      // [v] undetermined\n      this.assertNotState(button, \"checked\");\n      this.assertState(button, \"undetermined\");\n    },\n\n    testImplicitCheckTriLater: function() {\n      var button = this.__button;\n      button.setValue(null);\n      button.setTriState(true);\n\n      // [x] checked\n      // [v] undetermined\n      this.assertNotState(button, \"checked\");\n      this.assertState(button, \"undetermined\");\n    },\n\n    testCheckTri: function(){\n      var button = this.__button;\n      button.setTriState(true);\n      button.setValue(null);\n      button.setValue(true);\n\n      // [v] checked\n      // [x] undetermined\n      this.assertState(button, \"checked\");\n      this.assertNotState(button, \"undetermined\");\n    },\n\n    testUncheckTri: function(){\n      var button = this.__button;\n      button.setTriState(true);\n      button.setValue(null);\n      button.setValue(false);\n\n      // [x] checked\n      // [x] undetermined\n      this.assertNotState(button, \"checked\");\n      this.assertNotState(button, \"undetermined\");\n    },\n\n    //\n    // Helper methods\n    //\n\n    assertState: function(widget, state) {\n      this.assertTrue(widget.hasState(state), \"State \" + state + \" not set\");\n    },\n\n    assertNotState: function(widget, state) {\n      this.assertFalse(widget.hasState(state), \"State \" + state + \" is set\");\n    },\n\n    executeOn: function(widget) {\n      var that = this;\n      window.setTimeout(function() {\n        that.immediateExecuteOn(widget);\n      });\n    },\n\n    immediateExecuteOn : function(widget) {\n      widget.fireEvent(\"execute\", qx.event.type.Event, [false, true]);\n    },\n\n    tearDown : function()\n    {\n      this.base(arguments);\n      this.__button.destroy();\n    }\n  }\n});\n"
  ]
}