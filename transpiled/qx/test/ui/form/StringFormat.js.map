{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/StringFormat.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "__test",
    "widget",
    "assertTrue",
    "hasInterface",
    "constructor",
    "form",
    "IStringForm",
    "assertNull",
    "getValue",
    "resetValue",
    "setValue",
    "assertEquals",
    "self",
    "assertEventFired",
    "e",
    "getData",
    "getOldData",
    "destroy",
    "testTextField",
    "TextField",
    "testPasswordField",
    "PasswordField",
    "testTextArea",
    "TextArea",
    "testComboBox",
    "ComboBox",
    "testLabel",
    "basic",
    "Label",
    "StringFormat"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.form.StringFormat\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    __test: function(widget) {\n      // check if the interface is implemented\n      this.assertTrue(qx.Class.hasInterface(widget.constructor, qx.ui.form.IStringForm), \"Interface is not implemented.\");\n\n      // check for the init value\n      this.assertNull(widget.getValue(), \"Wrong init value set.\");\n\n      // just check if the method is available\n      widget.resetValue();\n\n      // check the getter and setter\n      widget.setValue(\"affe\");\n      this.assertEquals(\"affe\", widget.getValue(), \"Set or get does not work.\");\n\n      var self = this;\n      // event with value\n      this.assertEventFired(widget, \"changeValue\", function() {\n        widget.setValue(\"affen\");\n      }, function(e) {\n        self.assertEquals(\"affen\", e.getData(), \"Not the right number in the event.\");\n        self.assertEquals(\"affe\", e.getOldData(), \"Wrong old data in the event.\");\n      }, \"Event is wrong!\");\n\n      // event with null\n      this.assertEventFired(widget, \"changeValue\", function() {\n        widget.setValue(null);\n      }, function(e) {\n        self.assertEquals(null, e.getData(), \"Not the right number in the event.\");\n        self.assertEquals(\"affen\", e.getOldData(), \"Wrong old data in the event.\");\n      }, \"Event is wrong!\");\n\n      // get rid of the widget\n      widget.destroy();\n    },\n\n    testTextField: function() {\n     this.__test(new qx.ui.form.TextField());\n    },\n\n    testPasswordField: function() {\n     this.__test(new qx.ui.form.PasswordField());\n    },\n\n    testTextArea: function() {\n     this.__test(new qx.ui.form.TextArea());\n    },\n\n    testComboBox: function() {\n     this.__test(new qx.ui.form.ComboBox());\n    },\n\n    testLabel: function() {\n      this.__test(new qx.ui.basic.Label());\n    }\n\n  }\n});"
  ]
}