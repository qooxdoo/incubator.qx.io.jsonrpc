{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/NumberFormat.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "__test",
    "widget",
    "assertTrue",
    "hasInterface",
    "constructor",
    "form",
    "INumberForm",
    "assertEquals",
    "getValue",
    "resetValue",
    "setValue",
    "self",
    "assertEventFired",
    "e",
    "getData",
    "getOldData",
    "destroy",
    "testSpinner",
    "Spinner",
    "testSlider",
    "Slider",
    "NumberFormat"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAiBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,8BAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,cADtB;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,MAAM,EAAE,gBAASC,MAAT,EAAiB;AACvB;AACA,aAAKC,UAAL,CAAgBb,EAAE,CAACI,KAAH,CAASU,YAAT,CAAsBF,MAAM,CAACG,WAA7B,EAA0Cf,EAAE,CAACQ,EAAH,CAAMQ,IAAN,CAAWC,WAArD,CAAhB,EAAmF,2BAAnF,EAFuB,CAIvB;;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqBN,MAAM,CAACO,QAAP,EAArB,EAAwC,uBAAxC,EALuB,CAOvB;;AACAP,QAAAA,MAAM,CAACQ,UAAP,GARuB,CAUvB;;AACAR,QAAAA,MAAM,CAACS,QAAP,CAAgB,EAAhB;AACA,aAAKH,YAAL,CAAkB,EAAlB,EAAsBN,MAAM,CAACO,QAAP,EAAtB,EAAyC,2BAAzC;AAEA,YAAIG,IAAI,GAAG,IAAX;AACA,aAAKC,gBAAL,CAAsBX,MAAtB,EAA8B,aAA9B,EAA6C,YAAW;AACtDA,UAAAA,MAAM,CAACS,QAAP,CAAgB,EAAhB;AACD,SAFD,EAEG,UAASG,CAAT,EAAY;AACbF,UAAAA,IAAI,CAACJ,YAAL,CAAkB,EAAlB,EAAsBM,CAAC,CAACC,OAAF,EAAtB,EAAmC,oCAAnC;AACAH,UAAAA,IAAI,CAACJ,YAAL,CAAkB,EAAlB,EAAsBM,CAAC,CAACE,UAAF,EAAtB,EAAsC,8BAAtC;AACD,SALD,EAKG,iBALH,EAfuB,CAsBvB;;AACAd,QAAAA,MAAM,CAACS,QAAP,CAAgB,IAAhB,EAvBuB,CAyBvB;;AACAT,QAAAA,MAAM,CAACe,OAAP;AACD,OA5BH;AA8BEC,MAAAA,WAAW,EAAE,uBAAW;AACvB,aAAKjB,MAAL,CAAY,IAAIX,EAAE,CAACQ,EAAH,CAAMQ,IAAN,CAAWa,OAAf,EAAZ;AACA,OAhCH;AAkCEC,MAAAA,UAAU,EAAE,sBAAW;AACtB,aAAKnB,MAAL,CAAY,IAAIX,EAAE,CAACQ,EAAH,CAAMQ,IAAN,CAAWe,MAAf,EAAZ;AACA;AApCH;AAJF,GADA;AAjBA/B,EAAAA,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWQ,IAAX,CAAgBgB,YAAhB,CAA6B7B,aAA7B,GAA6CA,aAA7C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.form.NumberFormat\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    __test: function(widget) {\n      // check if the interface is implemented\n      this.assertTrue(qx.Class.hasInterface(widget.constructor, qx.ui.form.INumberForm), \"Interface not implemented\");\n\n      // check for the init value\n      this.assertEquals(0, widget.getValue(), \"Wrong init value set.\");\n\n      // just check if the method is available\n      widget.resetValue();\n\n      // check the getter and setter\n      widget.setValue(10);\n      this.assertEquals(10, widget.getValue(), \"Set or get does not work.\");\n\n      var self = this;\n      this.assertEventFired(widget, \"changeValue\", function() {\n        widget.setValue(11);\n      }, function(e) {\n        self.assertEquals(11, e.getData(), \"Not the right number in the event.\");\n        self.assertEquals(10, e.getOldData(), \"Wrong old data in the event.\");\n      }, \"Event is wrong!\");\n\n      // test for null values\n      widget.setValue(null);\n\n      // get rid of the widget\n      widget.destroy();\n    },\n\n    testSpinner: function() {\n     this.__test(new qx.ui.form.Spinner());\n    },\n\n    testSlider: function() {\n     this.__test(new qx.ui.form.Slider());\n    }\n\n  }\n});"
  ]
}