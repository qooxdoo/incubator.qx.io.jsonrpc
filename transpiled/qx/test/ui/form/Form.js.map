{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/Form.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "include",
    "dev",
    "unit",
    "MMock",
    "members",
    "__testRequired",
    "widget",
    "assert",
    "hasInterface",
    "constructor",
    "form",
    "IForm",
    "assertFalse",
    "getRequired",
    "self",
    "setRequired",
    "assertEventFired",
    "e",
    "assertTrue",
    "getData",
    "getOldData",
    "dispose",
    "__testValid",
    "where",
    "getRoot",
    "add",
    "getValid",
    "hasState",
    "setValid",
    "setInvalidMessage",
    "assertEquals",
    "window",
    "setTimeout",
    "resume",
    "__testInvalidBorder",
    "destroy",
    "wait",
    "flush",
    "assertNotEquals",
    "getDecorator",
    "indexOf",
    "focus",
    "testRequiredSpinner",
    "Spinner",
    "testValidSpinner",
    "testRequiredSlider",
    "Slider",
    "testValidSlider",
    "testRequiredTextField",
    "TextField",
    "testValidTextField",
    "testRequiredTextArea",
    "TextArea",
    "testValidTextArea",
    "testRequiredPasswordField",
    "PasswordField",
    "testValidPasswordField",
    "testRequiredComboBox",
    "ComboBox",
    "testValidComboBox",
    "testRequiredSelectBox",
    "SelectBox",
    "testValidSelectBox",
    "testRequiredCheckBox",
    "CheckBox",
    "testValidCheckBox",
    "testValidRadioButton",
    "RadioButton",
    "testRequiredRadioButton",
    "testValidGroupBox",
    "groupbox",
    "GroupBox",
    "testRequiredGroupBox",
    "testValidRadioGroupBox",
    "RadioGroupBox",
    "testRequiredRadioGroupBox",
    "testValidCheckGroupBox",
    "CheckGroupBox",
    "testRequiredCheckGroupBox",
    "testValidList",
    "List",
    "testRequiredList",
    "testValidTree",
    "tree",
    "Tree",
    "testRequiredTree",
    "testRequiredDateField",
    "DateField",
    "testValidDateField",
    "testRequiredDateChooser",
    "testValidDateChooser",
    "testValidRadioGroup",
    "group",
    "RadioGroup",
    "rb",
    "getInvalidMessage",
    "testRequiredRadioGroup",
    "testRequiredRadioButtonGroup",
    "RadioButtonGroup",
    "testValidRadioButtonGroup",
    "cont",
    "testRedefineItem",
    "Form",
    "resetter",
    "_resetter",
    "redefineItem",
    "spy",
    "item",
    "redefineResetterItem",
    "assertCalledOnce"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.form.Form\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n  include : qx.dev.unit.MMock,\n\n  members :\n  {\n\n    __testRequired: function(widget) {\n      // check if the interface is implemented\n      this.assert(qx.Class.hasInterface(widget.constructor, qx.ui.form.IForm), \"Interface not implemented.\");\n      // test for the default (false)\n      this.assertFalse(widget.getRequired(), \"Default required state is wrong.\");\n\n      // check for the event\n      var self = this;\n      widget.setRequired(false);\n      this.assertEventFired(widget, \"changeRequired\", function () {\n        widget.setRequired(true);\n      }, function(e) {\n        self.assertTrue(e.getData(), \"Wrong data in the event!\");\n        self.assertFalse(e.getOldData(), \"Wrong old data in the event!\");\n      }, \"Change event not fired!\");\n\n      // check if the state is set\n      this.assertTrue(widget.getRequired(), \"Setting of the required flag did not work.\");\n\n      widget.dispose();\n    },\n\n    __testValid: function(widget, where) {\n      // check if the interface is implemented\n      this.assert(qx.Class.hasInterface(widget.constructor, qx.ui.form.IForm), \"Interface not implemented.\");\n\n      this.getRoot().add(widget);\n\n      // test for the default (true)\n      this.assertTrue(widget.getValid(), \"Default valid state is wrong.\");\n      this.assertFalse(!!widget.hasState(\"invalid\"), \"Should not have the invalid state.\");\n\n      widget.setValid(false);\n\n      // check if the state is set\n      this.assertFalse(widget.getValid(), \"Setting of the valid flag did not work.\");\n      this.assertTrue(widget.hasState(\"invalid\"), \"Should have the invalid state.\");\n\n      // check for the event\n      var self = this;\n      this.assertEventFired(widget, \"changeValid\", function () {\n        widget.setValid(true);\n      }, function(e) {\n        self.assertTrue(e.getData(), \"Wrong data in the event.\");\n        self.assertFalse(e.getOldData(), \"Wrong old data in the event.\");\n      }, \"Change event not fired!\");\n\n      // check for the event\n      this.assertEventFired(widget, \"changeInvalidMessage\", function () {\n        widget.setInvalidMessage(\"affe\");\n      }, function(e) {\n        self.assertEquals(\"affe\", e.getData(), \"Wrong data in the event.\");\n        self.assertEquals(\"\", e.getOldData(), \"Wrong old data in the event.\");\n      }, \"Change event not fired!\");\n\n      // set the widget to invalid\n      widget.setValid(false);\n\n      if (where !== \"dont\") {\n        // needs to be tests async because of a strange behavior in opera 9\n        var self = this;\n        window.setTimeout(function() {\n          self.resume(function() {\n            this.__testInvalidBorder(widget);\n\n            widget.destroy();\n          }, self);\n        }, 100);\n        this.wait();\n      }\n\n      widget.destroy();\n    },\n\n    __testInvalidBorder: function(widget) {\n      this.flush();\n\n      // check for the invalid decorator\n      this.assertNotEquals(-1, widget.getDecorator().indexOf(\"invalid\"), \"Decorator not set!\");\n\n      // check the focus\n      widget.focus();\n      this.flush();\n      this.assertNotEquals(-1, widget.getDecorator().indexOf(\"invalid\"), \"Decorator not set!\");\n    },\n\n    testRequiredSpinner: function() {\n      this.__testRequired(new qx.ui.form.Spinner());\n    },\n\n    testValidSpinner: function() {\n     this.__testValid(new qx.ui.form.Spinner());\n    },\n\n    testRequiredSlider: function() {\n      this.__testRequired(new qx.ui.form.Slider());\n    },\n\n    testValidSlider: function() {\n     this.__testValid(new qx.ui.form.Slider());\n    },\n\n    testRequiredTextField: function() {\n      this.__testRequired(new qx.ui.form.TextField());\n    },\n\n    testValidTextField: function() {\n     this.__testValid(new qx.ui.form.TextField());\n    },\n\n    testRequiredTextArea: function() {\n      this.__testRequired(new qx.ui.form.TextArea());\n    },\n\n    testValidTextArea: function() {\n     this.__testValid(new qx.ui.form.TextArea());\n    },\n\n    testRequiredPasswordField: function() {\n      this.__testRequired(new qx.ui.form.PasswordField());\n    },\n\n    testValidPasswordField: function() {\n     this.__testValid(new qx.ui.form.PasswordField());\n    },\n\n    testRequiredComboBox: function() {\n      this.__testRequired(new qx.ui.form.ComboBox());\n    },\n\n    testValidComboBox: function() {\n     this.__testValid(new qx.ui.form.ComboBox());\n    },\n\n    testRequiredSelectBox: function() {\n      this.__testRequired(new qx.ui.form.SelectBox());\n    },\n\n    testValidSelectBox: function() {\n      this.__testValid(new qx.ui.form.SelectBox());\n    },\n\n    testRequiredCheckBox: function() {\n      this.__testRequired(new qx.ui.form.CheckBox());\n    },\n\n    testValidCheckBox: function() {\n     this.__testValid(new qx.ui.form.CheckBox(), \"dont\");\n    },\n\n    testValidRadioButton: function() {\n     this.__testValid(new qx.ui.form.RadioButton(), \"dont\");\n    },\n\n    testRequiredRadioButton: function() {\n      this.__testRequired(new qx.ui.form.RadioButton());\n    },\n\n    testValidGroupBox: function() {\n     this.__testValid(new qx.ui.groupbox.GroupBox(), \"dont\");\n    },\n\n    testRequiredGroupBox: function() {\n      this.__testRequired(new qx.ui.groupbox.GroupBox());\n    },\n\n    testValidRadioGroupBox: function() {\n     this.__testValid(new qx.ui.groupbox.RadioGroupBox(), \"dont\");\n    },\n\n    testRequiredRadioGroupBox: function() {\n      this.__testRequired(new qx.ui.groupbox.RadioGroupBox());\n    },\n\n    testValidCheckGroupBox: function() {\n     this.__testValid(new qx.ui.groupbox.CheckGroupBox(), \"dont\");\n    },\n\n    testRequiredCheckGroupBox: function() {\n      this.__testRequired(new qx.ui.groupbox.CheckGroupBox());\n    },\n\n    testValidList: function() {\n     this.__testValid(new qx.ui.form.List());\n    },\n\n    testRequiredList: function() {\n      this.__testRequired(new qx.ui.form.List());\n    },\n\n    testValidTree: function() {\n     this.__testValid(new qx.ui.tree.Tree());\n    },\n\n    testRequiredTree: function() {\n      this.__testRequired(new qx.ui.tree.Tree());\n    },\n\n    testRequiredDateField: function() {\n      this.__testRequired(new qx.ui.form.DateField());\n    },\n\n    testValidDateField: function() {\n     this.__testValid(new qx.ui.form.DateField());\n    },\n\n    testRequiredDateChooser: function() {\n      this.__testRequired(new qx.ui.form.DateField());\n    },\n\n    testValidDateChooser: function() {\n     this.__testValid(new qx.ui.form.DateField());\n    },\n\n    testValidRadioGroup : function() {\n      var group = new qx.ui.form.RadioGroup();\n      var rb = new qx.ui.form.RadioButton();\n      group.add(rb);\n\n      // check if the interface is implemented\n      this.assert(qx.Class.hasInterface(group.constructor, qx.ui.form.IForm), \"Interface not implemented.\");\n\n      // test for the default (true)\n      this.assertTrue(group.getValid(), \"Default valid state is wrong.\");\n\n      group.setValid(false);\n\n      // check if the state is set\n      this.assertFalse(group.getValid(), \"Setting of the valid flag did not work.\");\n\n      // check for the event\n      var self = this;\n      this.assertEventFired(group, \"changeValid\", function () {\n        group.setValid(true);\n      }, function(e) {\n        self.assertTrue(e.getData(), \"Wrong data in the event.\");\n        self.assertFalse(e.getOldData(), \"Wrong old data in the event.\");\n      }, \"Change event not fired!\");\n\n      // check for the event\n      this.assertEventFired(group, \"changeInvalidMessage\", function () {\n        group.setInvalidMessage(\"affe\");\n      }, function(e) {\n        self.assertEquals(\"affe\", e.getData(), \"Wrong data in the event.\");\n        self.assertEquals(\"\", e.getOldData(), \"Wrong old data in the event.\");\n      }, \"Change event not fired!\");\n\n      // set the widget to invalid\n      group.setValid(false);\n\n      // check if the child is invalid\n      this.assertFalse(rb.getValid(), \"Child is valid!\");\n      // check the invalid message of the child\n      this.assertEquals(\"affe\", rb.getInvalidMessage(), \"Invalid messages not set on child.\");\n\n      group.dispose();\n      rb.destroy();\n    },\n\n    testRequiredRadioGroup : function() {\n      this.__testRequired(new qx.ui.form.RadioGroup());\n    },\n\n    testRequiredRadioButtonGroup: function() {\n      this.__testRequired(new qx.ui.form.RadioButtonGroup());\n    },\n\n    testValidRadioButtonGroup: function() {\n      var cont = new qx.ui.form.RadioButtonGroup();\n      var rb = new qx.ui.form.RadioButton();\n      cont.add(rb);\n\n      // check if the interface is implemented\n      this.assert(qx.Class.hasInterface(cont.constructor, qx.ui.form.IForm), \"Interface not implemented.\");\n\n      // test for the default (true)\n      this.assertTrue(cont.getValid(), \"Default valid state is wrong.\");\n\n      cont.setValid(false);\n\n      // check if the state is set\n      this.assertFalse(cont.getValid(), \"Setting of the valid flag did not work.\");\n\n      // check for the event\n      var self = this;\n      this.assertEventFired(cont, \"changeValid\", function () {\n        cont.setValid(true);\n      }, function(e) {\n        self.assertTrue(e.getData(), \"Wrong data in the event.\");\n        self.assertFalse(e.getOldData(), \"Wrong old data in the event.\");\n      }, \"Change event not fired!\");\n\n      // check for the event\n      this.assertEventFired(cont, \"changeInvalidMessage\", function () {\n        cont.setInvalidMessage(\"affe\");\n      }, function(e) {\n        self.assertEquals(\"affe\", e.getData(), \"Wrong data in the event.\");\n        self.assertEquals(\"\", e.getOldData(), \"Wrong old data in the event.\");\n      }, \"Change event not fired!\");\n\n      // set the widget to invalid\n      cont.setValid(false);\n\n      // check if the child is invalid\n      this.assertFalse(rb.getValid(), \"Child is valid!\");\n      // check the invalid message of the child\n      this.assertEquals(\"affe\", rb.getInvalidMessage(), \"Invalid messages not set on child.\");\n\n      cont.dispose();\n      rb.destroy();\n    },\n\n\n    testRedefineItem : function() {\n      var form = new qx.ui.form.Form();\n      var resetter = form._resetter;\n      resetter.redefineItem = this.spy(resetter.redefineItem);\n\n      var item = new qx.ui.form.TextField();\n      form.add(item, \"xyz\");\n      form.redefineResetterItem(item);\n\n      this.assertCalledOnce(resetter.redefineItem);\n\n      item.dispose();\n      form.dispose();\n    }\n\n  }\n});\n"
  ]
}