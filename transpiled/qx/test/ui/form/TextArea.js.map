{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/TextArea.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "include",
    "dev",
    "unit",
    "MRequirements",
    "members",
    "__textArea",
    "setUp",
    "textArea",
    "form",
    "TextArea",
    "getRoot",
    "add",
    "hasNoBuggyIe",
    "core",
    "Environment",
    "get",
    "setValue",
    "flush",
    "assertEquals",
    "getValue",
    "heightInitial",
    "getSizeHint",
    "height",
    "setMinimalLineHeight",
    "heightSmall",
    "msg",
    "assert",
    "require",
    "setAutoSize",
    "heightTall",
    "heightShrink",
    "originalHeight",
    "getBounds",
    "set",
    "autoSize",
    "maxHeight",
    "value",
    "overflow",
    "getContentElement",
    "getStyle",
    "setMaxHeight",
    "__getLongValue",
    "textAreaNoValue",
    "left",
    "heightValue",
    "heightNoValue",
    "destroy",
    "wrap",
    "minimalLineHeight",
    "setWrap",
    "heightFinal",
    "__supportsLiveWrap",
    "skip",
    "longValue",
    "wrapHeight",
    "noWrapHeight",
    "assertNotEquals",
    "initialWrapHeight",
    "val",
    "type",
    "Array",
    "i",
    "length",
    "join",
    "RequirementError",
    "tearDown",
    "queue",
    "Dispose"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.form.TextArea\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  include : qx.dev.unit.MRequirements,\n\n  members :\n  {\n    __textArea: null,\n\n    setUp : function()\n    {\n      var textArea = this.__textArea = new qx.ui.form.TextArea();\n      this.getRoot().add(textArea);\n    },\n\n    hasNoBuggyIe : function()\n    {\n      return (qx.core.Environment.get(\"engine.name\") != \"mshtml\" ||\n        qx.core.Environment.get(\"browser.documentmode\") > 10);\n    },\n\n    //\n    // \"Plain\" textarea\n    //\n\n    \"test: textarea set value\": function() {\n      var textArea = this.__textArea;\n      textArea.setValue(\"Affe\");\n      this.flush();\n\n      this.assertEquals(\"Affe\", textArea.getValue());\n    },\n\n    \"test: textarea set minimal line-height\": function() {\n      var textArea = this.__textArea;\n      this.flush();\n      var heightInitial = textArea.getSizeHint().height;\n\n      textArea.setMinimalLineHeight(1);\n      this.flush();\n      var heightSmall = textArea.getSizeHint().height;\n\n      var msg =  \"Widget height must decrease (was: \" + heightInitial +\n                 \" is: \" + heightSmall + \")\";\n      this.assert(heightSmall < heightInitial, msg);\n    },\n\n    //\n    // Auto-Size\n    //\n\n    \"test: textarea with autoSize grows when input would trigger scrollbar\": function() {\n      this.require([\"noBuggyIe\"]);\n      var textArea = this.__textArea;\n      textArea.setAutoSize(true);\n      this.flush();\n\n      textArea.setValue(\"Affe\\nMaus\\nElefant\");\n      this.flush();\n      var heightSmall = textArea.getSizeHint().height;\n\n      // Grow\n      textArea.setValue(\"Affe\\nMaus\\nElefant\\nGiraffe\\nTiger\");\n      this.flush();\n      var heightTall = textArea.getSizeHint().height;\n\n      var msg =  \"Widget height must increase (was: \" + heightSmall +\n                 \" is: \" + heightTall + \")\";\n      this.assert(heightTall > heightSmall, msg);\n    },\n\n    \"test: textarea with autoSize shrinks when removal would hide scrollbar\": function() {\n      this.require([\"noBuggyIe\"]);\n      var textArea = this.__textArea;\n      textArea.setAutoSize(true);\n      this.flush();\n\n      textArea.setValue(\"Affe\\nMaus\\nElefant\");\n      this.flush();\n\n      // Grow\n      textArea.setValue(\"Affe\\nMaus\\nElefant\\nGiraffe\\nTiger\");\n      this.flush();\n      var heightTall = textArea.getSizeHint().height;\n\n      // Shrink\n      textArea.setValue(\"Affe\\nMaus\\nElefant\");\n      this.flush();\n      var heightShrink = textArea.getSizeHint().height;\n\n      var msg =  \"Widget height must decrease (was: \" + heightTall +\n                 \" is: \" + heightShrink + \")\";\n      this.assert(heightShrink < heightTall, msg);\n    },\n\n    \"test: textarea with autoSize does not shrink below original height\": function() {\n      this.require([\"noBuggyIe\"]);\n      var textArea = this.__textArea;\n      textArea.setAutoSize(true);\n      this.flush();\n\n      var originalHeight = textArea.getBounds().height;\n\n      textArea.setValue(\"Affe\\nMaus\\nElefant\\nGiraffe\\nTiger\");\n      this.flush();\n\n      // Shrink\n      textArea.setValue(\"Affe\\nMaus\\nElefant\");\n      var heightShrink = textArea.getSizeHint().height;\n      this.flush();\n\n      var msg =  \"Widget height must not shrink below original height (is: \" + heightShrink +\n                 \" original: \" + originalHeight + \")\";\n      this.assert(!(heightShrink < originalHeight), msg);\n    },\n\n    \"test: textarea with autoSize shows scroll-bar when above maxHeight\": function() {\n      this.require([\"noBuggyIe\"]);\n      var textArea = this.__textArea;\n      textArea.set({\n        autoSize: true,\n        maxHeight: 50,\n        value: \"Affe\\nMaus\\nElefant\"\n      });\n      this.flush();\n\n      // Grow\n      textArea.setValue(\"Affe\\nMaus\\nElefant\\nGiraffe\\nTiger\");\n      this.flush();\n\n      var overflow = textArea.getContentElement().getStyle(\"overflowY\");\n      this.assertEquals(\"auto\", overflow);\n    },\n\n    \"test: textarea with autoSize shows scroll-bar when finally above maxHeight\": function() {\n      this.require([\"noBuggyIe\"]);\n      var textArea = this.__textArea;\n      textArea.set({\n        autoSize: true,\n        value: \"Affe\\nMaus\\nElefant\"\n      });\n      this.flush();\n\n      // Grow\n      textArea.setValue(\"Affe\\nMaus\\nElefant\\nGiraffe\\nTiger\");\n      this.flush();\n\n      // Limit height\n      textArea.setMaxHeight(50);\n      this.flush();\n\n      var overflow = textArea.getContentElement().getStyle(\"overflowY\");\n      this.assertEquals(\"auto\", overflow);\n    },\n\n    \"test: textarea with autoSize hides scroll-bar when finally below maxHeight\": function() {\n      this.require([\"noBuggyIe\"]);\n      var textArea = this.__textArea;\n      textArea.set({\n        autoSize: true,\n        maxHeight: 50\n      });\n      this.flush();\n\n      // Grow\n      textArea.setValue(\"Affe\\nMaus\\nElefant\\nGiraffe\\nTiger\");\n      this.flush();\n\n      // Shrink\n      textArea.setValue(\"Affe\");\n      this.flush();\n\n      var overflow = textArea.getContentElement().getStyle(\"overflowY\");\n      this.assertEquals(\"hidden\", overflow);\n    },\n\n    \"test: textarea with autoSize respects initial value\": function() {\n      this.require([\"noBuggyIe\"]);\n      var textArea = this.__textArea;\n      textArea.set({\n        autoSize: true,\n        value: this.__getLongValue()\n      });\n\n      var textAreaNoValue = new qx.ui.form.TextArea();\n      textAreaNoValue.set({\n        autoSize: true,\n        value: \"\"\n      });\n      this.getRoot().add(textAreaNoValue, {left: 100});\n\n      this.flush();\n      var heightValue = textArea.getBounds().height;\n      var heightNoValue = textAreaNoValue.getBounds().height;\n\n      var msg = \"Must be higher with long value than without value\";\n      this.assert(heightValue > heightNoValue, msg);\n\n      textAreaNoValue.destroy();\n    },\n\n    \"test: textarea with autoSize respects initial wrap\": function() {\n      this.require([\"noBuggyIe\"]);\n      var textArea = this.__textArea;\n      textArea.set({\n        autoSize: true,\n        wrap: false,\n        minimalLineHeight: 2,\n        value: this.__getLongValue()\n      });\n\n      // No wrap\n      this.flush();\n      var heightInitial = textArea.getBounds().height;\n\n      // Wrap\n      textArea.setWrap(true);\n      this.flush();\n\n      // No wrap\n      textArea.setWrap(false);\n      this.flush();\n      var heightFinal = textArea.getBounds().height;\n\n      this.assertEquals(heightInitial, heightFinal);\n    },\n\n    \"test: textarea with autoSize shrinks when long line is unwrapped\": function() {\n      this.require([\"noBuggyIe\"]);\n      if (!this.__supportsLiveWrap()) {\n        this.skip();\n      }\n\n      var textArea = this.__textArea;\n      textArea.setAutoSize(true);\n      this.flush();\n\n      // Grow\n      var longValue = this.__getLongValue();\n      textArea.setValue(longValue);\n      this.flush();\n      var wrapHeight = textArea.getSizeHint().height;\n\n      // Shrink\n      textArea.setWrap(false);\n      this.flush();\n      var noWrapHeight = textArea.getSizeHint().height;\n\n      var msg = \"Must shrink when long line is unwrapped\";\n      this.assertNotEquals(wrapHeight, noWrapHeight, msg);\n      this.assert(noWrapHeight < wrapHeight, msg);\n    },\n\n    \"test: textarea with autoSize grows when long line is wrapped\": function() {\n      this.require([\"noBuggyIe\"]);\n      if (!this.__supportsLiveWrap()) {\n        this.skip();\n      }\n\n      var textArea = this.__textArea;\n      textArea.set({\n        autoSize: true,\n        wrap: true\n      });\n      this.flush();\n\n      // Does not work unfortunately\n      //\n      // var longValue = new qx.type.Array(50).map(function() {\n      //   return \"AffeMausElefantGiraffeTiger\";\n      // }).join(\"\");\n\n      var longValue = this.__getLongValue();\n\n      // Wrap\n      textArea.setValue(longValue);\n      this.flush();\n      var initialWrapHeight = textArea.getSizeHint().height;\n\n      // Unwrap\n      textArea.setWrap(false);\n      this.flush();\n      var noWrapHeight = textArea.getSizeHint().height;\n\n      // Wrap\n      textArea.setWrap(true);\n      this.flush();\n      var wrapHeight = textArea.getSizeHint().height;\n\n      var msg = \"Must grow when long line is unwrapped\";\n      this.assertNotEquals(wrapHeight, noWrapHeight, msg);\n      this.assert(wrapHeight > noWrapHeight, msg);\n\n      msg = \"Must be same height when wrap is toggled\";\n      this.assertEquals(initialWrapHeight, wrapHeight, msg);\n    },\n\n    __getLongValue: function() {\n      var val = new qx.type.Array(50);\n      for(var i=0; i < val.length; i++) {\n        val[i] = \"AAAAA \";\n      }\n      return val.join(\"\");\n    },\n\n    __supportsLiveWrap: function() {\n      // Opera ignores changes to wrap settings\n      // once the textarea is in the DOM\n      return qx.core.Environment.get(\"engine.name\") != \"opera\";\n    },\n\n    skip: function(msg) {\n      throw new qx.dev.unit.RequirementError(null, msg);\n    },\n\n    tearDown : function()\n    {\n      this.base(arguments);\n      this.__textArea.destroy();\n      qx.ui.core.queue.Dispose.flush();\n    }\n  }\n});\n"
  ]
}