{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/BooleanFormat.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "__test",
    "widget",
    "initValue",
    "assertTrue",
    "hasInterface",
    "constructor",
    "form",
    "IBooleanForm",
    "assertEquals",
    "getValue",
    "resetValue",
    "setValue",
    "self",
    "assertEventFired",
    "e",
    "getData",
    "getOldData",
    "destroy",
    "testCheckBox",
    "CheckBox",
    "testToggleButton",
    "ToggleButton",
    "testMenuCheckBox",
    "menu",
    "testRadioButton",
    "RadioButton",
    "testMenuRadioButton",
    "testRadioGroupBox",
    "groupbox",
    "RadioGroupBox",
    "testCheckGroupBox",
    "CheckGroupBox",
    "BooleanFormat"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.form.BooleanFormat\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    __test: function(widget, initValue) {\n      // check if the interface is implemented\n      this.assertTrue(qx.Class.hasInterface(widget.constructor, qx.ui.form.IBooleanForm), \"Interface is not implemented.\");\n\n      // check for the init value\n      this.assertEquals(initValue, widget.getValue(), \"Wrong init value set.\");\n\n      // just check if the method is available\n      widget.resetValue();\n\n      // check the getter and setter\n      widget.setValue(true);\n      this.assertEquals(true, widget.getValue(), \"Set or get does not work.\");\n\n      var self = this;\n      this.assertEventFired(widget, \"changeValue\", function() {\n        widget.setValue(false);\n      }, function(e) {\n        self.assertEquals(false, e.getData(), \"Not the right data in the event.\");\n        self.assertEquals(true, e.getOldData(), \"Wrong old data in the event.\");\n      }, \"Event is wrong!\");\n\n      // test for null values\n      widget.setValue(null);\n\n      widget.destroy();\n    },\n\n    testCheckBox: function() {\n     this.__test(new qx.ui.form.CheckBox(), false);\n    },\n\n    testToggleButton: function() {\n     this.__test(new qx.ui.form.ToggleButton(), false);\n    },\n\n    testMenuCheckBox: function() {\n     this.__test(new qx.ui.menu.CheckBox(), false);\n    },\n\n    testRadioButton: function() {\n      this.__test(new qx.ui.form.RadioButton(), false);\n    },\n\n    testMenuRadioButton: function() {\n      this.__test(new qx.ui.menu.RadioButton(), false);\n    },\n\n    testRadioGroupBox: function() {\n      this.__test(new qx.ui.groupbox.RadioGroupBox(), true);\n    },\n\n    testCheckGroupBox: function() {\n      this.__test(new qx.ui.groupbox.CheckGroupBox(), true);\n    }\n\n  }\n});"
  ]
}