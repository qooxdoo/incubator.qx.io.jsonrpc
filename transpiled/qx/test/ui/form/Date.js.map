{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/form/Date.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "__test",
    "widget",
    "assertTrue",
    "hasInterface",
    "constructor",
    "form",
    "IDateForm",
    "assertNull",
    "getValue",
    "resetValue",
    "date",
    "Date",
    "setValue",
    "assertEquals",
    "toString",
    "date2",
    "assertEventFired",
    "e",
    "destroy",
    "testDateField",
    "df",
    "DateField",
    "dispose",
    "testDateChooser",
    "dc",
    "control",
    "DateChooser",
    "testDateFieldIsEmpty",
    "field",
    "isEmpty",
    "testDateFieldPopupState",
    "getRoot",
    "add",
    "flush",
    "open",
    "hasState",
    "close",
    "assertFalse",
    "remove"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.form.Date\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    __test: function(widget) {\n      // check if the interface is implemented\n      this.assertTrue(qx.Class.hasInterface(widget.constructor, qx.ui.form.IDateForm), \"Interface is not implemented.\");\n\n      // check for the init value\n      this.assertNull(widget.getValue(), \"Wrong init value set.\");\n\n      // just check if the method is available\n      widget.resetValue();\n\n      // check the getter and setter\n      var date = new Date(1981, 1, 10);\n      widget.setValue(date);\n      this.assertEquals(date.toString(), widget.getValue().toString(), \"Set or get does not work.\");\n\n      var date2 = new Date(2009, 4, 1);\n      this.assertEventFired(widget, \"changeValue\", function() {\n        widget.setValue(date2);\n      }, function(e) {\n        // do nothing\n      }, \"Event is wrong!\");\n\n      // test for null values\n      widget.setValue(null);\n\n      widget.destroy();\n    },\n\n    testDateField: function() {\n      var df = new qx.ui.form.DateField();\n      this.__test(df);\n      df.dispose();\n    },\n\n    testDateChooser: function() {\n      var dc = new qx.ui.control.DateChooser();\n      this.__test(dc);\n      dc.dispose();\n    },\n\n    testDateFieldIsEmpty: function() {\n      var field = new qx.ui.form.DateField();\n\n      this.assertTrue(field.isEmpty(), \"DateField should be empty on initialization.\");\n      field.dispose();\n    },\n\n    testDateFieldPopupState : function()\n    {\n      var field = new qx.ui.form.DateField();\n      this.getRoot().add(field);\n      this.flush();\n\n      field.open();\n      this.flush();\n\n      this.assertTrue(field.hasState(\"popupOpen\"));\n\n      field.close();\n      this.flush();\n\n      this.assertFalse(field.hasState(\"popupOpen\"));\n\n      this.getRoot().remove(field);\n      this.flush();\n\n      field.dispose();\n      field = null;\n    }\n\n  }\n});"
  ]
}