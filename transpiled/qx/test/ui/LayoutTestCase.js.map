{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/LayoutTestCase.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "type",
    "statics",
    "$$clazz",
    "$$args",
    "members",
    "setUp",
    "getRoot",
    "tearDown",
    "removeAll",
    "forEach",
    "widget",
    "dispose",
    "cls",
    "test",
    "ui",
    "LayoutTestCase",
    "_root",
    "destroy",
    "core",
    "Init",
    "getApplication",
    "__oldGetApp",
    "theme",
    "manager",
    "Meta",
    "getInstance",
    "initialize",
    "root",
    "Application",
    "document",
    "__oldApplication",
    "close",
    "terminate",
    "getRunnerApplication",
    "flush",
    "queue",
    "Manager",
    "assertDestroy",
    "fcn",
    "context",
    "msg",
    "call",
    "regCopy",
    "lang",
    "Object",
    "clone",
    "ObjectRegistry",
    "getRegistry",
    "eventMgr",
    "event",
    "Registration",
    "getManager",
    "window",
    "listeners",
    "getAllListeners",
    "listenersCopy",
    "hash",
    "key",
    "Array",
    "reg",
    "obj",
    "$$pooled",
    "$$blackListCleaner",
    "assertNotUndefined",
    "classname",
    "i",
    "length",
    "indexOf",
    "fail",
    "fromHashCode",
    "assertIdentical",
    "getChildren",
    "join",
    "assertWidgetDispose",
    "clazz",
    "args",
    "argStr",
    "push",
    "str",
    "eval",
    "add",
    "_getFixedWidget",
    "Widget",
    "set",
    "width",
    "height",
    "maxWidth",
    "minWidth",
    "maxHeight",
    "minHeight",
    "assertSize",
    "el",
    "getContentElement",
    "getDomElement",
    "elHeight",
    "parseInt",
    "style",
    "elWidth",
    "assertEquals",
    "assertPadding",
    "top",
    "right",
    "bottom",
    "left",
    "assertNotNull",
    "content",
    "paddingTop",
    "bom",
    "element",
    "Style",
    "get",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "assertStyle",
    "value",
    "computedStyle",
    "match",
    "assertCssColor",
    "tapOn",
    "fireEvent",
    "Tap"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * @use(qx.theme.Classic)\n */\n\nqx.Class.define(\"qx.test.ui.LayoutTestCase\",\n{\n  extend : qx.dev.unit.TestCase,\n  type : \"abstract\",\n\n  statics :\n  {\n    $$clazz : null,\n    $$args : null\n  },\n\n  members :\n  {\n    setUp : function() {\n      this.getRoot();\n    },\n\n\n    tearDown : function() {\n      this.getRoot().removeAll().forEach(function(widget) {\n        widget.dispose();\n      });\n\n      var cls = qx.test.ui.LayoutTestCase;\n\n      if (cls._root) {\n        cls._root.destroy();\n        cls._root = null;\n        qx.core.Init.getApplication = cls.__oldGetApp;\n      }\n    },\n\n\n    getRoot : function()\n    {\n      var cls = qx.test.ui.LayoutTestCase;\n\n      if (cls._root) {\n        return cls._root;\n      }\n\n      qx.theme.manager.Meta.getInstance().initialize();\n      cls._root = new qx.ui.root.Application(document);\n\n      cls.__oldApplication = qx.core.Init.getApplication();\n      cls.__oldGetApp = qx.core.Init.getApplication;\n\n      qx.core.Init.getApplication = function() {\n        return {\n          getRoot : function() {\n            return cls._root;\n          },\n          close : function() {},\n          terminate : function() {}\n        };\n      };\n\n      return cls._root;\n    },\n\n\n    getRunnerApplication : function() {\n      return qx.test.ui.LayoutTestCase.__oldApplication || qx.core.Init.getApplication();\n    },\n\n\n    flush : function() {\n      qx.ui.core.queue.Manager.flush();\n    },\n\n\n    assertDestroy : function(fcn, context, msg)\n    {\n      // call function\n      fcn.call(context);\n      this.flush();\n      this.flush();\n\n\n      // copy object registry\n      var regCopy = qx.lang.Object.clone(qx.core.ObjectRegistry.getRegistry());\n\n      // copy event listener structure\n      var eventMgr = qx.event.Registration.getManager(window);\n      var listeners = eventMgr.getAllListeners();\n      var listenersCopy = {};\n      for (var hash in listeners)\n      {\n        listenersCopy[hash] = {};\n        for (var key in listeners[hash]) {\n          listenersCopy[hash][key] = qx.lang.Array.clone(listeners[hash][key]);\n        }\n      }\n\n      // call function\n      fcn.call(context);\n      this.flush();\n      this.flush();\n\n      // measure increase in object counts\n\n      // check object registry\n      var reg = qx.core.ObjectRegistry.getRegistry();\n      for (key in reg)\n      {\n        var obj = reg[key];\n\n        // skip pooled objects + DeferredCall which cleans the event listener blacklist\n        if (obj.$$pooled || obj.$$blackListCleaner) {\n          continue;\n        }\n        this.assertNotUndefined(\n          regCopy[key],\n          msg + \": The object '\" + obj.classname + \"' has not been disposed!\"\n        );\n      }\n\n      listeners = eventMgr.getAllListeners();\n\n      for (var hash in listeners)\n      {\n        if (!listenersCopy[hash]) {\n          listenersCopy[hash] = {};\n        }\n\n        for (key in listeners[hash])\n        {\n          if (!listenersCopy[hash][key]) {\n            listenersCopy[hash][key] = [];\n          }\n\n          for (var i=0; i<listeners[hash][key].length; i++)\n          {\n            if (listenersCopy[hash][key].indexOf(listeners[hash][key][i]) == -1) {\n              this.fail(\n                  msg + \": The event listener '\"+ key + \":\" +\n                  listeners[hash][key][i] + \"'for the object '\" +\n                  hash + \":\" + qx.core.ObjectRegistry.fromHashCode(hash) +\n                  \"' has not been removed.\"\n                );\n            }\n          }\n        }\n      }\n\n      // check root children length\n      this.assertIdentical(\n        0, this.getRoot().getChildren().length,\n        msg + \": The root Children array must be empty but found: \" + this.getRoot().getChildren().join(\", \")\n      );\n    },\n\n\n    /**\n     * @lint ignoreDeprecated(eval)\n     */\n    assertWidgetDispose : function(clazz, args, msg)\n    {\n      this.assertDestroy(function()\n      {\n        var argStr = [];\n        for (var i=0; i<args.length; i++) {\n          argStr.push(\"qx.test.ui.LayoutTestCase.$$args\" + \"[\" + i + \"]\");\n        }\n\n        qx.test.ui.LayoutTestCase.$$clazz = clazz;\n        qx.test.ui.LayoutTestCase.$$args = args;\n        var str = \"new qx.test.ui.LayoutTestCase.$$clazz\" + \"(\" + argStr.join(\", \") + \");\";\n        var widget = eval(str);\n\n        this.getRoot().add(widget);\n        this.flush();\n\n        widget.destroy();\n      }, this, msg);\n    },\n\n\n    _getFixedWidget : function()\n    {\n      var widget = new qx.ui.core.Widget();\n      widget.set({\n        width: 200,\n        height: 100,\n        maxWidth : \"pref\",\n        minWidth : \"pref\",\n        maxHeight : \"pref\",\n        minHeight : \"pref\"\n      });\n      return widget;\n    },\n\n\n    assertSize : function(widget, width, height, msg)\n    {\n      this.flush();\n      var el = widget.getContentElement().getDomElement();\n      var elHeight = parseInt(el.style.height, 10);\n      var elWidth = parseInt(el.style.width, 10);\n      this.assertEquals(width, elWidth, msg);\n      this.assertEquals(height, elHeight, msg);\n    },\n\n\n    assertPadding : function(widget, top, right, bottom, left, msg)\n    {\n      this.flush();\n\n      this.assertNotNull(widget.getContentElement());\n      this.assertNotNull(widget.getContentElement().getDomElement());\n\n      var content = widget.getContentElement().getDomElement();\n\n      var paddingTop = parseInt(qx.bom.element.Style.get(content, \"paddingTop\"), 10) || 0;\n      var paddingRight = parseInt(qx.bom.element.Style.get(content, \"paddingRight\"), 10) || 0;\n      var paddingBottom = parseInt(qx.bom.element.Style.get(content, \"paddingBottom\"), 10) || 0;\n      var paddingLeft = parseInt(qx.bom.element.Style.get(content, \"paddingLeft\"), 10) || 0;\n\n      this.assertEquals(top, paddingTop, msg);\n      this.assertEquals(right, paddingRight, msg);\n      this.assertEquals(bottom, paddingBottom, msg);\n      this.assertEquals(left, paddingLeft, msg);\n    },\n\n\n    assertStyle : function(widget, style, value, msg)\n    {\n      this.flush();\n      var element = widget.getContentElement().getDomElement();\n      var computedStyle = qx.bom.element.Style.get(element, style);\n\n      if (value && style.match(/color/i)) {\n        this.assertCssColor(value, computedStyle, msg);\n      } else {\n        this.assertEquals(value, computedStyle, msg);\n      }\n    },\n\n\n    tapOn: function(widget) {\n      widget.fireEvent(\"tap\", qx.event.type.Tap, [{}, widget, widget, false, true]);\n    }\n  }\n});\n"
  ]
}