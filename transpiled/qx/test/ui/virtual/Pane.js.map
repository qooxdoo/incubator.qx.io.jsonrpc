{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/Pane.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "setUp",
    "defaultWidth",
    "defaultHeight",
    "rowCount",
    "colCount",
    "pane",
    "virtual",
    "core",
    "Pane",
    "getRoot",
    "add",
    "tearDown",
    "destroy",
    "flush",
    "assertUpdateArgs",
    "rowIndex",
    "colIndex",
    "rowSizes",
    "colSizes",
    "args",
    "msg",
    "assertEquals",
    "assertArrayEquals",
    "assertScrollArgs",
    "assertScroll",
    "scrollTop",
    "scrollLeft",
    "layerContainer",
    "_getChildren",
    "getBounds",
    "top",
    "left",
    "testConstructor",
    "assertNotUndefined",
    "testScrollProperties",
    "setScrollY",
    "getScrollY",
    "setScrollX",
    "getScrollX",
    "testGetScrollSize",
    "size",
    "getScrollSize",
    "width",
    "height",
    "rowConfig",
    "getRowConfig",
    "setDefaultItemSize",
    "setItemCount",
    "setItemSize",
    "testLayerAdd",
    "layer",
    "LayerMock",
    "addLayer",
    "getLayers",
    "testUpdateEvent",
    "called",
    "addListener",
    "set",
    "setWidth",
    "testFullUpdate",
    "calls",
    "fullUpdate",
    "length",
    "testNoRows",
    "getColumnConfig",
    "testNoColumns",
    "setHeight",
    "testPrefetchYAtTop",
    "layerHeight",
    "prefetchY",
    "testPrefetchYLimitedAtTop",
    "testPrefetchYAtBottom",
    "getScrollMaxY",
    "testPrefetchYLimitedAtBottom",
    "testPrefetchYInMiddle",
    "testPrefetchXAtLeft",
    "layerWidth",
    "prefetchX",
    "testPrefetchXLimitedAtLeft",
    "testPrefetchXAtBottom",
    "getScrollMaxX",
    "testPrefetchXLimitedAtBottom",
    "testPrefetchXInMiddle",
    "testUpdateLayerWindow",
    "testSrollRowIntoView",
    "LayerSimple",
    "scrollRowIntoView",
    "children",
    "getContentElement",
    "getDomElement",
    "childNodes",
    "innerHTML",
    "testSrollColumnIntoView",
    "scrollColumnIntoView",
    "_testSrollRowIntoViewEdgeCase",
    "_testSrollColumnIntoViewEdgeCase",
    "testGetCellAtPosition",
    "assertJsonEquals",
    "row",
    "column",
    "getCellAtPosition",
    "testGetItemAtPositionEmptySpace",
    "testMouseCellEvents",
    "listener",
    "e",
    "push",
    "PointerEventMock",
    "eventPointerToCellEvents",
    "pointerEvent",
    "cellEvent",
    "dispatchEvent",
    "documentLeft",
    "documentTop",
    "getRow",
    "getColumn",
    "getType",
    "testDestroy",
    "assertDestroy",
    "destruct"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.Pane\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    setUp : function()\n    {\n      this.base(arguments);\n\n      this.defaultWidth = 30;\n      this.defaultHeight = 10;\n      this.rowCount = 1000;\n      this.colCount = 200;\n\n      var pane = new qx.ui.virtual.core.Pane(\n        this.rowCount, this.colCount,\n        this.defaultHeight, this.defaultWidth\n      );\n\n      this.getRoot().add(pane);\n      this.pane = pane;\n    },\n\n\n    tearDown : function()\n    {\n      this.pane.destroy();\n      this.base(arguments);\n      this.flush();\n    },\n\n\n    assertUpdateArgs : function(rowIndex, colIndex, rowSizes, colSizes, args, msg)\n    {\n      this.assertEquals(rowIndex, args[0], msg);\n      this.assertEquals(colIndex, args[1], msg);\n      this.assertArrayEquals(rowSizes, args[2], msg);\n      this.assertArrayEquals(colSizes, args[3], msg);\n    },\n\n\n    assertScrollArgs : function(rowIndex, colIndex, rowSizes, colSizes, args, msg)\n    {\n      this.assertEquals(rowIndex, args[0], msg);\n      this.assertEquals(colIndex, args[1], msg);\n      this.assertArrayEquals(rowSizes, args[2], msg);\n      this.assertArrayEquals(colSizes, args[3], msg);\n    },\n\n\n    assertScroll : function(scrollTop, scrollLeft, pane, msg)\n    {\n      var layerContainer = this.pane._getChildren()[0];\n      this.assertEquals(-scrollTop, layerContainer.getBounds().top, msg);\n      this.assertEquals(-scrollLeft, layerContainer.getBounds().left, msg);\n    },\n\n\n    testConstructor : function() {\n      this.assertNotUndefined(this.pane);\n    },\n\n\n    testScrollProperties : function()\n    {\n      this.flush();\n      this.pane.setScrollY(30);\n      this.assertEquals(30, this.pane.getScrollY());\n\n      this.pane.setScrollX(40);\n      this.assertEquals(40, this.pane.getScrollX());\n    },\n\n\n    testGetScrollSize : function()\n    {\n      var size = this.pane.getScrollSize();\n      this.assertEquals(this.defaultWidth * this.colCount, size.width);\n      this.assertEquals(this.defaultHeight * this.rowCount, size.height);\n\n      var rowConfig = this.pane.getRowConfig();\n      rowConfig.setDefaultItemSize(50);\n      rowConfig.setItemCount(123);\n      rowConfig.setItemSize(10, 30);\n      this.assertEquals(50 * 123 - 20, this.pane.getScrollSize().height);\n    },\n\n\n    testLayerAdd : function()\n    {\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.assertEquals(layer, this.pane.getLayers()[0]);\n    },\n\n\n    testUpdateEvent : function()\n    {\n      var called = 0;\n\n      var pane = new qx.ui.virtual.core.Pane(100, 20, 10, 50);\n      pane.addListener(\"update\", function() { called ++;}, this);\n      pane.set({\n        width: 300,\n        height: 200\n      });\n\n      // no update after creation\n      this.getRoot().add(pane);\n      this.assertEquals(0, called, \"Expect no update after creation\");\n\n      // one update after appear\n      this.flush();\n      this.assertEquals(1, called, \"Expect one update after appear\");\n\n      // one update after pane resize\n      called = 0;\n      pane.setWidth(400);\n      this.flush();\n      this.assertEquals(1, called, \"Expect one update after pane resize\");\n\n      // one update after data resize\n      called = 0;\n      pane.getRowConfig().setItemCount(200);\n      this.flush();\n      this.assertEquals(1, called, \"Expect one update after data resize\");\n\n      // one update after data and pane resize\n      called = 0;\n      pane.getRowConfig().setItemCount(300);\n      pane.setWidth(500);\n      this.flush();\n      this.assertEquals(2, called, \"Expect two updates after data and pane resize\");\n\n      pane.destroy();\n    },\n\n\n    testFullUpdate : function()\n    {\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({\n        width: 100,\n        height: 50\n      });\n      this.flush();\n\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n\n      this.assertEquals(2, layer.calls.length);\n      this.assertEquals(\"fullUpdate\", layer.calls[0][0]);\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 0, this.pane);\n\n      this.pane.setScrollY(4);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [10, 10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(4, 0, this.pane);\n\n      this.pane.setScrollY(10);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(1, 0, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 0, this.pane);\n\n      this.pane.setScrollY(16);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(1, 0, [10, 10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(6, 0, this.pane);\n\n\n      this.pane.setScrollY(0);\n      this.flush();\n\n      this.pane.setScrollX(4);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 4, this.pane);\n\n      this.pane.setScrollX(30);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 1, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 0, this.pane);\n\n      this.pane.setScrollX(36);\n      layer.calls = [];\n      this.pane.fullUpdate();\n      this.flush();\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 1, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 6, this.pane);\n    },\n\n\n    testNoRows : function()\n    {\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n\n      layer.calls = [];\n      this.pane.setWidth(100);\n      this.pane.getColumnConfig().setDefaultItemSize(100);\n      this.pane.getColumnConfig().setItemCount(1);\n      this.pane.getRowConfig().setItemCount(0);\n      this.flush();\n\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [], [100], args);\n      this.assertScroll(0, 0, this.pane);\n\n      // resize\n      layer.calls = [];\n      this.pane.setWidth(30);\n      this.pane.getColumnConfig().setDefaultItemSize(30);\n      this.flush();\n\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [], [30], args);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n\n    testNoColumns : function()\n    {\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n\n      layer.calls = [];\n      this.pane.setHeight(100);\n      this.pane.getRowConfig().setDefaultItemSize(100);\n      this.pane.getRowConfig().setItemCount(1);\n      this.pane.getColumnConfig().setItemCount(0);\n      this.flush();\n\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [100], [], args);\n      this.assertScroll(0, 0, this.pane);\n\n      // resize\n      layer.calls = [];\n      this.pane.setHeight(30);\n      this.pane.getRowConfig().setDefaultItemSize(30);\n      this.flush();\n\n      var args = layer.calls[0][1];\n      this.assertUpdateArgs(0, 0, [30], [], args);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n\n    testPrefetchYAtTop : function()\n    {\n      var layerHeight = 400;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({width: 300, height: layerHeight});\n      this.flush();\n\n      // scroll top is 0 and prefetch above\n      this.pane.prefetchY(100, 200, 0, 0);\n      this.flush();\n      this.assertEquals(layerHeight, layer.getBounds().height);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n\n    testPrefetchYLimitedAtTop : function()\n    {\n      var layerHeight = 400;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({width: 300, height: layerHeight});\n      this.flush();\n\n      // scroll top is 100 and prefetch above 200\n      this.pane.setScrollY(100);\n      this.pane.prefetchY(100, 200, 0, 0);\n      this.flush();\n      this.assertEquals(layerHeight+100, layer.getBounds().height);\n      this.assertScroll(100, 0, this.pane);\n    },\n\n\n    testPrefetchYAtBottom : function()\n    {\n      var layerHeight = 400;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({width: 300, height: layerHeight});\n      this.flush();\n\n      // scroll top to bottom and prefetch below 200\n      this.pane.setScrollY(this.pane.getScrollMaxY());\n      this.pane.prefetchY(0, 0, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight, layer.getBounds().height);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n\n    testPrefetchYLimitedAtBottom : function()\n    {\n      var layerHeight = 400;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({width: 300, height: layerHeight});\n      this.flush();\n\n      // scroll top to bottom and prefetch below 200\n      this.pane.setScrollY(this.pane.getScrollMaxY()-100);\n      this.pane.prefetchY(0, 0, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight+100, layer.getBounds().height);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n\n    testPrefetchYInMiddle : function()\n    {\n      var layerHeight = 400;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({width: 300, height: layerHeight});\n      this.flush();\n\n      // scroll top is 500 and prefetch above 200\n      this.pane.setScrollY(500);\n      this.pane.prefetchY(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight+400, layer.getBounds().height);\n      this.assertScroll(200, 0, this.pane);\n\n      // already prefetched 200 pixel above. Scrolling up 20px and prefetching\n      // again should not change the layers\n      this.pane.setScrollY(480);\n      this.pane.prefetchY(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight+400, layer.getBounds().height);\n      this.assertScroll(180, 0, this.pane);\n\n      // scroll more than minAbove up. Prefetching should update the layers\n      this.pane.setScrollY(390);\n      this.pane.prefetchY(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight+400, layer.getBounds().height);\n      this.assertScroll(200, 0, this.pane);\n\n      // already prefetched 200 pixel below. Scrolling down 20px and prefetching\n      // again should not change the layers\n      this.pane.setScrollY(410);\n      this.pane.prefetchY(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight+400, layer.getBounds().height);\n      this.assertScroll(220, 0, this.pane);\n\n      // scroll more than minBelow down. Prefetching should update the layers\n      this.pane.setScrollY(520);\n      this.pane.prefetchY(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerHeight+400, layer.getBounds().height);\n      this.assertScroll(200, 0, this.pane);\n    },\n\n\n    testPrefetchXAtLeft : function()\n    {\n      var layerWidth = 300;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({width: layerWidth, height: 400});\n      this.flush();\n\n      // scroll left is 0 and prefetch left\n      this.pane.prefetchX(100, 200, 0, 0);\n      this.flush();\n      this.assertEquals(layerWidth, layer.getBounds().width);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n\n    testPrefetchXLimitedAtLeft : function()\n    {\n      var layerWidth = 300;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.getColumnConfig().setDefaultItemSize(10);\n      this.pane.set({width: layerWidth, height: 400});\n      this.flush();\n\n      // scroll top is 100 and prefetch above 200\n      this.pane.setScrollX(100);\n      this.pane.prefetchX(100, 200, 0, 0);\n      this.flush();\n      this.assertEquals(layerWidth+100, layer.getBounds().width);\n      this.assertScroll(0, 100, this.pane);\n    },\n\n\n    testPrefetchXAtBottom : function()\n    {\n      var layerWidth = 300;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.getColumnConfig().setDefaultItemSize(10);\n      this.pane.set({width: layerWidth, height: 400});\n      this.flush();\n\n      // scroll left to right and prefetch right 200\n      this.pane.setScrollX(this.pane.getScrollMaxX());\n      this.pane.prefetchX(0, 0, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth, layer.getBounds().width);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n\n    testPrefetchXLimitedAtBottom : function()\n    {\n      var layerWidth = 300;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.getColumnConfig().setDefaultItemSize(10);\n      this.pane.set({width: layerWidth, height: 400});\n      this.flush();\n\n      // scroll left to right-100 and prefetch right 200\n      this.pane.setScrollX(this.pane.getScrollMaxX()-100);\n      this.pane.prefetchX(0, 0, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth+100, layer.getBounds().width);\n      this.assertScroll(0, 0, this.pane);\n    },\n\n\n    testPrefetchXInMiddle : function()\n    {\n      var layerWidth = 300;\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({width: layerWidth, height: 400});\n      this.pane.getColumnConfig().setDefaultItemSize(10);\n      this.flush();\n\n      // scroll left is 500 and prefetch left 200\n      this.pane.setScrollX(500);\n      this.pane.prefetchX(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth+400, layer.getBounds().width);\n      this.assertScroll(0, 200, this.pane);\n\n      // already prefetched 200 pixel at the left. Scrolling left 20px and prefetching\n      // again should not change the layers\n      this.pane.setScrollX(480);\n      this.pane.prefetchX(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth+400, layer.getBounds().width);\n      this.assertScroll(0, 180, this.pane);\n\n      // scroll more than minLeft left. Prefetching should update the layers\n      this.pane.setScrollX(390);\n      this.pane.prefetchX(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth+400, layer.getBounds().width);\n      this.assertScroll(0, 200, this.pane);\n\n      // already prefetched 200 pixel right. Scrolling right 20px and prefetching\n      // again should not change the layers\n      this.pane.setScrollX(410);\n      this.pane.prefetchX(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth+400, layer.getBounds().width);\n      this.assertScroll(0, 220, this.pane);\n\n      // scroll more than minRight right. Prefetching should update the layers\n      this.pane.setScrollX(520);\n      this.pane.prefetchX(100, 200, 100, 200);\n      this.flush();\n      this.assertEquals(layerWidth+400, layer.getBounds().width);\n      this.assertScroll(0, 200, this.pane);\n    },\n\n\n    testUpdateLayerWindow : function()\n    {\n      var layer = new qx.test.ui.virtual.layer.LayerMock();\n      this.pane.addLayer(layer);\n      this.pane.set({\n        width: 100,\n        height: 50\n      });\n      this.flush();\n\n      layer.calls = [];\n      this.pane.setScrollY(4);\n      this.flush();\n      this.assertEquals(\"updateLayerWindow\", layer.calls[0][0]);\n      var args = layer.calls[0][1];\n      this.assertScrollArgs(0, 0, [10, 10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(4, 0, this.pane);\n\n      layer.calls = [];\n      this.pane.setScrollY(5);\n      this.flush();\n      this.assertEquals(0, layer.calls.length);\n      this.assertScroll(5, 0, this.pane);\n\n      layer.calls = [];\n      this.pane.setScrollY(10);\n      this.flush();\n      this.assertEquals(0, layer.calls.length);\n      this.assertScroll(10, 0, this.pane);\n\n      layer.calls = [];\n      this.pane.setScrollY(16);\n      this.flush();\n      this.assertEquals(\"updateLayerWindow\", layer.calls[0][0]);\n      var args = layer.calls[0][1];\n      this.assertScrollArgs(1, 0, [10, 10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(6, 0, this.pane);\n\n\n      this.pane.setScrollY(0);\n      this.flush();\n\n      layer.calls = [];\n      this.pane.setScrollX(4);\n      this.flush();\n      this.assertEquals(0, layer.calls.length);\n      this.assertScroll(0, 4, this.pane);\n\n      layer.calls = [];\n      this.pane.setScrollX(30);\n      this.flush();\n      this.assertEquals(\"updateLayerWindow\", layer.calls[0][0]);\n      var args = layer.calls[0][1];\n      this.assertScrollArgs(0, 1, [10, 10, 10, 10, 10], [30, 30, 30, 30], args);\n      this.assertScroll(0, 0, this.pane);\n\n      layer.calls = [];\n      this.pane.setScrollX(36);\n      this.flush();\n      this.assertEquals(0, layer.calls.length);\n      this.assertScroll(0, 6, this.pane);\n    },\n\n\n    testSrollRowIntoView : function()\n    {\n      this.pane.set({\n        width : 400,\n        height : 305\n      });\n      this.pane.getColumnConfig().setItemCount(1);\n\n      var layer = new qx.test.ui.virtual.layer.LayerSimple();\n      this.pane.addLayer(layer);\n      this.flush();\n\n      this.pane.scrollRowIntoView(100);\n      this.flush();\n\n      var children = layer.getContentElement().getDomElement().childNodes;\n\n      this.assertScroll(5, 0, this.pane);\n      this.assertEquals(\"70 / 0\", children[0].innerHTML);\n      this.assertEquals(\"100 / 0\", children[children.length-1].innerHTML);\n    },\n\n\n    testSrollColumnIntoView : function()\n    {\n      this.pane.set({\n        width : 405,\n        height : 305\n      });\n      this.pane.getRowConfig().setItemCount(1);\n\n      var layer = new qx.test.ui.virtual.layer.LayerSimple();\n      this.pane.addLayer(layer);\n      this.flush();\n\n      this.pane.scrollColumnIntoView(100);\n      this.flush();\n\n      var children = layer.getContentElement().getDomElement().childNodes;\n\n      this.assertScroll(0, 15, this.pane);\n      this.assertEquals(\"0 / 87\", children[0].innerHTML);\n      this.assertEquals(\"0 / 100\", children[children.length-1].innerHTML);\n    },\n\n\n    _testSrollRowIntoViewEdgeCase : function()\n    {\n      this.pane.set({\n        width : 400,\n        height : 305\n      });\n      this.pane.getColumnConfig().setItemCount(1);\n\n      var layer = new qx.test.ui.virtual.layer.LayerSimple();\n      this.pane.addLayer(layer);\n      this.flush();\n\n      this.pane.scrollRowIntoView(2000);\n      this.flush();\n\n      var children = layer.getContentElement().getDomElement().childNodes;\n\n      this.assertScroll(5, 0, this.pane);\n      this.assertEquals(\"0 / 969\", children[0].innerHTML);\n      this.assertEquals(\"0 / 999\", children[children.length-1].innerHTML);\n    },\n\n\n    _testSrollColumnIntoViewEdgeCase : function()\n    {\n      this.pane.set({\n        width : 405,\n        height : 305\n      });\n      this.pane.getRowConfig().setItemCount(1);\n\n      var layer = new qx.test.ui.virtual.layer.LayerSimple();\n      this.pane.addLayer(layer);\n      this.flush();\n\n      this.pane.scrollColumnIntoView(400);\n      this.flush();\n\n      var children = layer.getContentElement().getDomElement().childNodes;\n\n      this.assertScroll(0, 15, this.pane);\n      this.assertEquals(\"186 / 0\", children[0].innerHTML);\n      this.assertEquals(\"199 / 0\", children[children.length-1].innerHTML);\n    },\n\n\n    testGetCellAtPosition : function()\n    {\n      this.pane.getRowConfig().setItemCount(3);\n      this.pane.getColumnConfig().setItemCount(3);\n\n      var layer = new qx.test.ui.virtual.layer.LayerSimple();\n      this.pane.addLayer(layer);\n      this.flush();\n\n      this.assertJsonEquals({row : 0, column : 0}, this.pane.getCellAtPosition(0, 0));\n      this.assertEquals(null, this.pane.getCellAtPosition(400, 0));\n      this.assertEquals(null, this.pane.getCellAtPosition(0, 300));\n      this.assertEquals(null, this.pane.getCellAtPosition(400, 300));\n      this.assertJsonEquals({row : 2, column : 2}, this.pane.getCellAtPosition(89, 29));\n    },\n\n\n    testGetItemAtPositionEmptySpace : function()\n    {\n      var pane = this.pane;\n\n      pane.setHeight(100);\n      pane.setWidth(50);\n      this.pane.getRowConfig().setItemCount(1);\n      this.pane.getRowConfig().setDefaultItemSize(50);\n      this.flush();\n\n      this.assertJsonEquals({row : 0, column : 0}, this.pane.getCellAtPosition(1, 49));\n      this.assertEquals(null, this.pane.getCellAtPosition(1, 50));\n      this.assertEquals(null, this.pane.getCellAtPosition(1, 70));\n    },\n\n\n    testMouseCellEvents : function()\n    {\n      var rowCount = 2;\n      var colCount = 2;\n      var defaultHeight = 10;\n      var defaultWidth = 50;\n\n      var pane = new qx.ui.virtual.core.Pane(\n        rowCount, colCount,\n        defaultHeight, defaultWidth\n      ).set({\n        width: 150,\n        height: 30\n      });\n\n      this.getRoot().add(pane, {left: 100, top: 100});\n      this.flush();\n\n      var calls = [];\n      var listener = function(e) {\n        calls.push(e);\n      };\n      pane.addListener(\"cellTap\", listener);\n      pane.addListener(\"cellDbltap\", listener);\n      pane.addListener(\"cellContextmenu\", listener);\n\n      var PointerEventMock = qx.test.ui.virtual.PointerEventMock;\n      var eventPointerToCellEvents = {\n        \"tap\" : \"cellTap\",\n        \"dbltap\" : \"cellDbltap\",\n        \"contextmenu\" : \"cellContextmenu\"\n      };\n\n      for (var pointerEvent in eventPointerToCellEvents)\n      {\n        var cellEvent = eventPointerToCellEvents[pointerEvent];\n\n        calls = [];\n        pane.dispatchEvent(new PointerEventMock(\"pointerdown\", {documentLeft: 99, documentTop: 99}));\n        pane.dispatchEvent(new PointerEventMock(pointerEvent, {documentLeft: 99, documentTop: 99}));\n        this.assertEquals(0, calls.length);\n\n        calls = [];\n        pane.dispatchEvent(new PointerEventMock(\"pointerdown\", {documentLeft: 100, documentTop: 100}));\n        pane.dispatchEvent(new PointerEventMock(pointerEvent, {documentLeft: 100, documentTop: 100}));\n        this.assertEquals(1, calls.length, cellEvent);\n        this.assertEquals(0, calls[0].getRow(), cellEvent);\n        this.assertEquals(0, calls[0].getColumn(), cellEvent);\n        this.assertEquals(cellEvent, calls[0].getType(), cellEvent);\n\n        calls = [];\n        pane.dispatchEvent(new PointerEventMock(\"pointerdown\", {documentLeft: 160, documentTop: 103}));\n        pane.dispatchEvent(new PointerEventMock(pointerEvent, {documentLeft: 160, documentTop: 103}));\n        this.assertEquals(1, calls.length, cellEvent);\n        this.assertEquals(0, calls[0].getRow(), cellEvent);\n        this.assertEquals(1, calls[0].getColumn(), cellEvent);\n        this.assertEquals(cellEvent, calls[0].getType(), cellEvent);\n\n        calls = [];\n        pane.dispatchEvent(new PointerEventMock(\"pointerdown\", {documentLeft: 105, documentTop: 110}));\n        pane.dispatchEvent(new PointerEventMock(pointerEvent, {documentLeft: 105, documentTop: 110}));\n        this.assertEquals(1, calls.length, cellEvent);\n        this.assertEquals(1, calls[0].getRow(), cellEvent);\n        this.assertEquals(0, calls[0].getColumn(), cellEvent);\n        this.assertEquals(cellEvent, calls[0].getType(), cellEvent);\n\n        calls = [];\n        pane.dispatchEvent(new PointerEventMock(\"pointerdown\", {documentLeft: 105, documentTop: 125}));\n        pane.dispatchEvent(new PointerEventMock(pointerEvent, {documentLeft: 105, documentTop: 125}));\n        this.assertEquals(0, calls.length);\n\n        calls = [];\n        pane.dispatchEvent(new PointerEventMock(\"pointerdown\", {documentLeft: 275, documentTop: 105}));\n        pane.dispatchEvent(new PointerEventMock(pointerEvent, {documentLeft: 275, documentTop: 105}));\n        this.assertEquals(0, calls.length);\n\n        calls = [];\n        pane.dispatchEvent(new PointerEventMock(\"pointerdown\", {documentLeft: 275, documentTop: 105}));\n        pane.dispatchEvent(new PointerEventMock(pointerEvent, {documentLeft: 275, documentTop: 105}));\n        this.assertEquals(0, calls.length);\n      }\n\n      pane.destroy();\n      this.flush();\n    },\n\n    \"test mouse click bug #6695\" : function()\n    {\n      var rowCount = 2;\n      var colCount = 2;\n      var defaultHeight = 10;\n      var defaultWidth = 50;\n\n      var pane = new qx.ui.virtual.core.Pane(\n        rowCount, colCount,\n        defaultHeight, defaultWidth\n      ).set({\n        width: 150,\n        height: 30\n      });\n\n      this.getRoot().add(pane, {left: 100, top: 100});\n      this.flush();\n\n      var calls = [];\n      var listener = function(e) {\n        calls.push(e);\n      };\n      pane.addListener(\"cellTap\", listener);\n\n      var PointerEventMock = qx.test.ui.virtual.PointerEventMock;\n\n      calls = [];\n      pane.dispatchEvent(new PointerEventMock(\"pointerdown\", {documentLeft: 100, documentTop: 100}));\n      pane.dispatchEvent(new PointerEventMock(\"tap\", {documentLeft: 100, documentTop: 100}));\n      this.assertEquals(1, calls.length);\n      this.assertEquals(0, calls[0].getRow());\n      this.assertEquals(0, calls[0].getColumn());\n      this.assertEquals(\"cellTap\", calls[0].getType());\n\n      calls = [];\n      pane.dispatchEvent(new PointerEventMock(\"pointerdown\", {documentLeft: 100, documentTop: 100}));\n      pane.dispatchEvent(new PointerEventMock(\"tap\", {documentLeft: 160, documentTop: 103}));\n      this.assertEquals(0, calls.length);\n\n      pane.destroy();\n      this.flush();\n    },\n\n\n    testDestroy : function()\n    {\n      this.pane.destroy();\n      this.flush();\n\n      this.assertDestroy(function()\n      {\n        var pane = new qx.ui.virtual.core.Pane(\n          this.rowCount, this.colCount,\n          this.defaultHeight, this.defaultWidth\n        );\n\n        this.getRoot().add(pane);\n        pane.destroy();\n      }, this);\n    }\n  },\n\n  destruct : function() {\n    this.pane = null;\n  }\n});\n"
  ]
}