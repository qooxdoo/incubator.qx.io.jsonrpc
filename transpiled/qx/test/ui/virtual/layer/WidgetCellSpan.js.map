{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/layer/WidgetCellSpan.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "virtual",
    "layer",
    "LayerTestCase",
    "members",
    "setUp",
    "_pool",
    "tearDown",
    "_disposeArray",
    "__cellRenderer",
    "dispose",
    "__rowConfig",
    "__columnConfig",
    "_createLayer",
    "cell",
    "Cell",
    "core",
    "Axis",
    "WidgetCellSpan",
    "getCellWidget",
    "row",
    "column",
    "widget",
    "pop",
    "Widget",
    "setBackgroundColor",
    "poolCellWidget",
    "push",
    "_assertCells",
    "firstRow",
    "firstColumn",
    "rowCount",
    "columnCount",
    "msg",
    "children",
    "_cellLayer",
    "_getChildren",
    "assertEquals",
    "length",
    "y",
    "x",
    "getUserData",
    "testGetRenderedCellWidget",
    "rowConfig",
    "columnConfig",
    "pool",
    "data",
    "Array",
    "setAutoDisposeItems",
    "setUserData",
    "setCellSpan",
    "getRoot",
    "add",
    "flush",
    "fullUpdate",
    "getRenderedCellWidget",
    "destroy",
    "destruct"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Jonathan Wei√ü (jonathan_rass)\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.layer.WidgetCellSpan\",\n{\n  extend : qx.test.ui.virtual.layer.LayerTestCase,\n\n  members :\n  {\n    setUp : function()\n    {\n      this._pool = [];\n      this.base(arguments);\n    },\n\n    tearDown : function() {\n      this.base(arguments);\n      this._disposeArray(\"_pool\");\n      this.__cellRenderer.dispose();\n      this.__rowConfig.dispose();\n      this.__columnConfig.dispose();\n    },\n\n\n    _createLayer : function()\n    {\n      this.__cellRenderer = new qx.ui.virtual.cell.Cell();\n\n      this.__rowConfig = new qx.ui.virtual.core.Axis(10, 100);\n      this.__columnConfig = new qx.ui.virtual.core.Axis(20, 100);\n\n      return new qx.ui.virtual.layer.WidgetCellSpan(\n        this,\n        this.__rowConfig,\n        this.__columnConfig\n      );\n    },\n\n\n    getCellWidget : function(row, column)\n    {\n      var widget = this._pool.pop() || new qx.ui.core.Widget();\n      widget.setBackgroundColor((row + column) % 2 == 0 ? \"red\" : \"green\");\n      return widget;\n    },\n\n\n    poolCellWidget : function(widget)\n    {\n      this._pool.push(widget);\n    },\n\n\n    _assertCells : function(firstRow, firstColumn, rowCount, columnCount, msg)\n    {\n      var children = this.layer._cellLayer._getChildren();\n\n      this.assertEquals(rowCount * columnCount, children.length);\n\n      for (var y=0; y<rowCount; y++)\n      {\n        for (var x=0; x<columnCount; x++)\n        {\n          var row = firstRow + y;\n          var column = firstColumn + x;\n\n          var widget = children[y*columnCount + x];\n          this.assertEquals(row, widget.getUserData(\"cell.row\"));\n          this.assertEquals(column, widget.getUserData(\"cell.column\"));\n        }\n      }\n    },\n\n\n    testGetRenderedCellWidget : function()\n    {\n      var rowConfig = new qx.ui.virtual.core.Axis(10, 100);\n      var columnConfig = new qx.ui.virtual.core.Axis(20, 100);\n\n      var pool = new qx.data.Array();\n      pool.setAutoDisposeItems(true);\n      var layer = new qx.ui.virtual.layer.WidgetCellSpan(\n        {\n          getCellWidget: function(row, column)\n          {\n            var widget = new qx.ui.core.Widget();\n            widget.setUserData(\"test\", row+\"/\"+column);\n            pool.push(widget);\n            return row == 1 && column == 2 ? null : widget;\n          },\n\n          poolCellWidget : function(widget) {\n          }\n        },\n        rowConfig, columnConfig\n      );\n\n      layer.setCellSpan(2, 0, 1, 2);\n      layer.setCellSpan(2, 3, 1, 2);\n      layer.setCellSpan(2, 2, 2, 1);\n\n      this.getRoot().add(layer);\n      this.flush();\n\n      layer.fullUpdate(1, 1, [10, 10, 10], [50, 50, 50]);\n      this.flush();\n\n      this.assertEquals(null, layer.getRenderedCellWidget(0, 0));\n      this.assertEquals(null, layer.getRenderedCellWidget(0, 1));\n      this.assertEquals(null, layer.getRenderedCellWidget(1, 0));\n      this.assertEquals(null, layer.getRenderedCellWidget(1, 2));\n      this.assertEquals(null, layer.getRenderedCellWidget(4, 1));\n      this.assertEquals(null, layer.getRenderedCellWidget(1, 4));\n      this.assertEquals(null, layer.getRenderedCellWidget(4, 4));\n\n      // non spanning cells\n      this.assertEquals(\"1/1\", layer.getRenderedCellWidget(1, 1).getUserData(\"test\"));\n      this.assertEquals(\"1/3\", layer.getRenderedCellWidget(1, 3).getUserData(\"test\"));\n      this.assertEquals(\"3/1\", layer.getRenderedCellWidget(3, 1).getUserData(\"test\"));\n      this.assertEquals(\"3/3\", layer.getRenderedCellWidget(3, 3).getUserData(\"test\"));\n\n      // spanning cells\n      this.assertEquals(\"2/0\", layer.getRenderedCellWidget(2, 0).getUserData(\"test\"));\n      this.assertEquals(\"2/0\", layer.getRenderedCellWidget(2, 1).getUserData(\"test\"));\n      this.assertEquals(\"2/3\", layer.getRenderedCellWidget(2, 3).getUserData(\"test\"));\n      this.assertEquals(\"2/3\", layer.getRenderedCellWidget(2, 4).getUserData(\"test\"));\n      this.assertEquals(\"2/2\", layer.getRenderedCellWidget(2, 2).getUserData(\"test\"));\n      this.assertEquals(\"2/2\", layer.getRenderedCellWidget(3, 2).getUserData(\"test\"));\n\n      layer.destroy();\n      rowConfig.dispose();\n      columnConfig.dispose();\n      pool.dispose();\n    }\n  },\n\n  destruct : function() {\n    this.__cellRenderer = null;\n  }\n});\n"
  ]
}