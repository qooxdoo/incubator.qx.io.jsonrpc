{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/layer/WidgetCell.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "virtual",
    "layer",
    "LayerTestCase",
    "members",
    "setUp",
    "_pool",
    "tearDown",
    "i",
    "length",
    "destroy",
    "flush",
    "_createLayer",
    "WidgetCell",
    "getCellWidget",
    "row",
    "column",
    "widget",
    "pop",
    "core",
    "Widget",
    "setBackgroundColor",
    "poolCellWidget",
    "setUserData",
    "push",
    "_assertCells",
    "firstRow",
    "firstColumn",
    "rowCount",
    "columnCount",
    "msg",
    "children",
    "_getChildren",
    "assertEquals",
    "y",
    "x",
    "getUserData",
    "testGetRenderedCellWidget",
    "pool",
    "data",
    "Array",
    "setAutoDisposeItems",
    "getRoot",
    "add",
    "fullUpdate",
    "getRenderedCellWidget",
    "dispose",
    "testEmptyCells",
    "getChildren",
    "child",
    "assertInstance",
    "Spacer"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Jonathan Wei√ü (jonathan_rass)\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.layer.WidgetCell\",\n{\n  extend : qx.test.ui.virtual.layer.LayerTestCase,\n\n  members :\n  {\n    setUp : function()\n    {\n      this._pool = [];\n\n      this.base(arguments);\n    },\n\n\n    tearDown : function()\n    {\n      for (var i=0; i<this._pool.length; i++) {\n        this._pool[i].destroy();\n      }\n      this.flush();\n\n      this._pool = null;\n      this.base(arguments);\n    },\n\n\n    _createLayer : function() {\n      return new qx.ui.virtual.layer.WidgetCell(this);\n    },\n\n\n    getCellWidget : function(row, column)\n    {\n      var widget = this._pool.pop() || new qx.ui.core.Widget();\n      widget.setBackgroundColor((row + column) % 2 == 0 ? \"red\" : \"green\");\n      return widget;\n    },\n\n\n    poolCellWidget : function(widget)\n    {\n      widget.setUserData(\"row\", -1);\n      widget.setUserData(\"column\", -1);\n      this._pool.push(widget);\n    },\n\n\n    _assertCells : function(firstRow, firstColumn, rowCount, columnCount, msg)\n    {\n      var children = this.layer._getChildren();\n\n      this.assertEquals(rowCount * columnCount, children.length);\n\n      for (var y=0; y<rowCount; y++)\n      {\n        for (var x=0; x<columnCount; x++)\n        {\n          var row = firstRow + y;\n          var column = firstColumn + x;\n\n          var widget = children[y*columnCount + x];\n          this.assertEquals(row, widget.getUserData(\"cell.row\"));\n          this.assertEquals(column, widget.getUserData(\"cell.column\"));\n        }\n      }\n    },\n\n\n    testGetRenderedCellWidget : function()\n    {\n      var pool = new qx.data.Array();\n      pool.setAutoDisposeItems(true);\n      var layer = new qx.ui.virtual.layer.WidgetCell({\n        getCellWidget: function(row, column)\n        {\n          var widget = new qx.ui.core.Widget();\n          widget.setUserData(\"test\", row+\"/\"+column);\n          pool.push(widget);\n          return row == 2 && column == 2 ? null : widget;\n        },\n\n        poolCellWidget : function(widget) {\n        }\n      });\n\n      this.getRoot().add(layer);\n      this.flush();\n\n      layer.fullUpdate(1, 1, [10, 10, 10], [50, 50, 50]);\n      this.flush();\n\n      this.assertEquals(null, layer.getRenderedCellWidget(0, 0));\n      this.assertEquals(null, layer.getRenderedCellWidget(0, 1));\n      this.assertEquals(null, layer.getRenderedCellWidget(1, 0));\n      this.assertEquals(null, layer.getRenderedCellWidget(2, 2));\n      this.assertEquals(null, layer.getRenderedCellWidget(4, 1));\n      this.assertEquals(null, layer.getRenderedCellWidget(1, 4));\n      this.assertEquals(null, layer.getRenderedCellWidget(4, 4));\n\n      this.assertEquals(\"1/1\", layer.getRenderedCellWidget(1, 1).getUserData(\"test\"));\n      this.assertEquals(\"1/3\", layer.getRenderedCellWidget(1, 3).getUserData(\"test\"));\n      this.assertEquals(\"3/1\", layer.getRenderedCellWidget(3, 1).getUserData(\"test\"));\n      this.assertEquals(\"3/3\", layer.getRenderedCellWidget(3, 3).getUserData(\"test\"));\n\n      layer.destroy();\n      pool.dispose();\n    },\n\n\n    testEmptyCells : function()\n    {\n      var layer = new qx.ui.virtual.layer.WidgetCell({\n        getCellWidget: function(row, column) {\n          return column === 0 ? new qx.ui.core.Widget() : null;\n        },\n\n        poolCellWidget : function(widget) {\n          widget.destroy();\n        }\n      });\n\n      this.getRoot().add(layer);\n      this.flush();\n\n      layer.fullUpdate(0, 0, [10, 10, 10, 10, 10, 10], [30, 30, 30]);\n      this.flush();\n\n      var children = layer.getChildren();\n\n      for (var y=0; y<=5; y++)\n      {\n        for (var x=0; x<=2; x++)\n        {\n          var child = children[y*3 + x];\n          if (x === 0) {\n            this.assertInstance(child, qx.ui.core.Widget);\n          } else {\n            this.assertInstance(child, qx.ui.core.Spacer);\n          }\n        }\n      }\n\n      layer.destroy();\n    }\n  }\n});\n"
  ]
}