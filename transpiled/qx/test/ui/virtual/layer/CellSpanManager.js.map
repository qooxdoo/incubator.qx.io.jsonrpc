{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/layer/CellSpanManager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "setUp",
    "rowConfig",
    "virtual",
    "core",
    "Axis",
    "columnConfig",
    "cellSpan",
    "layer",
    "CellSpanManager",
    "tearDown",
    "dispose",
    "assertSorted",
    "cells",
    "key",
    "last",
    "i",
    "l",
    "length",
    "cell",
    "start",
    "assert",
    "testGetSortedCells",
    "addCell",
    "_getSortedCells",
    "assertEquals",
    "testFindCellsInRange",
    "result",
    "_findCellsInRange",
    "assertArrayEquals",
    "Object",
    "keys",
    "sort",
    "testFindCellsInWindow",
    "findCellsInWindow",
    "ids",
    "forEach",
    "push",
    "id",
    "testGetCellOffsets",
    "bounds",
    "getCellBounds",
    "firstRow",
    "lastRow",
    "firstColumn",
    "lastColumn",
    "assertJsonEquals",
    "left",
    "top",
    "width",
    "height",
    "testAxisChange",
    "setDefaultItemSize",
    "testComputeCellSpanMap",
    "map",
    "computeCellSpanMap",
    "undefined",
    "testDispose",
    "assertDestroy",
    "destruct"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Jonathan Weiß (jonathan_rass)\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.layer.CellSpanManager\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    setUp : function()\n    {\n      this.rowConfig = new qx.ui.virtual.core.Axis(10, 100);\n      this.columnConfig = new qx.ui.virtual.core.Axis(20, 100);\n\n      this.cellSpan = new qx.ui.virtual.layer.CellSpanManager(\n        this.rowConfig,\n        this.columnConfig\n      );\n    },\n\n\n    tearDown : function()\n    {\n      this.base(arguments);\n      this.cellSpan.dispose();\n      this.rowConfig.dispose();\n      this.columnConfig.dispose();\n    },\n\n\n    assertSorted : function(cells, key)\n    {\n      var last = -1;\n      for (var i=0, l=cells.length; i<l; i++)\n      {\n        var cell = cells[i];\n        var start = cell[key];\n        this.assert(last <= start);\n        last = start;\n      }\n    },\n\n\n    testGetSortedCells : function()\n    {\n      var cellSpan = this.cellSpan;\n\n      cellSpan.addCell(\"c1\", 6, 4, 5, 3);\n      cellSpan.addCell(\"c2\", 2, 6, 3, 4);\n      cellSpan.addCell(\"c3\", 7, 7, 6, 3);\n      cellSpan.addCell(\"c4\", 2, 8, 6, 13);\n      cellSpan.addCell(\"c5\", 0, 9, 1, 13);\n      cellSpan.addCell(\"c6\", 10, 10, 1, 3);\n\n      var cells = cellSpan._getSortedCells(\"firstRow\");\n      this.assertEquals(6, cells.length);\n      this.assertSorted(cells, \"firstRow\");\n\n      var cells = cellSpan._getSortedCells(\"lastRow\");\n      this.assertEquals(6, cells.length);\n      this.assertSorted(cells, \"lastRow\");\n\n      var cells = cellSpan._getSortedCells(\"firstColumn\");\n      this.assertEquals(6, cells.length);\n      this.assertSorted(cells, \"firstColumn\");\n\n      var cells = cellSpan._getSortedCells(\"lastColumn\");\n      this.assertEquals(6, cells.length);\n      this.assertSorted(cells, \"lastColumn\");\n\n\n      cellSpan.addCell(\"c7\", 6, 5, 2, 5);\n      cellSpan.addCell(\"c8\", 1, 12, 7, 4);\n\n      var cells = cellSpan._getSortedCells(\"firstRow\");\n      this.assertEquals(8, cells.length);\n      this.assertSorted(cells, \"firstRow\");\n\n      var cells = cellSpan._getSortedCells(\"lastRow\");\n      this.assertEquals(8, cells.length);\n      this.assertSorted(cells, \"lastRow\");\n\n      var cells = cellSpan._getSortedCells(\"firstColumn\");\n      this.assertEquals(8, cells.length);\n      this.assertSorted(cells, \"firstColumn\");\n\n      var cells = cellSpan._getSortedCells(\"lastColumn\");\n      this.assertEquals(8, cells.length);\n      this.assertSorted(cells, \"lastColumn\");\n    },\n\n\n    testFindCellsInRange : function()\n    {\n      var cellSpan = this.cellSpan;\n\n      cellSpan.addCell(\"c1\", 6, 4, 5, 3);\n      cellSpan.addCell(\"c2\", 2, 6, 3, 4);\n      cellSpan.addCell(\"c3\", 7, 7, 6, 3);\n      cellSpan.addCell(\"c4\", 2, 8, 6, 13);\n      cellSpan.addCell(\"c5\", 1, 9, 1, 13);\n      cellSpan.addCell(\"c6\", 10, 10, 1, 3);\n\n      var result = cellSpan._findCellsInRange(\"firstRow\", 2, 6);\n      this.assertArrayEquals(\n        [\"c1\", \"c2\", \"c4\"],\n        Object.keys(result).sort()\n      );\n\n      var result = cellSpan._findCellsInRange(\"firstRow\", 11, 20);\n      this.assertArrayEquals([], Object.keys(result));\n\n      var result = cellSpan._findCellsInRange(\"firstRow\", 0, 0);\n      this.assertArrayEquals([], Object.keys(result));\n\n      var result = cellSpan._findCellsInRange(\"firstRow\", 0, 5);\n      this.assertArrayEquals(\n        [\"c2\", \"c4\", \"c5\"],\n        Object.keys(result).sort()\n      );\n\n\n      var result = cellSpan._findCellsInRange(\"lastRow\", 3, 8);\n      this.assertArrayEquals([\"c2\", \"c4\"], Object.keys(result).sort());\n\n      var result = cellSpan._findCellsInRange(\"firstColumn\", 3, 7);\n      this.assertArrayEquals(\n        [\"c1\", \"c2\", \"c3\"],\n        Object.keys(result).sort()\n      );\n\n      var result = cellSpan._findCellsInRange(\"lastColumn\", 0, 22);\n      this.assertArrayEquals(\n        [\"c1\", \"c2\", \"c3\", \"c4\", \"c5\", \"c6\"],\n        Object.keys(result).sort()\n      );\n    },\n\n\n    testFindCellsInWindow : function()\n    {\n      var cellSpan = this.cellSpan;\n\n      cellSpan.addCell(\"c1\", 6, 4, 5, 3);\n      cellSpan.addCell(\"c2\", 2, 6, 3, 4);\n      cellSpan.addCell(\"c3\", 7, 7, 6, 3);\n      cellSpan.addCell(\"c4\", 2, 8, 6, 13);\n      cellSpan.addCell(\"c5\", 1, 9, 1, 13);\n      cellSpan.addCell(\"c6\", 10, 10, 1, 3);\n\n      var cells = cellSpan.findCellsInWindow(1, 7, 5, 14);\n      var ids = [];\n      cells.forEach(function(cell) {\n        ids.push(cell.id);\n      });\n      this.assertArrayEquals([\"c2\", \"c4\", \"c5\"], ids.sort());\n    },\n\n\n    testGetCellOffsets : function()\n    {\n      var cellSpan = this.cellSpan;\n\n      var bounds = cellSpan.getCellBounds([{\n        firstRow: 1,\n        lastRow: 3,\n        firstColumn: 2,\n        lastColumn: 5\n      }], 3, 3);\n      this.assertJsonEquals({\n        left: -20,\n        top: -20,\n        width: 80,\n        height: 30\n      }, bounds[0]);\n\n      var bounds = cellSpan.getCellBounds([{\n        firstRow: 1,\n        lastRow: 3,\n        firstColumn: 2,\n        lastColumn: 5\n      }], 1, 2);\n      this.assertJsonEquals({\n        left: 0,\n        top: 0,\n        width: 80,\n        height: 30\n      }, bounds[0]);\n\n      var bounds = cellSpan.getCellBounds([{\n        firstRow: 1,\n        lastRow: 3,\n        firstColumn: 2,\n        lastColumn: 5\n      }], 0, 1);\n      this.assertJsonEquals({\n        left: 20,\n        top: 10,\n        width: 80,\n        height: 30\n      }, bounds[0]);\n    },\n\n\n    testAxisChange : function()\n    {\n      var bounds = this.cellSpan.getCellBounds([{\n        firstRow: 1,\n        lastRow: 3,\n        firstColumn: 2,\n        lastColumn: 5\n      }], 3, 3);\n      this.assertJsonEquals({\n        left: -20,\n        top: -20,\n        width: 80,\n        height: 30\n      }, bounds[0]);\n\n      this.rowConfig.setDefaultItemSize(15);\n\n      var bounds = this.cellSpan.getCellBounds([{\n        firstRow: 1,\n        lastRow: 3,\n        firstColumn: 2,\n        lastColumn: 5\n      }], 3, 3);\n      this.assertJsonEquals({\n        left: -20,\n        top: -30,\n        width: 80,\n        height: 45\n      }, bounds[0]);\n    },\n\n\n    testComputeCellSpanMap : function()\n    {\n      var cellSpan = this.cellSpan;\n\n      cellSpan.addCell(\"c1\", 0, 0, 2, 2);\n      cellSpan.addCell(\"c2\", 0, 4, 2, 2);\n      cellSpan.addCell(\"c3\", 2, 2, 2, 2);\n      cellSpan.addCell(\"c4\", 4, 0, 2, 2);\n      cellSpan.addCell(\"c5\", 4, 4, 2, 2);\n\n      var cells = cellSpan.findCellsInWindow(1, 1, 4, 4);\n      var ids = [];\n      cells.forEach(function(cell) {\n        ids.push(cell.id);\n      });\n      this.assertJsonEquals([\"c1\", \"c2\", \"c3\", \"c4\", \"c5\"], ids.sort());\n\n      var map = cellSpan.computeCellSpanMap(cells, 1, 1, 4, 4);\n      this.assertJsonEquals([\n       undefined,\n       [undefined, 1, undefined, undefined, 1],\n       [undefined, undefined, 1, 1],\n       [undefined, undefined, 1, 1],\n       [undefined, 1, undefined, undefined, 1]\n      ], map);\n    },\n\n\n    testDispose : function()\n    {\n      var rowConfig = new qx.ui.virtual.core.Axis(10, 100);\n      var columnConfig = new qx.ui.virtual.core.Axis(20, 100);\n\n      this.assertDestroy(function()\n      {\n        var cellSpan = new qx.ui.virtual.layer.CellSpanManager(\n          rowConfig,\n          columnConfig\n        );\n        cellSpan.dispose();\n      }, this);\n\n      rowConfig.dispose();\n      columnConfig.dispose();\n    }\n\n  },\n\n  destruct : function() {\n    this.cellSpan = this.rowConfig = this.columnConfig = null;\n  }\n});"
  ]
}