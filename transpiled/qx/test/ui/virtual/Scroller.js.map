{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/virtual/Scroller.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "setUp",
    "scroller",
    "virtual",
    "core",
    "Scroller",
    "getRoot",
    "add",
    "flush",
    "tearDown",
    "destroy",
    "assertScrollbars",
    "hasScrollX",
    "hasScrollY",
    "msg",
    "assertEquals",
    "getChildControl",
    "isVisible",
    "configureScroller",
    "scrollWidth",
    "scrollHeight",
    "width",
    "height",
    "set",
    "getPane",
    "getRowConfig",
    "setItemSize",
    "getColumnConfig",
    "fullUpdate",
    "testConstructor",
    "assertNotUndefined",
    "testScrollX",
    "setScrollbarY",
    "getScrollX",
    "scrollToX",
    "testScrollY",
    "setScrollbarX",
    "scrollToY",
    "getScrollY",
    "testMaxScrollPosition",
    "testScrollbarYAuto",
    "testScrollbarXAuto",
    "testScrollbarXYAuto",
    "destruct"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n   * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.virtual.Scroller\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    setUp : function()\n    {\n      this.base(arguments);\n\n      var scroller = new qx.ui.virtual.core.Scroller(1, 1, 10, 10);\n      this.getRoot().add(scroller);\n      this.scroller = scroller;\n\n      this.flush();\n    },\n\n    tearDown : function()\n    {\n      this.scroller.destroy();\n      this.base(arguments);\n      this.flush();\n    },\n\n    assertScrollbars : function(hasScrollX, hasScrollY, msg)\n    {\n      this.assertEquals(\n        hasScrollX,\n        this.scroller.getChildControl(\"scrollbar-x\").isVisible(),\n        msg\n      );\n      this.assertEquals(\n        hasScrollY,\n        this.scroller.getChildControl(\"scrollbar-y\").isVisible(),\n        msg\n      );\n    },\n\n    configureScroller : function(scrollWidth, scrollHeight, width, height)\n    {\n      this.scroller.set({\n        width: width,\n        height: height\n      });\n      this.scroller.getPane().getRowConfig().setItemSize(0, scrollHeight);\n      this.scroller.getPane().getColumnConfig().setItemSize(0, scrollWidth);\n\n      // trigger update manually\n      this.scroller.getPane().fullUpdate();\n      this.flush();\n    },\n\n    testConstructor : function() {\n      this.assertNotUndefined(this.scroller);\n    },\n\n    testScrollX : function()\n    {\n      this.scroller.setScrollbarY(\"off\");\n\n      this.configureScroller(3000, 2000, 300, 200);\n      this.assertScrollbars(true, false);\n\n      this.assertEquals(0, this.scroller.getScrollX());\n      this.assertEquals(0, this.scroller.getPane().getScrollX());\n\n      this.scroller.scrollToX(100);\n      this.assertEquals(100, this.scroller.getScrollX());\n      this.assertEquals(100, this.scroller.getPane().getScrollX());\n\n      this.scroller.scrollToX(3000);\n\n      this.assertEquals(3000-300, this.scroller.getScrollX());\n      this.assertEquals(3000-300, this.scroller.getPane().getScrollX());\n\n      this.configureScroller(3000, 2000, 3000, 2000);\n      this.assertScrollbars(false, false);\n      this.assertEquals(0, this.scroller.getScrollX());\n      this.assertEquals(0, this.scroller.getPane().getScrollX());\n    },\n\n    testScrollY : function()\n    {\n      this.scroller.setScrollbarX(\"off\");\n\n      this.configureScroller(3000, 2000, 300, 200);\n      this.assertScrollbars(false, true);\n\n      this.assertEquals(0, this.scroller.getScrollX());\n      this.assertEquals(0, this.scroller.getPane().getScrollX());\n\n      this.scroller.scrollToY(100);\n      this.assertEquals(100, this.scroller.getScrollY());\n      this.assertEquals(100, this.scroller.getPane().getScrollY());\n\n      this.scroller.scrollToY(2000);\n      this.assertEquals(2000-200, this.scroller.getScrollY());\n      this.assertEquals(2000-200, this.scroller.getPane().getScrollY());\n\n      this.configureScroller(3000, 2000, 3000, 2000);\n      this.assertScrollbars(false, false);\n      this.assertEquals(0, this.scroller.getScrollY());\n      this.assertEquals(0, this.scroller.getPane().getScrollY());\n    },\n\n    testMaxScrollPosition : function()\n    {\n      this.scroller.setScrollbarX(\"off\");\n\n      this.configureScroller(3000, 2000, 300, 200);\n      this.assertScrollbars(false, true);\n\n      // scroll to end\n      this.scroller.scrollToY(10000);\n      this.assertEquals(2000-200, this.scroller.getScrollY());\n\n      // increase scroller size\n      this.configureScroller(3000, 2000, 300, 400);\n      this.assertEquals(\n        2000-400, this.scroller.getScrollY(),\n        \"the scroll position must be limited to the max scroll position\"\n      );\n      this.assertEquals(\n        2000-400, this.scroller.getPane().getScrollY(),\n        \"the scroll position must be limited to the max scroll position\"\n      );\n\n    },\n\n    testScrollbarYAuto : function()\n    {\n      this.scroller.setScrollbarX(\"off\");\n      this.scroller.setScrollbarY(\"auto\");\n\n      // pane and widget have equal size\n      this.configureScroller(300, 200, 300, 200);\n      this.assertScrollbars(false, false);\n\n      // pane larger than widget\n      this.configureScroller(300, 201, 300, 200);\n      this.assertScrollbars(false, true);\n\n      // widget larger than pane\n      this.configureScroller(300, 201, 300, 202);\n      this.assertScrollbars(false, false);\n\n\n      // scroll y must be hidden all the time\n      this.configureScroller(301, 200, 300, 200);\n      this.assertScrollbars(false, false);\n    },\n\n    testScrollbarXAuto : function()\n    {\n      this.scroller.setScrollbarX(\"auto\");\n      this.scroller.setScrollbarY(\"off\");\n\n      // pane and widget have equal size\n      this.configureScroller(300, 200, 300, 200);\n      this.assertScrollbars(false, false);\n\n      // pane larger than widget\n      this.configureScroller(301, 200, 300, 200);\n      this.assertScrollbars(true, false);\n\n      // widget larger than pane\n      this.configureScroller(301, 200, 302, 200);\n      this.assertScrollbars(false, false);\n\n\n      // scroll x must be hidden all the time\n      this.configureScroller(300, 201, 300, 200);\n      this.assertScrollbars(false, false);\n    },\n\n    testScrollbarXYAuto : function()\n    {\n      // pane and widget have equal size\n      this.configureScroller(300, 200, 300, 200);\n      this.assertScrollbars(false, false);\n\n      // increase the pane a bit -> both scrollbars are needed\n      this.configureScroller(301, 200, 300, 200);\n      this.assertScrollbars(true, true);\n\n      // reset\n      this.configureScroller(300, 200, 300, 200);\n      this.assertScrollbars(false, false);\n\n      this.configureScroller(300, 201, 300, 200);\n      this.assertScrollbars(true, true);\n\n      // increase scroller height\n      this.configureScroller(300, 201, 300, 250);\n      this.assertScrollbars(false, false);\n\n      // increase scroller width\n      this.configureScroller(300, 201, 350, 250);\n      this.assertScrollbars(false, false);\n    }\n  },\n\n  destruct : function() {\n    this.scroller = null;\n  }\n});\n"
  ]
}