{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/table/Table.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "createModel",
    "tableModel",
    "table",
    "model",
    "Simple",
    "setColumns",
    "setData",
    "createRandomRows",
    "rowCount",
    "rowData",
    "nextId",
    "strings",
    "row",
    "date",
    "Date",
    "number",
    "NaN",
    "push",
    "testSortInteger",
    "Table",
    "sortByColumn",
    "data",
    "getData",
    "i",
    "length",
    "assertTrue",
    "destroy",
    "dispose",
    "testSortIntegerNaN",
    "isNaN",
    "assertFalse",
    "testSortIntegerNaNInsensitive",
    "setCaseSensitiveSorting",
    "testSortStringInsensitive",
    "testSortString",
    "testRegularListener",
    "executed",
    "id",
    "addListener",
    "assertNotNull",
    "removeListenerById",
    "setRowHeight",
    "testSpecialListener",
    "setMetaColumnCounts",
    "scroller",
    "_getPaneScrollerArr",
    "mouse",
    "event",
    "type",
    "Mouse",
    "init",
    "fireEvent",
    "pane",
    "CellEvent",
    "testScrollAfterScrollbarVisibilityChange",
    "set",
    "width",
    "height",
    "getRoot",
    "add",
    "core",
    "queue",
    "Manager",
    "flush",
    "getPaneScroller",
    "setScrollY",
    "getTableColumnModel",
    "setColumnWidth",
    "assertEquals",
    "getScrollY",
    "testFocusAfterRemove",
    "tableModelSimple",
    "tableSimple",
    "getSelectionModel",
    "addSelectionInterval",
    "setFocusedCell",
    "removeRows",
    "getFocusedRow",
    "getSelectedCount"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.table.Table\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    createModel : function()\n    {\n      var tableModel = new qx.ui.table.model.Simple();\n      tableModel.setColumns([ \"ID\", \"A number\", \"String\", \"A date\", \"Boolean\" ]);\n      tableModel.setData(this.createRandomRows(5));\n\n      return tableModel;\n    },\n\n\n    createRandomRows : function(rowCount)\n    {\n      var rowData = [];\n      var nextId = 0;\n      var strings = [\"a\", \"b\", \"c\", \"d\"];\n      for (var row = 0; row < rowCount; row++) {\n        var date = new Date(row * row * row);\n        var number = row % 2 == 0 ? row / 2 : NaN;\n        rowData.push([ nextId++, number, strings[row % 4], date, (row % 2 == 1) ]);\n      }\n      return rowData;\n    },\n\n\n    testSortInteger : function()\n    {\n      // table\n      var model = this.createModel();\n      var table = new qx.ui.table.Table(model);\n\n      // sort descending\n      model.sortByColumn(0);\n      var data = model.getData();\n      for (var i = 0; i < data.length - 1; i++) {\n        this.assertTrue(data[i][0] >= data[i+1][0]);\n      };\n\n      // sort ascending\n      model.sortByColumn(0, true);\n      for (var i = 0; i < data.length - 1; i++) {\n        this.assertTrue(data[i][0] <= data[i+1][0]);\n      };\n\n      table.destroy();\n      model.dispose();\n    },\n\n\n    testSortIntegerNaN : function()\n    {\n      // table\n      var model = this.createModel();\n      var table = new qx.ui.table.Table(model);\n\n      // sort descending\n      model.sortByColumn(1);\n      var data = model.getData();\n      for (var i = 0; i < data.length - 1; i++) {\n        if (isNaN(data[i][1])) {\n          // both should be NaN\n          this.assertTrue(isNaN(data[i+1][1]));\n        } else if (isNaN(data[i+1][1])) {\n          // should be a number\n          this.assertFalse(isNaN(data[i][1]));\n        } else {\n          this.assertTrue(data[i][1] >= data[i+1][1]);\n        }\n      };\n\n      // sort ascending\n      model.sortByColumn(1, true);\n      var data = model.getData();\n      for (var i = 0; i < data.length - 1; i++) {\n        if (isNaN(data[i][1])) {\n          // both should be NaN\n          this.assertTrue(isNaN(data[i+1][1]));\n        } else if (isNaN(data[i+1][1])) {\n          // should be a number\n          this.assertFalse(isNaN(data[i][1]));\n        } else {\n          this.assertTrue(data[i][1] <= data[i+1][1]);\n        }\n      };\n\n      table.destroy();\n      model.dispose();\n    },\n\n\n    testSortIntegerNaNInsensitive : function()\n    {\n      // table\n      var model = this.createModel();\n      var table = new qx.ui.table.Table(model);\n      model.setCaseSensitiveSorting(false);\n\n      // sort descending\n      model.sortByColumn(1);\n      var data = model.getData();\n      for (var i = 0; i < data.length - 1; i++) {\n        if (isNaN(data[i][1])) {\n          // both should be NaN\n          this.assertTrue(isNaN(data[i+1][1]));\n        } else if (isNaN(data[i+1][1])) {\n          // should be a number\n          this.assertFalse(isNaN(data[i][1]));\n        } else {\n          this.assertTrue(data[i][1] >= data[i+1][1]);\n        }\n      };\n\n      // sort ascending\n      model.sortByColumn(1, true);\n      var data = model.getData();\n      for (var i = 0; i < data.length - 1; i++) {\n        if (isNaN(data[i][1])) {\n          // both should be NaN\n          this.assertTrue(isNaN(data[i+1][1]));\n        } else if (isNaN(data[i+1][1])) {\n          // should be a number\n          this.assertFalse(isNaN(data[i][1]));\n        } else {\n          this.assertTrue(data[i][1] <= data[i+1][1]);\n        }\n      };\n\n      table.destroy();\n      model.dispose();\n    },\n\n\n    testSortStringInsensitive : function()\n    {\n      // table\n      var model = this.createModel();\n      var table = new qx.ui.table.Table(model);\n      model.setCaseSensitiveSorting(false);\n\n      // sort descending\n      model.sortByColumn(2);\n      var data = model.getData();\n      for (var i = 0; i < data.length - 1; i++) {\n        this.assertTrue(data[i][2] >= data[i+1][2]);\n      };\n\n      // sort ascending\n      model.sortByColumn(2, true);\n      for (var i = 0; i < data.length - 1; i++) {\n        this.assertTrue(data[i][2] <= data[i+1][2]);\n      };\n\n      table.destroy();\n      model.dispose();\n    },\n\n\n    testSortString : function()\n    {\n      // table\n      var model = this.createModel();\n      var table = new qx.ui.table.Table(model);\n\n      // sort descending\n      model.sortByColumn(2);\n      var data = model.getData();\n      for (var i = 0; i < data.length - 1; i++) {\n        this.assertTrue(data[i][2] >= data[i+1][2]);\n      };\n\n      // sort ascending\n      model.sortByColumn(2, true);\n      for (var i = 0; i < data.length - 1; i++) {\n        this.assertTrue(data[i][2] <= data[i+1][2]);\n      };\n\n      table.destroy();\n      model.dispose();\n    },\n\n\n    testRegularListener : function() {\n      var table = new qx.ui.table.Table();\n\n      var executed = false;\n      var id = table.addListener(\"changeRowHeight\", function() {executed = true;}, this);\n      this.assertNotNull(id);\n\n      table.removeListenerById(id);\n\n      // invoke event\n      table.setRowHeight(111);\n      this.assertFalse(executed);\n\n      table.destroy();\n    },\n\n\n    testSpecialListener : function() {\n      var table = new qx.ui.table.Table();\n      // use a meta column to see if both events are handled properly\n      table.setMetaColumnCounts([1, -1]);\n\n      var executed = false;\n      var id = table.addListener(\"cellClick\", function() {executed = true;}, this);\n      this.assertNotNull(id);\n\n      table.removeListenerById(id);\n\n      // invoke synthetic cellClick event\n      var scroller = table._getPaneScrollerArr()[0];\n      var mouse = new qx.event.type.Mouse();\n      mouse.init({}, scroller, scroller, false, true);\n      scroller.fireEvent(\"cellClick\", qx.ui.table.pane.CellEvent, [scroller, mouse, 0, 0], true);\n      this.assertFalse(executed, \"Listener not removed\");\n\n      mouse.dispose();\n      table.destroy();\n    },\n\n\n    testScrollAfterScrollbarVisibilityChange : function()\n    {\n      var rowData = [];\n      for (var row = 0; row < 15; row++) {\n        rowData.push([ row ]);\n      }\n\n      var tableModel = new qx.ui.table.model.Simple();\n      tableModel.setColumns([\"ID\"]);\n      tableModel.setData(rowData);\n      var table = new qx.ui.table.Table(tableModel).set({width: 200, height: 200});\n      this.getRoot().add(table);\n\n      qx.ui.core.queue.Manager.flush();\n\n      // scroll to the end\n      table.getPaneScroller(0).setScrollY(100);\n      // resize the first column to show a vertical scrollbar\n      table.getTableColumnModel().setColumnWidth(0, 300);\n      // resize back\n      table.getTableColumnModel().setColumnWidth(0, 100);\n      // check that the table is not scrolled back to the top\n      this.assertEquals(100, table.getPaneScroller(0).getScrollY());\n      \n      table.destroy();\n      tableModel.dispose();\n    },\n\n\n    testFocusAfterRemove : function()\n    {\n      var tableModelSimple = new qx.ui.table.model.Simple();\n      tableModelSimple.setColumns([ \"Location\", \"Team\" ]);\n      var tableSimple = new qx.ui.table.Table(tableModelSimple);\n\n      var data = [ [1, 'team1'],\n                   [2, 'team2'],\n                   [3, 'team3']];\n\n      tableModelSimple.setData(data);\n\n      // select and focus row 2\n      tableSimple.getSelectionModel().addSelectionInterval(1,1);\n      tableSimple.setFocusedCell(1,1);\n\n      // remove this row\n      tableModelSimple.removeRows(1,1);\n\n      // check if the selection and the focus is gone\n      this.assertEquals(null, tableSimple.getFocusedRow()); // don't use assertNull because it can be undefined\n      this.assertEquals(0, tableSimple.getSelectionModel().getSelectedCount());\n\n      tableSimple.destroy();\n      tableModelSimple.dispose();\n    }\n  }\n});\n"
  ]
}