{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/table/model/Simple.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "testGetRowDataAsMap",
    "tableDataWithMeta",
    "tableModel",
    "table",
    "model",
    "Simple",
    "setColumns",
    "setDataAsMapArray",
    "data",
    "getRowDataAsMap",
    "assertEquals",
    "id",
    "col1",
    "col2",
    "setValue",
    "dispose",
    "getStringValues",
    "createRandomRows",
    "rowCount",
    "rowData",
    "strings",
    "row",
    "push",
    "length",
    "testCustomSortFunction",
    "stringValues",
    "setData",
    "setSortMethods",
    "ascending",
    "row1",
    "row2",
    "columnIndex",
    "int1",
    "int2",
    "descending",
    "string1",
    "string2",
    "localeCompare",
    "Table",
    "sortByColumn",
    "getData",
    "assertTrue",
    "destroy",
    "testCustomSortFunctionArgumentsCalleeColumnIndexDeprecated",
    "arguments",
    "callee"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.table.model.Simple\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    testGetRowDataAsMap : function() {\n      var tableDataWithMeta = [{\n          \"id\" : 100,\n          \"col1\" : 'test',\n          \"col2\" : 'test2'\n      }];\n\n      var tableModel = new qx.ui.table.model.Simple();\n      tableModel.setColumns([\"Col1\", \"Col2\"], [\"col1\", \"col2\"]);\n      tableModel.setDataAsMapArray(tableDataWithMeta, true);\n\n      // check the initial data\n      var data = tableModel.getRowDataAsMap(0);\n      this.assertEquals(100, data.id);\n      this.assertEquals(\"test\", data.col1);\n      this.assertEquals(\"test2\", data.col2);\n\n      // change the data\n      tableModel.setValue(0, 0, \"affe\");\n\n      data = tableModel.getRowDataAsMap(0);\n      // check the changed data\n      this.assertEquals(100, data.id);\n      this.assertEquals(\"affe\", data.col1);\n      this.assertEquals(\"test2\", data.col2);\n\n      tableModel.dispose();\n    },\n    \n    getStringValues : function() {\n      return [\"aaaa\", \"bbbb\", \"cccc\", \"dddd\", \"eeee\", \"ffff\"];\n    },\n    \n    createRandomRows : function(rowCount)\n    {\n      var rowData = [];\n      var strings = this.getStringValues();\n      for (var row = 0; row < rowCount; row++) {\n        rowData.push([ row+1, strings[row % strings.length] ]);\n      }\n      return rowData;\n    },\n    \n    testCustomSortFunction : function()\n    {\n      var stringValues = this.getStringValues();\n      var rowCount = 20;\n      \n      // table\n      var model = new qx.ui.table.model.Simple();\n      model.setColumns([ \"ID\", \"String\" ]);\n      model.setData(this.createRandomRows(rowCount));\n\n      // custom individual ascending descending integer sort function for column 0\n      model.setSortMethods(0, {\n        ascending : function(row1, row2, columnIndex) {\n          var int1 = row1[columnIndex];\n          var int2 = row2[columnIndex];\n          return (int1 > int2) ? 1 : ((int1 == int2) ? 0 : -1);\n        },\n        descending : function(row2, row1, columnIndex) {\n          var int1 = row1[columnIndex];\n          var int2 = row2[columnIndex];\n          return (int1 > int2) ? 1 : ((int1 == int2) ? 0 : -1);\n        } \n      });\n      \n      // custom single string sort function for column 1\n      model.setSortMethods(1, function(row1, row2, columnIndex) {\n        var string1 = row1[columnIndex];\n        var string2 = row2[columnIndex];\n        return string1.localeCompare(string2);\n      });\n      \n      var table = new qx.ui.table.Table(model);\n\n      // test sorting column 1\n      \n      // sort descending\n      model.sortByColumn(1);\n      var data = model.getData();\n      this.assertTrue(data[0][1] == stringValues[stringValues.length-1]);\n      this.assertTrue(data[data.length-1][1] == stringValues[0]);\n\n      // sort ascending\n      model.sortByColumn(1, true);\n      this.assertTrue(data[0][1] == stringValues[0]);\n      this.assertTrue(data[data.length-1][1] == stringValues[stringValues.length-1]);\n\n      \n      // test sorting column 0\n      \n      // sort descending\n      model.sortByColumn(0);\n      this.assertTrue(data[0][0] == rowCount);\n      this.assertTrue(data[data.length-1][0] == 1);\n\n      // sort ascending\n      model.sortByColumn(0, true);\n      this.assertTrue(data[0][0] == 1);\n      this.assertTrue(data[data.length-1][0] == rowCount);\n      \n      table.destroy();\n      model.dispose();\n    },\n    \n    testCustomSortFunctionArgumentsCalleeColumnIndexDeprecated : function()\n    {\n      var stringValues = this.getStringValues();\n      var rowCount = 20;\n      \n      // table\n      var model = new qx.ui.table.model.Simple();\n      model.setColumns([ \"ID\", \"String\" ]);\n      model.setData(this.createRandomRows(rowCount));\n\n      // custom individual ascending descending integer sort function for column 0\n      model.setSortMethods(0, {\n        ascending : function(row1, row2) {\n          var columnIndex = arguments.callee.columnIndex;\n          var int1 = row1[columnIndex];\n          var int2 = row2[columnIndex];\n          return (int1 > int2) ? 1 : ((int1 == int2) ? 0 : -1);\n        },\n        descending : function(row2, row1) {\n          var columnIndex = arguments.callee.columnIndex;\n          var int1 = row1[columnIndex];\n          var int2 = row2[columnIndex];\n          return (int1 > int2) ? 1 : ((int1 == int2) ? 0 : -1);\n        } \n      });\n      \n      // custom single string sort function for column 1\n      model.setSortMethods(1, function(row1, row2) {\n        var columnIndex = arguments.callee.columnIndex;\n        var string1 = row1[columnIndex];\n        var string2 = row2[columnIndex];\n        return string1.localeCompare(string2);\n      });\n      \n      var table = new qx.ui.table.Table(model);\n\n      // test sorting column 1\n      \n      // sort descending\n      model.sortByColumn(1);\n      var data = model.getData();\n      this.assertTrue(data[0][1] == stringValues[stringValues.length-1]);\n      this.assertTrue(data[data.length-1][1] == stringValues[0]);\n\n      // sort ascending\n      model.sortByColumn(1, true);\n      this.assertTrue(data[0][1] == stringValues[0]);\n      this.assertTrue(data[data.length-1][1] == stringValues[stringValues.length-1]);\n\n      \n      // test sorting column 0\n      \n      // sort descending\n      model.sortByColumn(0);\n      this.assertTrue(data[0][0] == rowCount);\n      this.assertTrue(data[data.length-1][0] == 1);\n\n      // sort ascending\n      model.sortByColumn(0, true);\n      this.assertTrue(data[0][0] == 1);\n      this.assertTrue(data[data.length-1][0] == rowCount);\n      \n      table.destroy();\n      model.dispose();\n    }\n\n  }\n});\n"
  ]
}