{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/table/celleditor/AbstractField.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "type",
    "members",
    "setUp",
    "Error",
    "tearDown",
    "flush",
    "_getCellInfo",
    "value",
    "testCreateCellEditor",
    "editor",
    "factory",
    "createCellEditor",
    "assertInstance",
    "core",
    "Widget",
    "assertEquals",
    "getValue",
    "destroy",
    "testCreateCellEditorWithValue",
    "testGetCellEditorValue",
    "setValue",
    "getCellEditorValue",
    "testValidationFunction",
    "called",
    "setValidationFunction",
    "assert",
    "testAutoconvertToNumber",
    "assertNumber",
    "table",
    "celleditor",
    "AbstractField"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.table.celleditor.AbstractField\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n  type : \"abstract\",\n\n\n  members :\n  {\n    setUp : function() {\n      throw new Error(\"Abstract method call!\");\n    },\n\n    tearDown : function() {\n      this.flush();\n    },\n\n\n    _getCellInfo : function(value) {\n      return {value: value};\n    },\n\n\n    testCreateCellEditor : function()\n    {\n      var editor = this.factory.createCellEditor(this._getCellInfo());\n\n      this.assertInstance(editor, qx.ui.core.Widget);\n      this.assertEquals(\"\", editor.getValue());\n\n      editor.destroy();\n    },\n\n\n    testCreateCellEditorWithValue : function()\n    {\n      var editor = this.factory.createCellEditor(this._getCellInfo(\"juhu\"));\n      this.assertEquals(\"juhu\", editor.getValue());\n\n      editor.destroy();\n    },\n\n\n    testGetCellEditorValue : function()\n    {\n      var editor = this.factory.createCellEditor(this._getCellInfo());\n\n      editor.setValue(\"Kinners\");\n      this.assertEquals(\"Kinners\", this.factory.getCellEditorValue(editor));\n\n      editor.destroy();\n    },\n\n\n    testValidationFunction : function()\n    {\n      var called = false;\n\n      this.factory.setValidationFunction(function(value) {\n        called = true;\n        return \"_\" + value + \"_\";\n      });\n\n      var editor = this.factory.createCellEditor(this._getCellInfo());\n\n      editor.setValue(\"juhu\");\n      var value = this.factory.getCellEditorValue(editor);\n      this.assert(called);\n      this.assertEquals(\"_juhu_\", value);\n\n      editor.setValue(\"kinners\");\n      var value = this.factory.getCellEditorValue(editor);\n      this.assert(called);\n      this.assertEquals(\"_kinners_\", value);\n    },\n\n\n    testAutoconvertToNumber : function()\n    {\n      var editor = this.factory.createCellEditor(this._getCellInfo(10.0));\n\n      editor.setValue(\"-12.5\");\n      this.assertEquals(-12.5, this.factory.getCellEditorValue(editor));\n      this.assertNumber(this.factory.getCellEditorValue(editor));\n\n      editor.destroy();\n    }\n  }\n});\n"
  ]
}