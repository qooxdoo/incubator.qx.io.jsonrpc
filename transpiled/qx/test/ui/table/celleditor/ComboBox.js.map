{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/table/celleditor/ComboBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "table",
    "celleditor",
    "AbstractField",
    "members",
    "setUp",
    "factory",
    "ComboBox",
    "tearDown",
    "dispose",
    "_getCellInfo",
    "value",
    "col",
    "getTableColumnModel",
    "getDataCellRenderer",
    "_getContentHtml",
    "cellInfo",
    "testChangeEditorSelection",
    "setListData",
    "editor",
    "createCellEditor",
    "list",
    "getChildControl",
    "assertEquals",
    "getSelection",
    "getLabel",
    "setSelection",
    "getChildren",
    "getCellEditorValue",
    "destroy"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,sCAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,KAAX,CAAiBC,UAAjB,CAA4BC,aADvC;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,KAAK,EAAG,iBAAW;AACjB,aAAKC,OAAL,GAAe,IAAId,EAAE,CAACQ,EAAH,CAAMC,KAAN,CAAYC,UAAZ,CAAuBK,QAA3B,EAAf;AACD,OAHH;AAMEC,MAAAA,QAAQ,EAAG,oBACX;AACE;AACA,aAAKF,OAAL,CAAaG,OAAb;AACD,OAVH;AAaEC,MAAAA,YAAY,EAAG,sBAASC,KAAT,EAAgB;AAC7B,eAAO;AACLA,UAAAA,KAAK,EAAEA,KADF;AAELC,UAAAA,GAAG,EAAE,CAFA;AAGLX,UAAAA,KAAK,EAAE;AACLY,YAAAA,mBAAmB,EAAE,+BAAW;AAC9B,qBAAO;AACLC,gBAAAA,mBAAmB,EAAE,6BAASF,GAAT,EAAc;AACjC,yBAAO;AACLG,oBAAAA,eAAe,EAAG,yBAASC,QAAT,EAAmB;AACnC,6BAAOA,QAAQ,CAACL,KAAhB;AACD;AAHI,mBAAP;AAKD;AAPI,eAAP;AASD;AAXI;AAHF,SAAP;AAiBD,OA/BH;AAkCEM,MAAAA,yBAAyB,EAAG,qCAC5B;AACE,aAAKX,OAAL,CAAaY,WAAb,CAAyB,CAAC,SAAD,EAAY,MAAZ,EAAoB,QAApB,CAAzB;AACA,YAAIC,MAAM,GAAG,KAAKb,OAAL,CAAac,gBAAb,CAA8B,KAAKV,YAAL,CAAkB,MAAlB,CAA9B,CAAb;AAEA,YAAIW,IAAI,GAAGF,MAAM,CAACG,eAAP,CAAuB,MAAvB,CAAX;AACA,aAAKC,YAAL,CAAkB,MAAlB,EAA0BF,IAAI,CAACG,YAAL,GAAoB,CAApB,EAAuBC,QAAvB,EAA1B;AACAJ,QAAAA,IAAI,CAACK,YAAL,CAAkB,CAACL,IAAI,CAACM,WAAL,GAAmB,CAAnB,CAAD,CAAlB;AAEA,aAAKJ,YAAL,CAAkB,QAAlB,EAA4B,KAAKjB,OAAL,CAAasB,kBAAb,CAAgCT,MAAhC,CAA5B;AAEAA,QAAAA,MAAM,CAACU,OAAP;AACD;AA9CH;AAJF,GADA;AAlBArC,EAAAA,EAAE,CAACO,IAAH,CAAQC,EAAR,CAAWC,KAAX,CAAiBC,UAAjB,CAA4BK,QAA5B,CAAqCZ,aAArC,GAAqDA,aAArD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.ui.table.celleditor.ComboBox\",\n{\n  extend : qx.test.ui.table.celleditor.AbstractField,\n\n  members :\n  {\n    setUp : function() {\n      this.factory = new qx.ui.table.celleditor.ComboBox();\n    },\n\n\n    tearDown : function()\n    {\n      this.base(arguments);\n      this.factory.dispose();\n    },\n\n\n    _getCellInfo : function(value) {\n      return {\n        value: value,\n        col: 0,\n        table: {\n          getTableColumnModel: function() {\n            return {\n              getDataCellRenderer: function(col) {\n                return {\n                  _getContentHtml : function(cellInfo) {\n                    return cellInfo.value;\n                  }\n                };\n              }\n            };\n          }\n        }\n      };\n    },\n\n\n    testChangeEditorSelection : function()\n    {\n      this.factory.setListData([\"elefant\", \"affe\", \"banane\"]);\n      var editor = this.factory.createCellEditor(this._getCellInfo(\"affe\"));\n\n      var list = editor.getChildControl(\"list\");\n      this.assertEquals(\"affe\", list.getSelection()[0].getLabel());\n      list.setSelection([list.getChildren()[2]]);\n\n      this.assertEquals(\"banane\", this.factory.getCellEditorValue(editor));\n\n      editor.destroy();\n    }\n  }\n});\n"
  ]
}