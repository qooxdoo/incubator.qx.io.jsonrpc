{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/ui/table/selection/Model.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "members",
    "testRemoveSelectionInterval",
    "selectionModel",
    "table",
    "selection",
    "Model",
    "setSelectionMode",
    "removeSelectionInterval",
    "assertIdentical",
    "_getSelectedRangeArr",
    "length",
    "setSelectionInterval",
    "assertJsonEquals",
    "minIndex",
    "maxIndex"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2018 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Milan Damen (milandamen)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.ui.table.selection.Model\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  members :\n  {\n    testRemoveSelectionInterval : function () {\n      var selectionModel = new qx.ui.table.selection.Model();\n      selectionModel.setSelectionMode(4); // MULTIPLE_INTERVAL_SELECTION\n\n      selectionModel.removeSelectionInterval(0, 0);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n      selectionModel.removeSelectionInterval(0, 0, true);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(0, 1);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 1}], selectionModel._getSelectedRangeArr());\n      selectionModel.removeSelectionInterval(0,1);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(0, 2);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(0, 2, true);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(1, 1);\n      selectionModel.removeSelectionInterval(0, 2);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(1, 1);\n      selectionModel.removeSelectionInterval(0, 2, true);\n      this.assertIdentical(0, selectionModel._getSelectedRangeArr().length);\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(0, 0);\n      this.assertJsonEquals([{minIndex: 1, maxIndex: 1}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(0, 0, true);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 0}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(1, 1);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 0}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(1, 1, true);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 0}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(1, 2);\n      selectionModel.removeSelectionInterval(0, 0);\n      this.assertJsonEquals([{minIndex: 1, maxIndex: 2}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(1, 2);\n      selectionModel.removeSelectionInterval(0, 0, true);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 1}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(2, 2);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 1}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(0, 1);\n      selectionModel.removeSelectionInterval(2, 2, true);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 1}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(1, 3);\n      selectionModel.removeSelectionInterval(1, 1);\n      this.assertJsonEquals([{minIndex: 2, maxIndex: 3}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(1, 3);\n      selectionModel.removeSelectionInterval(1, 1, true);\n      this.assertJsonEquals([{minIndex: 1, maxIndex: 2}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(0, 2);\n      selectionModel.removeSelectionInterval(2, 3);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 1}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(0, 2);\n      selectionModel.removeSelectionInterval(2, 3, true);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 1}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(0, 5);\n      selectionModel.removeSelectionInterval(2, 3);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 1}, {minIndex: 4, maxIndex: 5}], selectionModel._getSelectedRangeArr());\n\n      selectionModel.setSelectionInterval(0, 5);\n      selectionModel.removeSelectionInterval(2, 3, true);\n      this.assertJsonEquals([{minIndex: 0, maxIndex: 3}], selectionModel._getSelectedRangeArr());\n    }\n  }\n});\n"
  ]
}