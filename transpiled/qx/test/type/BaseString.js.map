{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/type/BaseString.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testToString",
    "s",
    "type",
    "BaseString",
    "assertEquals",
    "testValueOf",
    "valueOf",
    "testUpperCase",
    "toUpperCase",
    "testIndexOf",
    "indexOf",
    "testPlusOperator",
    "join",
    "testCharAt",
    "charAt",
    "testcharCodeAt",
    "charCodeAt",
    "testlastIndexOf",
    "lastIndexOf",
    "testLength",
    "length",
    "testLowerCase",
    "toLowerCase",
    "testSubstringOneArgument",
    "substring",
    "testSubstringTwoArguments",
    "testSearchString",
    "search",
    "testSearchRegExp",
    "testReplace",
    "replace",
    "testEmptyString",
    "toString",
    "testExtend",
    "bold",
    "String",
    "test"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;;;AAIAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,yBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,YAAY,EAAG,wBACf;AACE,YAAIC,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,MAAlB,EAA0BH,CAA1B;AACD,OALH;AAQEI,MAAAA,WAAW,EAAG,uBAAW;AACvB,YAAIJ,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,OAAOE,OAAP,EAAlB,EAAoCL,CAAC,CAACK,OAAF,EAApC;AACD,OAXH;AAcEC,MAAAA,aAAa,EAAG,yBAChB;AACE,YAAIN,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,MAAlB,EAA0BH,CAAC,CAACO,WAAF,EAA1B;AACD,OAlBH;AAqBEC,MAAAA,WAAW,EAAG,uBACd;AACE,YAAIR,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqBH,CAAC,CAACS,OAAF,CAAU,GAAV,CAArB;AACD,OAzBH;AA4BEC,MAAAA,gBAAgB,EAAG,4BACnB;AACE,YAAIV,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,UAAlB,EAA8B,CAAC,IAAD,EAAOH,CAAC,GAAG,IAAX,EAAiBW,IAAjB,CAAsB,EAAtB,CAA9B;AACD,OAhCH;AAmCEC,MAAAA,UAAU,EAAG,sBACb;AACE,YAAIZ,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,GAAlB,EAAuBH,CAAC,CAACa,MAAF,CAAS,CAAT,CAAvB;AACD,OAvCH;AA0CEC,MAAAA,cAAc,EAAG,0BACjB;AACE,YAAId,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,GAAlB,EAAuBH,CAAC,CAACe,UAAF,CAAa,CAAb,CAAvB;AACD,OA9CH;AAiDEC,MAAAA,eAAe,EAAG,2BAClB;AACE,YAAIhB,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqBH,CAAC,CAACiB,WAAF,CAAc,GAAd,CAArB;AACD,OArDH;AAwDEC,MAAAA,UAAU,EAAG,sBACb;AACE,YAAIlB,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqBH,CAAC,CAACmB,MAAvB;AACD,OA5DH;AA+DEC,MAAAA,aAAa,EAAG,yBAChB;AACE,YAAIpB,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,MAAlB,EAA0BH,CAAC,CAACqB,WAAF,EAA1B;AACD,OAnEH;AAsEEC,MAAAA,wBAAwB,EAAG,oCAC3B;AACE,YAAItB,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,IAAlB,EAAwBH,CAAC,CAACuB,SAAF,CAAY,CAAZ,CAAxB;AACD,OA1EH;AA6EEC,MAAAA,yBAAyB,EAAG,qCAC5B;AACE,YAAIxB,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,GAAlB,EAAuBH,CAAC,CAACuB,SAAF,CAAY,CAAZ,EAAe,CAAf,CAAvB;AACD,OAjFH;AAoFEE,MAAAA,gBAAgB,EAAG,4BACnB;AACE,YAAIzB,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqBH,CAAC,CAAC0B,MAAF,CAAS,GAAT,CAArB;AACD,OAxFH;AA2FEC,MAAAA,gBAAgB,EAAG,4BACnB;AACE,YAAI3B,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,CAAlB,EAAqBH,CAAC,CAAC0B,MAAF,CAAS,GAAT,CAArB;AACD,OA/FH;AAkGEE,MAAAA,WAAW,EAAG,uBACd;AACE,YAAI5B,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,MAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,MAAlB,EAA0BH,CAAC,CAAC6B,OAAF,CAAU,GAAV,EAAe,GAAf,CAA1B;AACD,OAtGH;AAyGEC,MAAAA,eAAe,EAAG,2BAClB;AACE,YAAI9B,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,EAAR;AACA,aAAKC,YAAL,CAAkB,EAAlB,EAAsBH,CAAC,CAAC+B,QAAF,EAAtB;AAEA,YAAI/B,CAAC,GAAG,IAAIZ,EAAE,CAACa,IAAH,CAAQC,UAAZ,CAAuB,EAAvB,CAAR;AACA,aAAKC,YAAL,CAAkB,EAAlB,EAAsBH,CAAC,CAAC+B,QAAF,EAAtB;AACD,OAhHH;AAmHEC,MAAAA,UAAU,EAAG,sBACb;AACE5C,QAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,WAAhB,EACA;AACEC,UAAAA,MAAM,EAAGN,EAAE,CAACa,IAAH,CAAQC,UADnB;AAGEJ,UAAAA,OAAO,EACP;AACEmC,YAAAA,IAAI,EAAG,gBAAW;AAChB,qBAAO,QAAQ,KAAKF,QAAL,EAAR,GAA0B,MAAjC;AACD;AAHH;AAJF,SADA;AAYA,YAAI/B,CAAC,GAAG,IAAIZ,EAAE,CAAC8C,MAAP,CAAc,MAAd,CAAR;AACA,aAAK/B,YAAL,CAAkB,aAAlB,EAAiCH,CAAC,CAACiC,IAAF,EAAjC;AACD;AAnIH;AAJF,GADA;AAvBA7C,EAAAA,EAAE,CAAC+C,IAAH,CAAQlC,IAAR,CAAaC,UAAb,CAAwBX,aAAxB,GAAwCA,aAAxC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * @ignore(qx.String)\n */\n\nqx.Class.define(\"qx.test.type.BaseString\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    testToString : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(\"Juhu\", s);\n    },\n\n\n    testValueOf : function() {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(\"Juhu\".valueOf(), s.valueOf());\n    },\n\n\n    testUpperCase : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(\"JUHU\", s.toUpperCase());\n    },\n\n\n    testIndexOf : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(1, s.indexOf(\"u\"));\n    },\n\n\n    testPlusOperator : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(\"__Juhu__\", [\"__\", s + \"__\"].join(\"\"));\n    },\n\n\n    testCharAt : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(\"h\", s.charAt(2));\n    },\n\n\n    testcharCodeAt : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(104, s.charCodeAt(2));\n    },\n\n\n    testlastIndexOf : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(3, s.lastIndexOf(\"u\"));\n    },\n\n\n    testLength : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(4, s.length);\n    },\n\n\n    testLowerCase : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(\"juhu\", s.toLowerCase());\n    },\n\n\n    testSubstringOneArgument : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(\"hu\", s.substring(2));\n    },\n\n\n    testSubstringTwoArguments : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(\"u\", s.substring(2, 1));\n    },\n\n\n    testSearchString : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(2, s.search(\"h\"));\n    },\n\n\n    testSearchRegExp : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(0, s.search(/J/));\n    },\n\n\n    testReplace : function()\n    {\n      var s = new qx.type.BaseString(\"Juhu\");\n      this.assertEquals(\"Johu\", s.replace(\"u\", \"o\"));\n    },\n\n\n    testEmptyString : function()\n    {\n      var s = new qx.type.BaseString();\n      this.assertEquals(\"\", s.toString());\n\n      var s = new qx.type.BaseString(\"\");\n      this.assertEquals(\"\", s.toString());\n    },\n\n\n    testExtend : function()\n    {\n      qx.Class.define(\"qx.String\",\n      {\n        extend : qx.type.BaseString,\n\n        members :\n        {\n          bold : function() {\n            return \"<b>\" + this.toString() + \"</b>\";\n          }\n        }\n      });\n\n      var s = new qx.String(\"Juhu\");\n      this.assertEquals(\"<b>Juhu</b>\", s.bold());\n    }\n  }\n});\n"
  ]
}