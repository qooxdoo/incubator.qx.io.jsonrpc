{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/lang/Json.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "JSON",
    "lang",
    "Json",
    "testStringifyArray",
    "text",
    "stringify",
    "pluribus",
    "assertEquals",
    "testFormattingString",
    "str",
    "expected",
    "assertMatch",
    "testFormattingNumber",
    "testReplacer",
    "obj",
    "Date",
    "self",
    "replacer",
    "key",
    "value",
    "getTime",
    "json",
    "testReplacerNestedObject",
    "testReplacerWhiteList",
    "list",
    "name",
    "last",
    "testStringifyObject",
    "test",
    "testStringifyDate",
    "data",
    "start",
    "RegExp",
    "testCustomDateSerializer",
    "date",
    "toJSON",
    "valueOf",
    "result",
    "assert",
    "charCodeAt",
    "testToJson",
    "testToJsonKey",
    "isFirefox",
    "isIe8",
    "RequirementError",
    "juhu",
    "testStringifyRecursiveObject",
    "foo",
    "assertException",
    "testIgnoreNamedPropertiesInArrays",
    "testIgnoreFunction",
    "testSimpleParse",
    "parse",
    "sort",
    "toString",
    "Object",
    "keys",
    "age",
    "assertArrayEquals",
    "testParseNumber",
    "testParseRevive",
    "prop",
    "core",
    "Environment",
    "get"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,KAAK,EAAG,iBACR;AACE;AACA;AACA,aAAKC,IAAL,GAAYZ,EAAE,CAACa,IAAH,CAAQC,IAApB;AACD,OANH;AASEC,MAAAA,kBAAkB,EAAG,8BACrB;AACE,YAAIC,IAAI,GAAG,KAAKJ,IAAL,CAAUK,SAAV,CAAoB,CAAC,GAAD,EAAM;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAN,CAApB,CAAX;AACA,aAAKC,YAAL,CAAkB,2BAAlB,EAA+CH,IAA/C;AACD,OAbH;AAgBEI,MAAAA,oBAAoB,EAAG,gCACvB;AACE,YAAIC,GAAG,GAAG,KAAKT,IAAL,CAAUK,SAAV,CAAoB,CAAC,GAAD,EAAM;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAN,CAApB,EAA+C,IAA/C,EAAqD,IAArD,CAAV;AACA,YAAII,QAAQ,GAAG,kDAAf;AACA,aAAKC,WAAL,CAAiBF,GAAjB,EAAsBC,QAAtB;AACD,OArBH;AAwBEE,MAAAA,oBAAoB,EAAG,gCACvB;AACE,YAAIH,GAAG,GAAG,KAAKT,IAAL,CAAUK,SAAV,CAAoB,CAAC,GAAD,EAAM;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAN,CAApB,EAA+C,IAA/C,EAAqD,CAArD,CAAV;AACA,YAAII,QAAQ,GAAG,iDAAf;AACA,aAAKC,WAAL,CAAiBF,GAAjB,EAAsBC,QAAtB;AACD,OA7BH;AAgCEG,MAAAA,YAAY,EAAG,wBACf;AACE,YAAIC,GAAG,GAAG,CAAC,IAAIC,IAAJ,CAAS,CAAT,CAAD,EAAc,KAAd,CAAV;AAEA,YAAIC,IAAI,GAAG,IAAX;;AACA,YAAIC,QAAQ,GAAG,SAAXA,QAAW,CAASC,GAAT,EAAcC,KAAd,EAAqB;AAClC,iBAAO,KAAKD,GAAL,aAAqBH,IAArB,GAA4B,UAAU,KAAKG,GAAL,EAAUE,OAAV,EAAV,GAAgC,GAA5D,GAAkED,KAAzE;AACD,SAFD;;AAIA,YAAIE,IAAI,GAAG,KAAKrB,IAAL,CAAUK,SAAV,CAAoBS,GAApB,EAAyBG,QAAzB,CAAX;AACA,aAAKV,YAAL,CAAkB,mBAAlB,EAAuCc,IAAvC;AACD,OA3CH;AA6CE;AACA;AACAC,MAAAA,wBAAwB,EAAG,oCAC3B;AACE,YAAIR,GAAG,GAAG;AAAC,kBAAQ;AAAT,SAAV;;AAEA,YAAIG,QAAQ,GAAG,SAAXA,QAAW,CAASC,GAAT,EAAcC,KAAd,EAAqB;AAClC,cAAIA,KAAK,IAAI,OAAb,EAAsB;AACpB,mBAAO,UAAP;AACD;;AACD,iBAAOA,KAAP;AACD,SALD;;AAOA,YAAIE,IAAI,GAAG,KAAKrB,IAAL,CAAUK,SAAV,CAAoBS,GAApB,EAAyBG,QAAzB,CAAX;AACA,aAAKN,WAAL,CAAiBU,IAAjB,EAAuB,UAAvB;AACD,OA5DH;AA+DEE,MAAAA,qBAAqB,EAAG,iCACxB;AACE,YAAIC,IAAI,GAAG,CAAC,MAAD,CAAX;AACA,YAAIpB,IAAI,GAAG,KAAKJ,IAAL,CAAUK,SAAV,CAAoB;AAACoB,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,IAAI,EAAE;AAAtB,SAApB,EAAkDF,IAAlD,CAAX;AAEA,aAAKjB,YAAL,CAAkB,kBAAlB,EAAsCH,IAAtC;AACD,OArEH;AAwEEuB,MAAAA,mBAAmB,EAAG,+BAAW;AAC/B,aAAKpB,YAAL,CAAkB,cAAlB,EAAkC,KAAKP,IAAL,CAAUK,SAAV,CAAoB;AAAEuB,UAAAA,IAAI,EAAG;AAAT,SAApB,CAAlC;AACD,OA1EH;AA6EEC,MAAAA,iBAAiB,EAAG,6BACpB;AACE,YAAIC,IAAI,GAAG;AACTC,UAAAA,KAAK,EAAE,IAAIhB,IAAJ,CAAS,CAAT;AADE,SAAX;AAGA,aAAKJ,WAAL,CACE,KAAKX,IAAL,CAAUK,SAAV,CAAoByB,IAApB,CADF,EAEE,IAAIE,MAAJ,CAAW,8CAAX,CAFF;AAID,OAtFH;AAyFEC,MAAAA,wBAAwB,EAAG,oCAC3B;AACE,YAAIC,IAAI,GAAG,IAAInB,IAAJ,CAAS,CAAT,CAAX;;AACAmB,QAAAA,IAAI,CAACC,MAAL,GAAc,UAASjB,GAAT,EAAc;AAC1B,iBAAO,KAAKkB,OAAL,EAAP;AACD,SAFD;;AAIA,YAAIC,MAAM,GAAG,KAAKrC,IAAL,CAAUK,SAAV,CAAoB6B,IAApB,CAAb,CANF,CAQE;AACA;;AAEA,aAAKI,MAAL,CAAY,IAAIC,UAAJ,MAAoBF,MAAM,CAACE,UAAP,EAAhC;AACD,OAtGH;AAyGEC,MAAAA,UAAU,EAAG,sBACb;AACE,YAAI1B,GAAG,GAAG;AACRqB,UAAAA,MAAM,EAAG,gBAASjB,GAAT,EAAc;AACrB,mBAAO,IAAP;AACD;AAHO,SAAV;AAMA,aAAKX,YAAL,CAAkB,MAAlB,EAA0B,KAAKP,IAAL,CAAUK,SAAV,CAAoBS,GAApB,CAA1B;AACD,OAlHH;AAoHE2B,MAAAA,aAAa,EAAG,yBAChB;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI,KAAKC,SAAL,MAAoB,KAAKC,KAAL,EAAxB,EAAsC;AACpC,gBAAM,IAAIvD,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYgD,gBAAhB,EAAN;AACD;;AAED,YAAI9B,GAAG,GAAG;AACRqB,UAAAA,MAAM,EAAG,gBAASjB,GAAT,EAAc;AACrB,mBAAO,MAAMA,GAAN,GAAY,GAAnB;AACD;AAHO,SAAV;AAMA,YAAIT,GAAG,GAAG,KAAKT,IAAL,CAAUK,SAAV,CAAoB;AAAEwC,UAAAA,IAAI,EAAG/B;AAAT,SAApB,CAAV;AACA,aAAKH,WAAL,CAAiBF,GAAjB,EAAsB,QAAtB;AACD,OA3IH;AA6IEqC,MAAAA,4BAA4B,EAAG,wCAC/B;AACE,YAAIhC,GAAG,GAAG,EAAV;AACAA,QAAAA,GAAG,CAACiC,GAAJ,GAAUjC,GAAV;AAEA,aAAKkC,eAAL,CAAqB,YAAW;AAC9B,cAAI5C,IAAI,GAAG,KAAKJ,IAAL,CAAUK,SAAV,CAAoBS,GAApB,CAAX;AACD,SAFD;AAIAA,QAAAA,GAAG,GAAG,EAAN;AACAA,QAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAT;AAEA,aAAKkC,eAAL,CAAqB,YAAW;AAC9B,cAAI5C,IAAI,GAAG,KAAKJ,IAAL,CAAUK,SAAV,CAAoBS,GAApB,CAAX;AACD,SAFD;AAGD,OA5JH;AA+JEmC,MAAAA,iCAAiC,EAAG,6CACpC;AACE,YAAInB,IAAI,GAAG,CAAC,CAAD,EAAI,KAAJ,CAAX;AACAA,QAAAA,IAAI,CAACe,IAAL,GAAY,SAAZ,CAFF,CAEyB;;AAEvB,aAAKtC,YAAL,CAAkB,WAAlB,EAA+B,KAAKP,IAAL,CAAUK,SAAV,CAAoByB,IAApB,CAA/B;AACD,OArKH;AAwKEoB,MAAAA,kBAAkB,EAAG,8BACrB;AACE,YAAIpB,IAAI,GAAG;AACTe,UAAAA,IAAI,EAAE,SADG;AAETE,UAAAA,GAAG,EAAE,eAAW,CAAE;AAFT,SAAX;AAIA,aAAKxC,YAAL,CAAkB,oBAAlB,EAAwC,KAAKP,IAAL,CAAUK,SAAV,CAAoByB,IAApB,CAAxC;AACD,OA/KH;AAkLEqB,MAAAA,eAAe,EAAG,2BAClB;AACE,YAAIrB,IAAI,GAAG,KAAK9B,IAAL,CAAUoD,KAAV,CAAgB,2CAAhB,CAAX,CADF,CAGE;;AACA,aAAK7C,YAAL,CACE,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB8C,IAAvB,GAA8BC,QAA9B,EADF,EAEEC,MAAM,CAACC,IAAP,CAAY1B,IAAZ,EAAkBuB,IAAlB,GAAyBC,QAAzB,EAFF,EAJF,CASE;;AACA,aAAK/C,YAAL,CAAkB,SAAlB,EAA6BuB,IAAI,CAACe,IAAlC;AACA,aAAKtC,YAAL,CAAkB,EAAlB,EAAsBuB,IAAI,CAAC2B,GAA3B;AACA,aAAKC,iBAAL,CAAuB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAvB,EAAkC5B,IAAI,CAACiB,GAAvC;AACD,OAhMH;AAmMEY,MAAAA,eAAe,EAAG,2BAClB;AACE,aAAKpD,YAAL,CAAkB,IAAlB,EAAwB,KAAKP,IAAL,CAAUoD,KAAV,CAAgB,MAAhB,CAAxB;AACA,aAAK7C,YAAL,CAAkB,IAAlB,EAAwB,KAAKP,IAAL,CAAUoD,KAAV,CAAgB,OAAhB,CAAxB;AACD,OAvMH;AAyMEQ,MAAAA,eAAe,EAAG,2BAClB;AACE,YAAIvC,IAAI,GAAG,mBAAX;AAEA,YAAIP,GAAG,GAAG,KAAKd,IAAL,CAAUoD,KAAV,CAAgB/B,IAAhB,EAAsB,UAASH,GAAT,EAAcC,KAAd,EAAqB;AACnD,cAAIA,KAAK,IAAI,OAAb,EAAsB;AACpB,mBAAO,SAAP;AACD;;AACD,iBAAOA,KAAP;AACD,SALS,CAAV;AAOA,aAAKZ,YAAL,CAAkB,SAAlB,EAA6BO,GAAG,CAAC+C,IAAjC;AACD,OArNH;AAuNElB,MAAAA,KAAK,EAAG,iBACR;AACE,eAAOvD,EAAE,CAAC0E,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,MAA2C,QAA3C,KACC5E,EAAE,CAAC0E,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,gBAAxB,KAA6C,CAA7C,IACA5E,EAAE,CAAC0E,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,sBAAxB,KAAmD,CAFpD,CAAP;AAGD,OA5NH;AA8NEtB,MAAAA,SAAS,EAAG,qBACZ;AACE,eAAOtD,EAAE,CAAC0E,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,MAA2C,OAAlD;AACD;AAjOH;AAJF,GADA;AAlBA5E,EAAAA,EAAE,CAACwC,IAAH,CAAQ3B,IAAR,CAAaC,IAAb,CAAkBX,aAAlB,GAAkCA,aAAlC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.lang.Json\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    setUp : function()\n    {\n      // Test either native (when available) or emulated JSON,\n      // see [BUG #5037]\n      this.JSON = qx.lang.Json;\n    },\n\n\n    testStringifyArray : function()\n    {\n      var text = this.JSON.stringify(['e', {pluribus: 'unum'}]);\n      this.assertEquals('[\"e\",{\"pluribus\":\"unum\"}]', text);\n    },\n\n\n    testFormattingString : function()\n    {\n      var str = this.JSON.stringify(['e', {pluribus: 'unum'}], null, '\\t');\n      var expected = /[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\":\\s?\"unum\"\\n\\t}\\n]/;\n      this.assertMatch(str, expected);\n    },\n\n\n    testFormattingNumber : function()\n    {\n      var str = this.JSON.stringify(['e', {pluribus: 'unum'}], null, 2);\n      var expected = /[\\n  \"e\",\\n  {\\n    \"pluribus\":\\s\"unum\"\\n  }\\n]/;\n      this.assertMatch(str, expected);\n    },\n\n\n    testReplacer : function()\n    {\n      var obj = [new Date(0), \"foo\"];\n\n      var self = this;\n      var replacer = function(key, value) {\n        return this[key] instanceof Date ? 'Date(' + this[key].getTime() + ')' : value;\n      };\n\n      var json = this.JSON.stringify(obj, replacer);\n      this.assertEquals('[\"Date(0)\",\"foo\"]', json);\n    },\n\n    // Uncovers browser bug found in Firefox >=3.5 && < 4, see\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=509184\n    testReplacerNestedObject : function()\n    {\n      var obj = {\"prop\": \"value\"};\n\n      var replacer = function(key, value) {\n        if (value == \"value\") {\n          return \"replaced\";\n        }\n        return value;\n      };\n\n      var json = this.JSON.stringify(obj, replacer);\n      this.assertMatch(json, /replaced/);\n    },\n\n\n    testReplacerWhiteList : function()\n    {\n      var list = [\"name\"];\n      var text = this.JSON.stringify({name: \"Peter\", last: \"Pan\"}, list);\n\n      this.assertEquals('{\"name\":\"Peter\"}', text);\n    },\n\n\n    testStringifyObject : function() {\n      this.assertEquals('{\"test\":123}', this.JSON.stringify({ test : 123 }));\n    },\n\n\n    testStringifyDate : function()\n    {\n      var data = {\n        start: new Date(0)\n      };\n      this.assertMatch(\n        this.JSON.stringify(data),\n        new RegExp('\\{\"start\":\"1970\\-01\\-01T00:00:00\\(\\.0*)?Z\"\\}')\n      );\n    },\n\n\n    testCustomDateSerializer : function()\n    {\n      var date = new Date(0);\n      date.toJSON = function(key) {\n        return this.valueOf();\n      };\n\n      var result = this.JSON.stringify(date);\n\n      // Expected '0' but found '0'! in Opera\n      // this.assertEquals(\"0\", result);\n\n      this.assert(\"0\".charCodeAt() == result.charCodeAt());\n    },\n\n\n    testToJson : function()\n    {\n      var obj = {\n        toJSON : function(key) {\n          return \"##\";\n        }\n      };\n\n      this.assertEquals('\"##\"', this.JSON.stringify(obj));\n    },\n\n    testToJsonKey : function()\n    {\n      // Known to fail in some browsers:\n      //\n      // Firefox: toJSON is passed no parameter, i.e. key is undefined\n      //          undefined + \"\" is \"undefined\" in Firefox\n      //\n      // IE 8:    toJSON is passed the string \"\\u0082\\u0000\\u0000\\u0000\",\n      //          which is the equivalent of \"BREAK PERMITTED HERE\" and two\n      //          \"NUL\".\n      //\n      if (this.isFirefox() || this.isIe8()) {\n        throw new qx.dev.unit.RequirementError();\n      }\n\n      var obj = {\n        toJSON : function(key) {\n          return \"#\" + key + \"#\";\n        }\n      };\n\n      var str = this.JSON.stringify({ juhu : obj });\n      this.assertMatch(str, /#juhu#/);\n    },\n\n    testStringifyRecursiveObject : function()\n    {\n      var obj = {};\n      obj.foo = obj;\n\n      this.assertException(function() {\n        var text = this.JSON.stringify(obj);\n      });\n\n      obj = [];\n      obj[0] = obj;\n\n      this.assertException(function() {\n        var text = this.JSON.stringify(obj);\n      });\n    },\n\n\n    testIgnoreNamedPropertiesInArrays : function()\n    {\n      var data = [1, \"foo\"];\n      data.juhu = \"kinners\"; // must be ignored\n\n      this.assertEquals('[1,\"foo\"]', this.JSON.stringify(data));\n    },\n\n\n    testIgnoreFunction : function()\n    {\n      var data = {\n        juhu: \"kinners\",\n        foo: function() {}\n      };\n      this.assertEquals('{\"juhu\":\"kinners\"}', this.JSON.stringify(data));\n    },\n\n\n    testSimpleParse : function()\n    {\n      var data = this.JSON.parse('{\"juhu\":\"kinners\",\"age\":23,\"foo\":[1,2,3]}');\n\n      // check keys\n      this.assertEquals(\n        [\"juhu\", \"foo\", \"age\"].sort().toString(),\n        Object.keys(data).sort().toString()\n      );\n\n      // check values\n      this.assertEquals(\"kinners\", data.juhu);\n      this.assertEquals(23, data.age);\n      this.assertArrayEquals([1, 2, 3], data.foo);\n    },\n\n\n    testParseNumber : function()\n    {\n      this.assertEquals(1234, this.JSON.parse(\"1234\"));\n      this.assertEquals(1234, this.JSON.parse(\" 1234\"));\n    },\n\n    testParseRevive : function()\n    {\n      var json = '{\"prop\": \"value\"}';\n\n      var obj = this.JSON.parse(json, function(key, value) {\n        if (value == \"value\") {\n          return \"revived\";\n        }\n        return value;\n      });\n\n      this.assertEquals(\"revived\", obj.prop);\n    },\n\n    isIe8 : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") === \"mshtml\" &&\n             (qx.core.Environment.get(\"engine.version\") == 8 ||\n              qx.core.Environment.get(\"browser.documentmode\") == 8);\n    },\n\n    isFirefox : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") === \"gecko\";\n    }\n  }\n});\n"
  ]
}