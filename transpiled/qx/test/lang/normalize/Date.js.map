{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/lang/normalize/Date.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "sixHours",
    "sixHoursThirty",
    "february",
    "Date",
    "getFullYear",
    "localOffset",
    "getTimezoneOffset",
    "assertIdentical",
    "parse",
    "UTC",
    "assertTrue",
    "isNaN",
    "test",
    "lang",
    "normalize"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2016 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * George Nikolaidis (gnikolaidis)\n     * Peter Schneider (ps)\n\n************************************************************************ */\n\n/**\n * @require(qx.lang.normalize.Date)\n */\nqx.Class.define(\"qx.test.lang.normalize.Date\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    \"test parse()\" : function ()\n    {\n      var sixHours = 6 * 60 * 60 * 1000;\n      var sixHoursThirty = sixHours + 30 * 60 * 1000;\n\n      var february = new Date(new Date().getFullYear(), 1, 1);\n      var localOffset = february.getTimezoneOffset() * 6e4; // [milliseconds]\n      // qx.log.Logger.info(\"localOffset:\" + localOffset);\n\n      // Date part\n\n      this.assertIdentical(Date.parse(\"1970-01-01\"), Date.UTC(1970, 0, 1, 0, 0, 0, 0), \"Unix epoch\");\n\n      this.assertIdentical(Date.parse(\"2001\"), Date.UTC(2001, 0, 1, 0, 0, 0, 0), \"2001\");\n      this.assertIdentical(Date.parse(\"2001-02\"), Date.UTC(2001, 1, 1, 0, 0, 0, 0), \"2001-02\");\n      this.assertIdentical(Date.parse(\"2001-02-03\"), Date.UTC(2001, 1, 3, 0, 0, 0, 0), \"2001-02-03\");\n\n      this.assertIdentical(Date.parse(\"-002001\"), Date.UTC(-2001, 0, 1, 0, 0, 0, 0), \"-002001\");\n      this.assertIdentical(Date.parse(\"-002001-02\"), Date.UTC(-2001, 1, 1, 0, 0, 0, 0), \"-002001-02\");\n      this.assertIdentical(Date.parse(\"-002001-02-03\"), Date.UTC(-2001, 1, 3, 0, 0, 0, 0), \"-002001-02-03\");\n\n      this.assertIdentical(Date.parse(\"+010000-02\"), Date.UTC(10000, 1, 1, 0, 0, 0, 0), \"+010000-02\");\n      this.assertIdentical(Date.parse(\"+010000-02-03\"), Date.UTC(10000, 1, 3, 0, 0, 0, 0), \"+010000-02-03\");\n      this.assertIdentical(Date.parse(\"-010000-02\"), Date.UTC(-10000, 1, 1, 0, 0, 0, 0), \"-010000-02\");\n      this.assertIdentical(Date.parse(\"-010000-02-03\"), Date.UTC(-10000, 1, 3, 0, 0, 0, 0), \"-010000-02-03\");\n\n      this.assertTrue(isNaN(Date.parse(\"asdf\")), \"invalid YYYY (non-digits)\");\n      this.assertTrue(isNaN(Date.parse(\"1970-as-df\")), \"invalid YYYY-MM-DD (non-digits)\");\n      this.assertTrue(isNaN(Date.parse(\"19700101\")), \"invalid YYYY-MM-DD (missing hyphens)\");\n\n      // Time part\n\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05\"), Date.UTC(2001, 1, 3, 4, 5, 0, 0) + localOffset, \"2001-02-03T04:05\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06\"), Date.UTC(2001, 1, 3, 4, 5, 6, 0) + localOffset, \"2001-02-03T04:05:06\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06.007\"), Date.UTC(2001, 1, 3, 4, 5, 6, 7) + localOffset, \"2001-02-03T04:05:06.007\");\n\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05Z\"), Date.UTC(2001, 1, 3, 4, 5, 0, 0), \"2001-02-03T04:05Z\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06Z\"), Date.UTC(2001, 1, 3, 4, 5, 6, 0), \"2001-02-03T04:05:06Z\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06.007Z\"), Date.UTC(2001, 1, 3, 4, 5, 6, 7), \"2001-02-03T04:05:06.007Z\");\n\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05-00:00\"), Date.UTC(2001, 1, 3, 4, 5, 0, 0), \"2001-02-03T04:05-00:00\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06-00:00\"), Date.UTC(2001, 1, 3, 4, 5, 6, 0), \"2001-02-03T04:05:06-00:00\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06.007-00:00\"), Date.UTC(2001, 1, 3, 4, 5, 6, 7), \"2001-02-03T04:05:06.007-00:00\");\n\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05+00:00\"), Date.UTC(2001, 1, 3, 4, 5, 0, 0), \"2001-02-03T04:05+00:00\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06+00:00\"), Date.UTC(2001, 1, 3, 4, 5, 6, 0), \"2001-02-03T04:05:06+00:00\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06.007+00:00\"), Date.UTC(2001, 1, 3, 4, 5, 6, 7), \"2001-02-03T04:05:06.007+00:00\");\n\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05-06:30\"), Date.UTC(2001, 1, 3, 4, 5, 0, 0) + sixHoursThirty, \"2001-02-03T04:05-06:30\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06-06:30\"), Date.UTC(2001, 1, 3, 4, 5, 6, 0) + sixHoursThirty, \"2001-02-03T04:05:06-06:30\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06.007-06:30\"), Date.UTC(2001, 1, 3, 4, 5, 6, 7) + sixHoursThirty, \"2001-02-03T04:05:06.007-06:30\");\n\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05+06:30\"), Date.UTC(2001, 1, 3, 4, 5, 0, 0) - sixHoursThirty, \"2001-02-03T04:05+06:30\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06+06:30\"), Date.UTC(2001, 1, 3, 4, 5, 6, 0) - sixHoursThirty, \"2001-02-03T04:05:06+06:30\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06.007+06:30\"), Date.UTC(2001, 1, 3, 4, 5, 6, 7) - sixHoursThirty, \"2001-02-03T04:05:06.007+06:30\");\n\n      this.assertIdentical(Date.parse(\"2001T04:05:06.007\"), Date.UTC(2001, 0, 1, 4, 5, 6, 7) + localOffset, \"2001T04:05:06.007\");\n      this.assertIdentical(Date.parse(\"2001-02T04:05:06.007\"), Date.UTC(2001, 1, 1, 4, 5, 6, 7) + localOffset, \"2001-02T04:05:06.007\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06.007\"), Date.UTC(2001, 1, 3, 4, 5, 6, 7) + localOffset, \"2001-02-03T04:05:06.007\");\n      this.assertIdentical(Date.parse(\"2001-02-03T04:05:06.007-06:30\"), Date.UTC(2001, 1, 3, 4, 5, 6, 7) + sixHoursThirty, \"2001-02-03T04:05:06.007-06:30\");\n\n      this.assertIdentical(Date.parse(\"-010000T04:05\"), Date.UTC(-10000, 0, 1, 4, 5, 0, 0) + localOffset, \"-010000T04:05\");\n      this.assertIdentical(Date.parse(\"-010000-02T04:05\"), Date.UTC(-10000, 1, 1, 4, 5, 0, 0) + localOffset, \"-010000-02T04:05\");\n      this.assertIdentical(Date.parse(\"-010000-02-03T04:05\"), Date.UTC(-10000, 1, 3, 4, 5, 0, 0) + localOffset, \"-010000-02-03T04:05\");\n\n      this.assertTrue(isNaN(Date.parse(\"1970-01-01T00:00:00,000\")), \"invalid date-time (comma instead of dot)\");\n      this.assertTrue(isNaN(Date.parse(\"1970-01-01T0000\")), \"invalid date-time (missing colon in time part)\");\n      this.assertTrue(isNaN(Date.parse(\"1970-01-01T00:00.000\")), \"invalid date-time (msec with missing seconds)\");\n    }\n  }\n});\n"
  ]
}