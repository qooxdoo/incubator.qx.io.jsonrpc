{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/lang/normalize/Array.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "members",
    "testShims",
    "testArray",
    "index",
    "assertTrue",
    "testIndexOf",
    "obj",
    "arr",
    "assertEquals",
    "indexOf",
    "testLastIndexOf",
    "lastIndexOf",
    "testForEach",
    "values",
    "indexes",
    "forEach",
    "element",
    "array",
    "push",
    "assertArrayEquals",
    "testFilter",
    "odd",
    "filter",
    "testMap",
    "result",
    "map",
    "expected",
    "testSome",
    "some",
    "assertFalse",
    "testFind",
    "find",
    "assertUndefined",
    "testFindIndex",
    "findIndex",
    "testEvery",
    "every",
    "testReduce",
    "reduce",
    "spy",
    "assertCalledWith",
    "a",
    "b",
    "concat",
    "testReduceRight",
    "reduceRight",
    "testIncludes",
    "includes",
    "NaN",
    "test",
    "lang",
    "normalize",
    "Array"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * @require(qx.lang.normalize.Array)\n */\nqx.Class.define(\"qx.test.lang.normalize.Array\",\n{\n  extend : qx.dev.unit.TestCase,\n  include : [qx.dev.unit.MMock],\n\n\n  members :\n  {\n    testShims: function() {\n      var testArray = [\"entry1\", \"entry2\"];\n      for (var index in testArray) {\n        this.assertTrue(index == 0 || index == 1);\n      }\n    },\n    \n    testIndexOf : function()\n    {\n      var obj = {};\n      var arr = [1, obj, \"str\", 1];\n\n      this.assertEquals(0, arr.indexOf(1));\n      this.assertEquals(1, arr.indexOf(obj));\n      this.assertEquals(2, arr.indexOf(\"str\"));\n      this.assertEquals(-1, arr.indexOf(0));\n    },\n\n    testLastIndexOf : function() {\n      var obj = {};\n      var arr = [1, obj, \"str\", 1];\n\n      this.assertEquals(3, arr.lastIndexOf(1));\n      this.assertEquals(1, arr.lastIndexOf(obj));\n      this.assertEquals(2, arr.lastIndexOf(\"str\"));\n      this.assertEquals(-1, arr.lastIndexOf(0));\n    },\n\n    testForEach : function() {\n      var obj = {};\n      var arr = [1, obj, \"str\", 1];\n      arr[10] = 12;\n\n      var values = [];\n      var indexes = [];\n      arr.forEach(function(element, index, array) {\n        values[index] = element;\n        indexes.push(index);\n        this.assertEquals(arr, array);\n      }, this);\n\n      this.assertArrayEquals(arr, values);\n      this.assertArrayEquals([0, 1, 2, 3, 10], indexes);\n    },\n\n    testFilter : function() {\n      var arr = [1, 2, 3, 4];\n      arr[10] = 11;\n\n      var values = [];\n      var indexes = [];\n      var odd = arr.filter(function(element, index, array) {\n        values[index] = element;\n        indexes.push(index);\n        this.assertEquals(arr, array);\n\n        return index % 2 == 1;\n      }, this);\n\n      this.assertArrayEquals(arr, values);\n      this.assertArrayEquals([0, 1, 2, 3, 10], indexes);\n      this.assertArrayEquals([2, 4], odd);\n    },\n\n    testMap : function() {\n      var arr = [1, 2, 3, 4];\n      arr[10] = 11;\n\n      var values = [];\n      var indexes = [];\n      var result = arr.map(function(element, index, array) {\n        values[index] = element;\n        indexes.push(index);\n        this.assertEquals(arr, array);\n\n        return element + 1;\n      }, this);\n\n      var expected = [2, 3, 4, 5];\n      expected[10] = 12;\n\n      this.assertArrayEquals(expected, result);\n      this.assertArrayEquals(arr, values);\n      this.assertArrayEquals([0, 1, 2, 3, 10], indexes);\n    },\n\n    testSome : function() {\n      var arr = [1, 2, 3, 4];\n      arr[10] = 11;\n\n      var values = [];\n      var indexes = [];\n      var result = arr.some(function(element, index, array) {\n        values[index] = element;\n        indexes.push(index);\n        this.assertEquals(arr, array);\n      }, this);\n\n      this.assertFalse(result);\n      this.assertArrayEquals(arr, values);\n      this.assertArrayEquals([0, 1, 2, 3, 10], indexes);\n\n      this.assertTrue(arr.some(function(element) {\n        return element == 3;\n      }));\n\n      this.assertFalse(arr.some(function(element, index) {\n        return index == 6;\n      }));\n    },\n\n    testFind : function() {\n      var arr = [1, 2, 3, 4];\n      arr[10] = 11;\n\n      var values = [];\n      var indexes = [];\n      var result = arr.find(function(element, index, array) {\n        values[index] = element;\n        indexes.push(index);\n        this.assertEquals(arr, array);\n      }, this);\n\n      this.assertUndefined(result);\n      this.assertArrayEquals(arr, values);\n      this.assertArrayEquals([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], indexes);\n\n      this.assertEquals(arr.find(function(element) {\n        return element == 3;\n      }), 3);\n\n      this.assertUndefined(arr.find(function(element, index) {\n        return index == 6;\n      }));\n    },\n\n    testFindIndex : function() {\n      var arr = [1, 2, 3, 4];\n      arr[10] = 11;\n\n      var values = [];\n      var indexes = [];\n      var result = arr.findIndex(function(element, index, array) {\n        values[index] = element;\n        indexes.push(index);\n        this.assertEquals(arr, array);\n      }, this);\n\n      this.assertEquals(result, -1);\n      this.assertArrayEquals(arr, values);\n      this.assertArrayEquals([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], indexes);\n\n      this.assertEquals(arr.findIndex(function(element) {\n        return element == 3;\n      }), 2);\n\n      this.assertEquals(arr.findIndex(function(element, index) {\n        return element == 6;\n      }), -1);\n    },\n\n    testEvery : function() {\n      var arr = [1, 2, 3, 4];\n      arr[10] = 11;\n\n      var values = [];\n      var indexes = [];\n      var result = arr.every(function(element, index, array) {\n        values[index] = element;\n        indexes.push(index);\n        this.assertEquals(arr, array);\n        return true;\n      }, this);\n\n      this.assertTrue(result);\n      this.assertArrayEquals(arr, values);\n      this.assertArrayEquals([0, 1, 2, 3, 10], indexes);\n\n      this.assertFalse(arr.every(function(element) {\n        return element == 3;\n      }));\n\n      this.assertTrue(arr.every(function(element, index) {\n        return element == index + 1;\n      }));\n    },\n\n    testReduce : function() {\n      this.assertEquals(10, [].reduce(function() {}, 10));\n      var spy = this.spy();\n      [1].reduce(spy, 10);\n      this.assertCalledWith(spy, 10, 1, 0, [1]);\n      this.assertEquals(6, [1,2,3].reduce(function(a, b) {return a + b;}, 0));\n      this.assertArrayEquals([0,1,2,3,4], [[1,2], [3,4]].reduce(\n        function(a, b) {return a.concat(b);}, [0]\n      ));\n    },\n\n    testReduceRight : function() {\n      this.assertEquals(10, [].reduceRight(function() {}, 10));\n      var spy = this.spy();\n      [1].reduceRight(spy, 10);\n      this.assertCalledWith(spy, 10, 1, 0, [1]);\n      this.assertEquals(6, [1,2,3].reduceRight(function(a, b) {return a + b;}, 0));\n      this.assertArrayEquals([0, 3,4,1,2], [[1,2], [3,4]].reduceRight(\n        function(a, b) {return a.concat(b);}, [0]\n      ));\n    },\n\n    testIncludes : function() {\n      var arr = ['one', 'two', 'three'];\n      this.assertTrue(arr.includes(\"one\"), \"includes does not work!\");\n      this.assertTrue(arr.includes(\"two\"), \"includes does not work!\");\n      this.assertTrue(arr.includes(\"three\"), \"includes does not work!\");\n      this.assertFalse(arr.includes(\"four\"), \"includes does not work!\");\n\n      arr = [NaN];\n      this.assertTrue(arr.includes(NaN), \"includes does not work!\");\n\n      arr = [];\n      this.assertFalse(arr.includes(\"one\"), \"includes does not work!\");\n    }\n  }\n});\n"
  ]
}