{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/event/GlobalError.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MRequirements",
    "members",
    "hasGlobalErrorHandling",
    "core",
    "Environment",
    "get",
    "hasNoGlobalErrorHandling",
    "setUp",
    "errorHandler",
    "event",
    "GlobalError",
    "called",
    "calledParams",
    "setErrorHandler",
    "onError",
    "tearDown",
    "window",
    "onerror",
    "ex",
    "assertEquals",
    "arguments",
    "length",
    "push",
    "testObserveMethod",
    "require",
    "fail",
    "Error",
    "wrappedFail",
    "observeMethod",
    "assertFalse",
    "assertTrue",
    "testDontWrapIfSettingIsOff",
    "fcn",
    "wrapped",
    "assertIdentical",
    "testWrappedParameterAndReturnValue",
    "a",
    "b",
    "c",
    "args",
    "assertJsonEquals",
    "testObserveMethodButNoHandler",
    "assertException",
    "testHandlerContext",
    "self",
    "handler",
    "testHandleError",
    "error",
    "handleError",
    "testOnWindowError",
    "wasHandled",
    "resume",
    "assertInstance",
    "WindowError",
    "assertMatch",
    "toString",
    "assertString",
    "getUri",
    "assertInteger",
    "getLineNumber",
    "setTimeout",
    "warn",
    "wait",
    "testOnWindowErrorWrapped",
    "wasNativeHandled",
    "originalMsg",
    "originalUri",
    "originalLineNumber",
    "msg",
    "uri",
    "lineNumber",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.event.GlobalError\",\n{\n  extend : qx.dev.unit.TestCase,\n  include : qx.dev.unit.MRequirements,\n\n\n  members :\n  {\n    hasGlobalErrorHandling : function() {\n      return !!qx.core.Environment.get(\"qx.globalErrorHandling\");\n    },\n\n\n    hasNoGlobalErrorHandling : function() {\n      return !this.hasGlobalErrorHandling();\n    },\n\n\n    setUp : function()\n    {\n      this.errorHandler = qx.event.GlobalError;\n\n      this.called = false;\n      this.calledParams = [];\n      this.errorHandler.setErrorHandler(this.onError, this);\n    },\n\n\n    tearDown : function ()\n    {\n      this.errorHandler.setErrorHandler(null);\n      if (window.onerror) {\n        window.onerror = null;\n      }\n    },\n\n\n    onError : function(ex)\n    {\n      this.assertEquals(1, arguments.length);\n      this.called = true;\n      this.calledParams.push(ex);\n    },\n\n\n    testObserveMethod : function()\n    {\n      this.require([\"GlobalErrorHandling\"]);\n\n      var fail = function() {\n        throw new Error(\"fail\");\n      };\n\n      var wrappedFail = this.errorHandler.observeMethod(fail);\n      this.assertFalse(this.called);\n      wrappedFail();\n      this.assertTrue(this.called);\n    },\n\n\n    testDontWrapIfSettingIsOff : function()\n    {\n      this.require([\"NoGlobalErrorHandling\"]);\n\n      var fcn = function() {};\n      var wrapped = this.errorHandler.observeMethod(fcn);\n\n      this.assertIdentical(fcn, wrapped);\n    },\n\n\n    testWrappedParameterAndReturnValue : function()\n    {\n      this.require([\"GlobalErrorHandling\"]);\n\n      var fcn = function(a,b,c) {\n        var args = [a, b, c];\n        return args;\n      };\n\n      var wrapped = this.errorHandler.observeMethod(fcn);\n      this.assertJsonEquals(\n        fcn(1, \"2\", true),\n        wrapped(1, \"2\", true)\n      );\n    },\n\n\n    testObserveMethodButNoHandler : function()\n    {\n      this.require([\"GlobalErrorHandling\"]);\n\n      var fail = function() {\n        throw new Error(\"fail\");\n      };\n\n      var wrappedFail = this.errorHandler.observeMethod(fail);\n\n      this.errorHandler.setErrorHandler(null, null);\n      this.assertException(wrappedFail);\n\n      this.errorHandler.setErrorHandler(this.onError, this);\n      wrappedFail();\n    },\n\n\n    testHandlerContext : function()\n    {\n      this.require([\"GlobalErrorHandling\"]);\n\n      var fail = function() {\n        throw new Error(\"fail\");\n      };\n\n      var self = null;\n      var handler = function(ex) {\n        self = this;\n      };\n\n      this.errorHandler.setErrorHandler(handler, this);\n      var wrappedFail = this.errorHandler.observeMethod(fail);\n\n      wrappedFail();\n      this.assertEquals(this, self);\n    },\n\n\n    testHandleError : function()\n    {\n      this.require([\"GlobalErrorHandling\"]);\n\n      var error = new Error(\"New Error\");\n      this.errorHandler.handleError(error);\n\n      this.assertTrue(this.called);\n      this.assertEquals(error, this.calledParams[0]);\n    },\n\n\n    testOnWindowError : function()\n    {\n      this.require([\"GlobalErrorHandling\"]);\n\n      // reset the handler\n      this.errorHandler.setErrorHandler(null);\n\n      var wasHandled = false;\n      var handler = function(ex) { this.resume(function()\n      {\n        wasHandled = true;\n        this.assertInstance(ex, qx.core.WindowError);\n        this.assertMatch(ex.toString(), \"Doofer Fehler\");\n\n        this.assertString(ex.getUri());\n        this.assertInteger(ex.getLineNumber());\n\n        // this.debug(ex.toString() + \" at \" + ex.getUri() + \":\" + ex.getLineNumber());\n      }, this); };\n\n      this.errorHandler.setErrorHandler(handler, this);\n\n      // callback is NOT wrapped!\n      window.setTimeout(function() {\n        throw new Error(\"Doofer Fehler\");\n      }, 0);\n\n      // Opera and Webkit do not support window.onerror\n      // make sure the test fails once they support it\n      var self = this;\n      window.setTimeout(function()\n      {\n        if (wasHandled) {\n          return;\n        }\n\n        self.resume(function()\n        {\n          if (\n            qx.core.Environment.get(\"engine.name\") == \"opera\" ||\n            qx.core.Environment.get(\"engine.name\") == \"webkit\"\n          ) {\n            this.warn(\"window.onerror is not supported by Opera and Webkit\");\n          } else {\n            this.fail(\"window.onerror should be supported! Note: this test fails in IE if the debugger is active!\");\n          }\n        }, self);\n      }, 100);\n\n      this.wait(500);\n    },\n\n\n    testOnWindowErrorWrapped : function()\n    {\n      this.require([\"GlobalErrorHandling\"]);\n\n      // reset error handler on startup\n      this.errorHandler.setErrorHandler(null);\n\n      var wasHandled = false;\n      var wasNativeHandled = false;\n\n      var self = this;\n      var originalMsg = null;\n      var originalUri = null;\n      var originalLineNumber = null;\n      // append a native onerror method\n      window.onerror = function(msg, uri, lineNumber)\n      {\n        wasNativeHandled = true;\n\n        self.assertMatch(msg, \"Doofer Fehler\");\n        self.assertString(uri);\n        self.assertInteger(lineNumber);\n\n        originalMsg = msg;\n        originalUri = uri;\n        originalLineNumber = lineNumber;\n      };\n\n      var handler = function(ex) { this.resume(function()\n      {\n        wasHandled = true;\n        this.assertTrue(wasNativeHandled, \"native handler not called.\");\n        this.assertInstance(ex, qx.core.WindowError);\n\n        this.assertEquals(originalMsg, ex.toString());\n        this.assertEquals(originalUri, ex.getUri());\n        this.assertEquals(originalLineNumber, ex.getLineNumber());\n\n        // this.debug(ex.toString() + \" at \" + ex.getUri() + \":\" + ex.getLineNumber());\n      }, this); };\n\n      this.errorHandler.setErrorHandler(handler, this);\n\n      // callback is NOT wrapped!\n      window.setTimeout(function() {\n        throw new Error(\"Doofer Fehler\");\n      }, 0);\n\n      // Opera and Webkit do not support window.onerror\n      // make sure the test fails once they support it\n      var self = this;\n      window.setTimeout(function()\n      {\n        if (wasHandled) {\n          return;\n        }\n\n        self.resume(function()\n        {\n          if (\n            qx.core.Environment.get(\"engine.name\") == \"opera\" ||\n            qx.core.Environment.get(\"engine.name\") == \"webkit\"\n          ) {\n            this.warn(\"window.onerror is not supported by Opera and Webkit\");\n          } else {\n            this.fail(\"window.onerror should be supported! Note: this test fails in IE if the debugger is active!\");\n          }\n        }, self);\n      }, 100);\n\n      this.wait(500);\n    }\n  }\n});"
  ]
}