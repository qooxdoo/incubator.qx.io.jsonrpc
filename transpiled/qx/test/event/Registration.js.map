{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/event/Registration.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "events",
    "members",
    "testAddRemoveListener",
    "target",
    "type",
    "capture",
    "Reg",
    "event",
    "Registration",
    "mgr",
    "getManager",
    "handler",
    "findHandler",
    "assertInstance",
    "test",
    "MockHandler",
    "fired",
    "listener1",
    "e",
    "listener2",
    "calls",
    "addListener",
    "assertEquals",
    "length",
    "assertArrayEquals",
    "fireEvent",
    "Event",
    "removeListener",
    "testAddRemoveListenerById",
    "id1",
    "assertNotNull",
    "id2",
    "removeListenerById",
    "core",
    "Object",
    "fireBar",
    "fireDataEvent",
    "f1",
    "Foo",
    "f2",
    "called",
    "toHashCode",
    "callback",
    "addListenerOnce"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * @ignore(Foo)\n */\nqx.Class.define(\"qx.test.event.Registration\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  events :\n  {\n    \"$test\" : \"qx.event.type.Event\"\n  },\n\n  members :\n  {\n    testAddRemoveListener : function()\n    {\n      var target = this;\n      var type = \"$test\";\n      var capture = false;\n\n      var Reg = qx.event.Registration;\n      var mgr = Reg.getManager(target);\n\n      var handler = mgr.findHandler(target, type);\n      this.assertInstance(handler, qx.test.event.MockHandler);\n\n      var fired = [false, false];\n      var listener1 = function(e) { fired[0] = true; };\n      var listener2 = function(e) { fired[1] = true; };\n\n\n      // first add with this type/target\n      handler.calls = [];\n\n      Reg.addListener(target, type, listener1, this, capture);\n\n      this.assertEquals(1, handler.calls.length);\n      this.assertArrayEquals([\"registerEvent\", target, type, capture], handler.calls[0]);\n\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([true, false], fired);\n\n\n      // second add with this type/target\n      handler.calls = [];\n      fired = [false, false];\n\n      Reg.addListener(target, type, listener2, this, capture);\n\n      this.assertEquals(0, handler.calls.length);\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([true, true], fired);\n\n\n      // remove first handler\n      handler.calls = [];\n      fired = [false, false];\n\n      Reg.removeListener(target, type, listener1, this, capture);\n\n      this.assertEquals(0, handler.calls.length);\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([false, true], fired);\n\n\n      // remove second handler\n      handler.calls = [];\n      fired = [false, false];\n\n      Reg.removeListener(target, type, listener2, this, capture);\n\n      this.assertEquals(1, handler.calls.length);\n      this.assertArrayEquals([\"unregisterEvent\", target, type, capture], handler.calls[0]);\n\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([false, false], fired);\n    },\n\n\n    testAddRemoveListenerById : function()\n    {\n      var target = this;\n      var type = \"$test\";\n      var capture = false;\n\n      var Reg = qx.event.Registration;\n      var mgr = Reg.getManager(target);\n\n      var handler = mgr.findHandler(target, type);\n\n      var fired = [false, false];\n      var listener1 = function(e) { fired[0] = true; };\n      var listener2 = function(e) { fired[1] = true; };\n\n      var id1 = Reg.addListener(target, type, listener1, this, capture);\n      this.assertNotNull(id1);\n\n      var id2 = Reg.addListener(target, type, listener2, this, capture);\n      this.assertNotNull(id2);\n\n      // remove first handler\n      handler.calls = [];\n      fired = [false, false];\n\n      Reg.removeListenerById(target, id1);\n      this.assertEquals(0, handler.calls.length);\n\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([false, true], fired);\n\n\n      // remove second handler\n      handler.calls = [];\n      fired = [false, false];\n\n      Reg.removeListenerById(target, id2);\n\n      this.assertEquals(1, handler.calls.length);\n      this.assertArrayEquals([\"unregisterEvent\", target, type, capture], handler.calls[0]);\n\n      Reg.fireEvent(target, type, qx.event.type.Event, []);\n      this.assertArrayEquals([false, false], fired);\n    },\n\n\n    /**\n     * @ignore(Foo)\n     */\n    \"test addListenerOnce: same callback\": function() {\n      qx.Class.define(\"Foo\", {\n        extend: qx.core.Object,\n        events: {\n          \"bar\": \"qx.event.type.Event\"\n        },\n        members: {\n          fireBar: function() {\n            this.fireDataEvent(\"bar\");\n          }\n        }\n      });\n\n      var f1 = new Foo();\n      var f2 = new Foo();\n\n      var called = {};\n      called[f1.toHashCode()] = 0;\n      called[f2.toHashCode()] = 0;\n\n      var callback = function(e) {\n        called[this.toHashCode()]++;\n      };\n\n      f1.addListenerOnce(\"bar\", callback, f1);\n      f2.addListenerOnce(\"bar\", callback, f2);\n\n      f1.fireBar();\n      f2.fireBar();\n      f1.fireBar();\n      f2.fireBar();\n\n      this.assertEquals(1, called[f1.toHashCode()]);\n      this.assertEquals(1, called[f2.toHashCode()]);\n    }\n  }\n});\n"
  ]
}