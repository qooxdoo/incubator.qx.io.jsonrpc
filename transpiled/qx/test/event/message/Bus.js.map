{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/event/message/Bus.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "__subscriberOne",
    "__subscriberTwo",
    "__subscriberThree",
    "setUp",
    "core",
    "Object",
    "tearDown",
    "dispose",
    "subscribers",
    "event",
    "message",
    "Bus",
    "getSubscriptions",
    "key",
    "assertJsonEquals",
    "testDispatch",
    "bus",
    "calls",
    "that",
    "subscribe",
    "assertEquals",
    "getName",
    "getData",
    "assertFalse",
    "msg",
    "Message",
    "assertTrue",
    "dispatch",
    "testDispatchWithDisposed",
    "testWildcard",
    "flag1",
    "flag2",
    "handler1",
    "handler2",
    "messageBus",
    "getInstance",
    "msg1",
    "msg2",
    "testUnsubscribe",
    "flag",
    "handler",
    "anotherHandler",
    "unsubscribe",
    "testUnsubscribeAll",
    "testWrongDispatch",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.event.message.Bus\",\n{\n  extend : qx.dev.unit.TestCase,\n\n\n  members :\n  {\n    __subscriberOne : null,\n    __subscriberTwo : null,\n    __subscriberThree : null,\n\n    setUp : function() {\n      this.__subscriberOne = new qx.core.Object();\n      this.__subscriberTwo = new qx.core.Object();\n      this.__subscriberThree = new qx.core.Object();\n    },\n\n    tearDown : function()\n    {\n      this.__subscriberOne.dispose();\n      this.__subscriberTwo.dispose();\n      this.__subscriberThree.dispose();\n\n      var subscribers = qx.event.message.Bus.getSubscriptions();\n      for (var key in subscribers) {\n        delete subscribers[key];\n      }\n\n      this.assertJsonEquals({}, qx.event.message.Bus.getSubscriptions());\n    },\n\n\n    testDispatch : function()\n    {\n      var bus = qx.event.message.Bus;\n      var calls = 0;\n\n      var that = this;\n      bus.subscribe(\"*\", function(message) {\n        calls++;\n        that.assertEquals(\"MyMessage\", message.getName());\n        that.assertEquals(10, message.getData());\n      }, this.__subscriberOne);\n\n      bus.subscribe(\"MyMessage2\", function(message) {\n        that.assertFalse(true, \"Wrong subscriber called!\");\n      }, this.__subscriberTwo);\n\n      bus.subscribe(\"MyMessage\", function(message) {\n        calls++;\n        that.assertEquals(\"MyMessage\", message.getName());\n        that.assertEquals(10, message.getData());\n      }, this.__subscriberThree);\n\n      var msg = new qx.event.message.Message(\"MyMessage\", 10);\n      this.assertTrue(bus.dispatch(msg), \"Message not dispatched\");\n      this.assertEquals(2, calls, \"Wrong callbacks!\");\n      msg.dispose();\n    },\n\n    testDispatchWithDisposed : function()\n    {\n      var bus = qx.event.message.Bus;\n      var calls = 0;\n\n      var that = this;\n      bus.subscribe(\"*\", function(message) {\n        calls++;\n        that.assertEquals(\"MyMessage\", message.getName());\n        that.assertEquals(10, message.getData());\n      }, this.__subscriberOne);\n\n      this.__subscriberTwo.dispose();\n      bus.subscribe(\"MyMessage\", function(message) {\n        that.assertFalse(true, \"Wrong subscriber called!\");\n      }, this.__subscriberTwo);\n\n      bus.subscribe(\"MyMessage\", function(message) {\n        calls++;\n        that.assertEquals(\"MyMessage\", message.getName());\n        that.assertEquals(10, message.getData());\n      }, this.__subscriberThree);\n\n      var msg = new qx.event.message.Message(\"MyMessage\", 10);\n      this.assertTrue(bus.dispatch(msg), \"Message not dispatched\");\n      this.assertEquals(2, calls, \"Wrong callbacks!\");\n      msg.dispose();\n    },\n\n    // see http://bugzilla.qooxdoo.org/show_bug.cgi?id=2996\n    testWildcard : function()\n    {\n      var flag1 = false;\n      var flag2 = false;\n      function handler1() {\n        flag1 = true;\n      }\n      function handler2() {\n        flag2 = true;\n      }\n\n      var messageBus = qx.event.message.Bus.getInstance();\n      messageBus.subscribe(\"*\", handler1, this);\n      messageBus.subscribe(\"mess*\", handler2, this);\n\n      var msg1 = new qx.event.message.Message(\"message\", true);\n      this.assertTrue(messageBus.dispatch(msg1), \"Message not dispatched\");\n      this.assertTrue(flag1, \"Handler1 (filter '*') was not called for message 'message'.\");\n      this.assertTrue(flag2, \"Handler2 (filter 'mess*') was not called for message 'message'.\");\n\n      flag1 = false;\n      flag2 = false;\n      var msg2 = new qx.event.message.Message(\"massage\", true);\n      this.assertTrue(messageBus.dispatch(msg2), \"Message not dispatched\");\n      this.assertTrue(flag1, \"Handler1 (filter '*') was not called for message 'massage'.\");\n      this.assertFalse(flag2, \"Handler2 (filter 'mess*') was wrongly called for message 'massage'.\");\n      msg1.dispose();\n      msg2.dispose();\n\n    },\n\n    // see http://bugzilla.qooxdoo.org/show_bug.cgi?id=2996\n    testUnsubscribe : function()\n    {\n      var flag = false;\n      function handler() {\n         flag = true;\n      }\n\n      function anotherHandler() {\n      }\n\n      var messageBus = qx.event.message.Bus.getInstance();\n      messageBus.subscribe(\"message\", handler, this);\n      messageBus.unsubscribe(\"message\", anotherHandler, this);\n      var msg1 = new qx.event.message.Message(\"message\", true);\n      this.assertTrue(messageBus.dispatch(msg1), \"Message not dispatched\");\n      this.assertTrue(flag, \"Handler was not called.\");\n      flag = false;\n      messageBus.unsubscribe(\"message\", handler, this);\n      var msg2 = new qx.event.message.Message(\"message\", true);\n      this.assertFalse(messageBus.dispatch(msg2), \"Message not dispatched\");\n      this.assertFalse(flag, \"Handler was called although unsubscribed.\");\n      msg1.dispose();\n      msg2.dispose();\n    },\n\n    testUnsubscribeAll : function()\n    {\n      var flag = false;\n      function handler() {\n         flag = true;\n      };\n\n      function anotherHandler() {};\n\n      var messageBus = qx.event.message.Bus.getInstance();\n      messageBus.subscribe(\"message\", handler, this);\n      var msg1 = new qx.event.message.Message(\"message\", true);\n      this.assertTrue(messageBus.dispatch(msg1), \"Message not dispatched\");\n      this.assertTrue(flag, \"Handler was not called.\");\n\n      flag = false;\n      messageBus.unsubscribe(\"message\");\n      var msg2 = new qx.event.message.Message(\"message\", true);\n      this.assertFalse(messageBus.dispatch(msg2), \"Message not dispatched\");\n      this.assertFalse(flag, \"Handler was called although unsubscribed.\");\n\n      msg1.dispose();\n      msg2.dispose();\n    },\n\n    testWrongDispatch : function() {\n      var flag = false;\n      function handler() {\n         flag = true;\n      }\n\n      var messageBus = qx.event.message.Bus.getInstance();\n      messageBus.subscribe(\"message\", handler, this);\n      messageBus.subscribe(\"massage\", handler, this);\n\n      var msg = new qx.event.message.Message(\"trash\", true);\n      this.assertFalse(messageBus.dispatch(msg), \"Message was dispatched\");\n      this.assertFalse(flag, \"Handler was called.\");\n      msg.dispose();\n    }\n  }\n});"
  ]
}