{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/EditDistance.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "assertTransform",
    "strA",
    "strB",
    "arrA",
    "lang",
    "String",
    "toArray",
    "arrB",
    "job",
    "operations",
    "util",
    "EditDistance",
    "getEditOperations",
    "i",
    "l",
    "length",
    "operation",
    "OPERATION_DELETE",
    "Array",
    "removeAt",
    "pos",
    "OPERATION_REPLACE",
    "value",
    "OPERATION_INSERT",
    "insertAt",
    "Error",
    "result",
    "join",
    "testBasics",
    "test"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,sBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,eAAe,EAAG,yBAASC,IAAT,EAAeC,IAAf,EAClB;AACE,YAAIC,IAAI,GAAGd,EAAE,CAACe,IAAH,CAAQC,MAAR,CAAeC,OAAf,CAAuBL,IAAvB,CAAX;AACA,YAAIM,IAAI,GAAGlB,EAAE,CAACe,IAAH,CAAQC,MAAR,CAAeC,OAAf,CAAuBJ,IAAvB,CAAX;AACA,YAAIM,GAAJ;AAEA,YAAIC,UAAU,GAAGpB,EAAE,CAACqB,IAAH,CAAQC,YAAR,CAAqBC,iBAArB,CAAuCT,IAAvC,EAA6CI,IAA7C,CAAjB;;AAEA,aAAK,IAAIM,CAAC,GAAC,CAAN,EAASC,CAAC,GAACL,UAAU,CAACM,MAA3B,EAAmCF,CAAC,GAACC,CAArC,EAAwCD,CAAC,EAAzC,EACA;AACEL,UAAAA,GAAG,GAAGC,UAAU,CAACI,CAAD,CAAhB;;AAEA,kBAAOL,GAAG,CAACQ,SAAX;AAEE,iBAAK3B,EAAE,CAACqB,IAAH,CAAQC,YAAR,CAAqBM,gBAA1B;AACE5B,cAAAA,EAAE,CAACe,IAAH,CAAQc,KAAR,CAAcC,QAAd,CAAuBhB,IAAvB,EAA6BK,GAAG,CAACY,GAAjC;AACA;;AAEF,iBAAK/B,EAAE,CAACqB,IAAH,CAAQC,YAAR,CAAqBU,iBAA1B;AACElB,cAAAA,IAAI,CAACK,GAAG,CAACY,GAAL,CAAJ,GAAgBZ,GAAG,CAACc,KAApB;AACA;;AAEF,iBAAKjC,EAAE,CAACqB,IAAH,CAAQC,YAAR,CAAqBY,gBAA1B;AACElC,cAAAA,EAAE,CAACe,IAAH,CAAQc,KAAR,CAAcM,QAAd,CAAuBrB,IAAvB,EAA6BK,GAAG,CAACc,KAAjC,EAAwCd,GAAG,CAACY,GAA5C;AACA;;AAEF;AACE,oBAAM,IAAIK,KAAJ,CAAU,wBAAwBjB,GAAG,CAACQ,SAAtC,CAAN;AAfJ;AAiBD;;AAED,YAAIU,MAAM,GAAGvB,IAAI,CAACwB,IAAL,CAAU,EAAV,CAAb;;AAEA,YAAID,MAAM,KAAKxB,IAAf,EAAqB;AACnB,gBAAM,IAAIuB,KAAJ,CAAU,yCAAyCxB,IAAzC,GAAgD,MAAhD,GAAyDC,IAAzD,GAAgE,gBAAhE,GAAmFwB,MAA7F,CAAN;AACD,SAlCH,CAoCE;;AACD,OAvCH;AA0CEE,MAAAA,UAAU,EAAG,sBACb;AACE,aAAK5B,eAAL,CAAqB,aAArB,EAAoC,YAApC;AACA,aAAKA,eAAL,CAAqB,QAArB,EAA+B,QAA/B;AACA,aAAKA,eAAL,CAAqB,QAArB,EAA+B,QAA/B;AACA,aAAKA,eAAL,CAAqB,QAArB,EAA+B,KAA/B;AACA,aAAKA,eAAL,CAAqB,QAArB,EAA+B,KAA/B;AACA,aAAKA,eAAL,CAAqB,QAArB,EAA+B,MAA/B;AACA,aAAKA,eAAL,CAAqB,QAArB,EAA+B,QAA/B;AACA,aAAKA,eAAL,CAAqB,QAArB,EAA+B,WAA/B;AACD;AApDH;AAJF,GADA;AAlBAX,EAAAA,EAAE,CAACwC,IAAH,CAAQlB,YAAR,CAAqBnB,aAArB,GAAqCA,aAArC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.EditDistance\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    assertTransform : function(strA, strB)\n    {\n      var arrA = qx.lang.String.toArray(strA);\n      var arrB = qx.lang.String.toArray(strB);\n      var job;\n\n      var operations = qx.util.EditDistance.getEditOperations(arrA, arrB);\n\n      for (var i=0, l=operations.length; i<l; i++)\n      {\n        job = operations[i];\n\n        switch(job.operation)\n        {\n          case qx.util.EditDistance.OPERATION_DELETE:\n            qx.lang.Array.removeAt(arrA, job.pos);\n            break;\n\n          case qx.util.EditDistance.OPERATION_REPLACE:\n            arrA[job.pos] = job.value;\n            break;\n\n          case qx.util.EditDistance.OPERATION_INSERT:\n            qx.lang.Array.insertAt(arrA, job.value, job.pos);\n            break;\n\n          default:\n            throw new Error(\"Invalid operation: \" + job.operation);\n        }\n      }\n\n      var result = arrA.join(\"\");\n\n      if (result !== strB) {\n        throw new Error(\"Implementation could not transform: \" + strA + \" to \" + strB + \"! Result was: \" + result);\n      }\n\n      // this.debug(\"Successfully transformed: \" + strA + \" to \" + strB + \".\");\n    },\n\n\n    testBasics : function()\n    {\n      this.assertTransform(\"hello world\", \"hallo welt\");\n      this.assertTransform(\"abcdef\", \"abdcef\");\n      this.assertTransform(\"abcdef\", \"fedcba\");\n      this.assertTransform(\"abcdef\", \"abc\");\n      this.assertTransform(\"abcdef\", \"def\");\n      this.assertTransform(\"abcdef\", \"bcef\");\n      this.assertTransform(\"abcdef\", \"abcghi\");\n      this.assertTransform(\"abcdef\", \"abcstudef\");\n    }\n  }\n});\n"
  ]
}