{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/io/remote/AbstractRequest.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "MRemoteTest",
    "members",
    "_requests",
    "setUp",
    "i",
    "request",
    "_createRequest",
    "addListener",
    "responseError",
    "Error",
    "_getRequests",
    "tearDown",
    "_disposeArray",
    "e",
    "getType",
    "event",
    "Timer",
    "once",
    "resume",
    "fail",
    "getStatusCode",
    "testAsynchronous",
    "isLocal",
    "needsPHPWarning",
    "completedCount",
    "length",
    "setParameter",
    "response",
    "lang",
    "Json",
    "parse",
    "getContent",
    "getTarget",
    "assertEquals",
    "getParameter",
    "send",
    "that",
    "wait",
    "testAbortedOnException",
    "url",
    "getUrl",
    "remote",
    "Request",
    "dispose",
    "AbstractRequest"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n  2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\n     MIT: https://opensource.org/licenses/MIT\n  See the LICENSE file in the project's top-level directory for details.\n\nAuthors:\n  * Fabian Jakobs (fjakobs)\n  * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/*\n*/\n/**\n *\n * @asset(qx/test/*)\n */\n\nqx.Class.define(\"qx.test.io.remote.AbstractRequest\",\n{\n  type : \"abstract\",\n  extend : qx.dev.unit.TestCase,\n  include : qx.test.io.MRemoteTest,\n\n  members :\n  {\n    _requests : null,\n\n    setUp : function()\n    {\n      this._requests = [];\n\n      for (var i = 0; i < 10 ; i++) {\n        var request = this._createRequest();\n\n        request.addListener(\"aborted\", this.responseError, this);\n        request.addListener(\"failed\", this.responseError, this);\n        request.addListener(\"timeout\", this.responseError, this);\n\n        this._requests[i] = request;\n      }\n    },\n\n\n    _createRequest : function() {\n      throw new Error(\"Abstract method call\");\n    },\n\n    _getRequests: function() {\n      return this._requests;\n    },\n\n    tearDown : function() {\n      this._disposeArray(\"_requests\");\n    },\n\n\n    responseError : function(e)\n    {\n      var request = e;\n      var type = e.getType();\n\n      qx.event.Timer.once(function()\n      {\n        this.resume(function()\n        {\n          this.fail(\"Response error: \" + type + \" \" +\n            request.getStatusCode()\n          );\n        }, this);\n      }, this);\n    },\n\n\n    testAsynchronous : function()\n    {\n      if (this.isLocal()) {\n        this.needsPHPWarning();\n        return;\n      }\n\n      var completedCount = 0;\n\n      for (var i = 0; i < this._requests.length; i++)\n      {\n        var request = this._requests[i];\n\n        request.setParameter(\"test\", \"test\" + i);\n\n        request.addListener(\"completed\", function(e)\n        {\n          completedCount++;\n\n          var response = qx.lang.Json.parse(e.getContent());\n          request = e.getTarget();\n          this.assertEquals(request.getParameter(\"test\"), response[\"test\"]);\n\n        }, this);\n\n        request.send();\n      }\n\n      var that = this;\n      this.wait(5000, function()\n      {\n        that.assertEquals(i, completedCount);\n      });\n    },\n\n\n    testAbortedOnException : function()\n    {\n      if (this.isLocal()) {\n        this.needsPHPWarning();\n        return;\n      }\n\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_get_request.php\");\n      var request = new qx.io.remote.Request(url, \"GET\", \"text/plain\");\n      request.addListener(\"failed\", this.responseError, this);\n      request.addListener(\"timeout\", this.responseError, this);\n\n      request.addListener(\"completed\", function(e)\n      {\n        throw new Error(\"Expected exception.\");\n      }, this);\n\n      request.addListener(\"aborted\", function(e)\n      {\n        this.resume(function()\n        {\n          this.assertEquals(request, e.getTarget());\n          request.dispose();\n        }, this);\n      }, this);\n\n      request.send();\n\n      this.wait(2000);\n    }\n  }\n});\n"
  ]
}