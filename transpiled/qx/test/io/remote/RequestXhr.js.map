{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/io/remote/RequestXhr.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "io",
    "remote",
    "AbstractRequest",
    "members",
    "_createRequest",
    "url",
    "getUrl",
    "Request",
    "testSynchronous",
    "isLocal",
    "needsPHPWarning",
    "completedCount",
    "i",
    "_getRequests",
    "length",
    "request",
    "setAsynchronous",
    "setParameter",
    "addListener",
    "e",
    "response",
    "lang",
    "Json",
    "parse",
    "getContent",
    "getTarget",
    "assertEquals",
    "getParameter",
    "send",
    "testSynchronousAndAsynchronousMix",
    "asynchronousRequest",
    "synchronousRequest",
    "asynchronousRequestFinished",
    "synchronousRequestFinished",
    "that",
    "wait",
    "assertTrue",
    "testGetResponseHeader",
    "setUrl",
    "resume",
    "getResponseHeader",
    "window",
    "setTimeout",
    "RequestXhr"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n  2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\n     MIT: https://opensource.org/licenses/MIT\n  See the LICENSE file in the project's top-level directory for details.\n\nAuthors:\n  * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/*\n*/\n/**\n *\n * @asset(qx/test/*)\n */\n\nqx.Class.define(\"qx.test.io.remote.RequestXhr\",\n{\n  extend : qx.test.io.remote.AbstractRequest,\n\n  members :\n  {\n    // Overridden\n    _createRequest : function() {\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_get_request.php\");\n      return new qx.io.remote.Request(url, \"GET\", \"text/plain\");\n    },\n\n\n    testSynchronous : function()\n    {\n      if (this.isLocal()) {\n        this.needsPHPWarning();\n        return;\n      }\n\n      var completedCount = 0;\n\n      for (var i = 0; i < this._getRequests().length; i++)\n      {\n        var request = this._getRequests()[i];\n\n        request.setAsynchronous(false);\n        request.setParameter(\"test\", \"test\" + i);\n\n        request.addListener(\"completed\", function(e)\n        {\n          completedCount++;\n\n          var response = qx.lang.Json.parse(e.getContent());\n          request = e.getTarget();\n          this.assertEquals(request.getParameter(\"test\"), response[\"test\"]);\n        }, this);\n\n        request.send();\n      }\n\n      this.assertEquals(i, completedCount, \"Test doesn't run synchronous!\");\n    },\n\n\n    testSynchronousAndAsynchronousMix : function()\n    {\n      if (this.isLocal()) {\n        this.needsPHPWarning();\n        return;\n      }\n\n      var asynchronousRequest = this._getRequests()[0];\n      var synchronousRequest = this._getRequests()[1];\n\n      asynchronousRequest.setParameter(\"test\", \"asynchronousRequest\");\n      asynchronousRequest.setParameter(\"sleep\", 1);\n      synchronousRequest.setParameter(\"test\", \"synchronousRequest\");\n      synchronousRequest.setAsynchronous(false);\n\n      var asynchronousRequestFinished = false;\n      var synchronousRequestFinished = false;\n\n      asynchronousRequest.addListener(\"completed\", function(e)\n      {\n        //this.resume(function()\n        //{\n          asynchronousRequestFinished = true;\n\n          var response = qx.lang.Json.parse(e.getContent());\n          var request = e.getTarget();\n          this.assertEquals(request.getParameter(\"test\"), response[\"test\"]);\n        //}, this);\n      }, this);\n\n      synchronousRequest.addListener(\"completed\", function(e)\n      {\n        synchronousRequestFinished = true;\n\n        var response = qx.lang.Json.parse(e.getContent());\n        var request = e.getTarget();\n        this.assertEquals(request.getParameter(\"test\"), response[\"test\"]);\n      }, this);\n\n      asynchronousRequest.send();\n      synchronousRequest.send();\n\n      var that = this;\n      this.wait(5000, function()\n      {\n        that.assertTrue(asynchronousRequestFinished);\n        that.assertTrue(synchronousRequestFinished);\n      });\n    },\n\n    testGetResponseHeader : function()\n    {\n      if (this.isLocal()) {\n        this.needsPHPWarning();\n        return;\n      }\n\n      var request = new qx.io.remote.Request();\n\n      // Response header is \"juhu\"\n      request.setUrl(this.getUrl(\"qx/test/xmlhttp/send_known_header.php\"));\n\n      request.addListener(\"completed\", function(e) { this.resume(function() {\n        this.assertEquals(\"kinners\", e.getResponseHeader(\"juhu\"), \"Exact case match\");\n        this.assertEquals(\"kinners\", e.getResponseHeader(\"Juhu\"), \"Case insensitive match\");\n      }, this); }, this);\n\n      var that = this;\n      window.setTimeout(function() {\n        request.send();\n      }, 1000);\n      this.wait(5000);\n    }\n  }\n});\n"
  ]
}