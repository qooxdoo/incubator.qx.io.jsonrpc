{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/io/remote/Rpc.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "members",
    "setUpFakeRequest",
    "req",
    "request",
    "io",
    "remote",
    "Request",
    "setState",
    "getSequenceNumber",
    "setData",
    "send",
    "stub",
    "addListener",
    "restore",
    "dispatchEvent",
    "returns",
    "undefined",
    "injectStub",
    "tearDown",
    "getSandbox",
    "rpc",
    "Rpc",
    "callAsync",
    "assertCalledOnce",
    "obj",
    "date",
    "Date",
    "UTC",
    "msg",
    "data",
    "getCall",
    "args",
    "assertMatch",
    "nested",
    "evt",
    "event",
    "Registration",
    "createEvent",
    "Response",
    "str",
    "that",
    "callback",
    "spy",
    "result",
    "assertTrue",
    "lang",
    "Type",
    "isDate",
    "setContent",
    "assertCalled",
    "Json",
    "parse",
    "assertCalledWith",
    "assertNotCalled",
    "assertEquals",
    "_isConvertDates",
    "skip",
    "RequirementError",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.io.remote.Rpc\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  include : qx.dev.unit.MMock,\n\n  members :\n  {\n    setUpFakeRequest : function() {\n      var req = this.request = new qx.io.remote.Request();\n\n      // In prototype chain\n      req.setState = req.getSequenceNumber =\n        req.setData = req.send = function() {};\n\n      // Stub\n      this.stub(req);\n      req.addListener.restore();\n      req.dispatchEvent.restore();\n      req.getSequenceNumber.returns(undefined);\n\n      // Inject\n      this.injectStub(qx.io.remote, \"Request\", req);\n    },\n\n    tearDown: function() {\n      this.getSandbox().restore();\n    },\n\n    \"test: send request\": function() {\n      this.setUpFakeRequest();\n      var rpc = new qx.io.remote.Rpc(\"/foo\");\n\n      rpc.callAsync();\n      this.assertCalledOnce(this.request.send);\n    },\n\n    \"test: request data for params with date contains date literal when convert dates\": function() {\n      this.setUpFakeRequest();\n      var obj = { date: new Date(Date.UTC(2020,0,1,0,0,0,123)) },\n          msg,\n          data;\n\n      var rpc = new qx.io.remote.Rpc();\n      this.stub(rpc, \"_isConvertDates\").returns(true);\n      this.stub(rpc, \"createRpcData\").returns({\"params\": obj});\n      rpc.callAsync();\n\n      data = this.request.setData.getCall(0).args[0];\n      msg = \"Must contain converted date literal\";\n      this.assertMatch(data, /\"new Date\\(Date.UTC\\(2020,0,1,0,0,0,123\\)\\)\"/, msg);\n    },\n\n    \"test: request data for params with nested date contains date literal when convert dates\": function() {\n      this.setUpFakeRequest();\n      var obj = {nested: {date: new Date(Date.UTC(2020,0,1,0,0,0,123))} },\n          msg,\n          data;\n\n      var rpc = new qx.io.remote.Rpc();\n      this.stub(rpc, \"_isConvertDates\").returns(true);\n      this.stub(rpc, \"createRpcData\").returns({\"params\": obj});\n      rpc.callAsync();\n\n      data = this.request.setData.getCall(0).args[0];\n      msg = \"Must contain converted date literal\";\n      this.assertMatch(data, /\"new Date\\(Date.UTC\\(2020,0,1,0,0,0,123\\)\\)\"/, msg);\n    },\n\n    \"test: response contains date from literal when convert dates\": function() {\n      this.setUpFakeRequest();\n      var rpc = new qx.io.remote.Rpc(),\n          req = this.request,\n          evt = qx.event.Registration.createEvent(\"completed\", qx.io.remote.Response),\n          str = '{\"result\": {\"date\": new Date(Date.UTC(2020,0,1,0,0,0,123))} }',\n          that = this;\n\n      this.stub(rpc, \"_isConvertDates\").returns(true);\n\n      var callback = this.spy(function(result) {\n        var msg = \"Expected value to be date but found \" + typeof result.date;\n        that.assertTrue(qx.lang.Type.isDate(result.date), msg);\n      });\n\n      rpc.callAsync(callback);\n\n      // Fake JSON-like (JavaScript) response\n      evt.setContent(str);\n      req.dispatchEvent(evt);\n\n      this.assertCalled(callback);\n    },\n\n    \"test: response contains date from literal when convert dates and json response\": function() {\n      this.setUpFakeRequest();\n      var rpc = new qx.io.remote.Rpc(),\n          req = this.request,\n          evt = qx.event.Registration.createEvent(\"completed\", qx.io.remote.Response),\n          str = '{\"result\": {\"date\": \"new Date(Date.UTC(2020,0,1,0,0,0,123))\"} }',\n          that = this;\n\n      this.stub(rpc, \"_isConvertDates\").returns(true);\n      this.stub(rpc, \"_isResponseJson\").returns(true);\n      this.spy(qx.lang.Json, \"parse\");\n\n      var callback = this.spy(function(result) {\n        var msg;\n\n        that.assertCalled(qx.lang.Json.parse);\n\n        msg = \"Expected value to be date but found \" + typeof result.date;\n        that.assertTrue(qx.lang.Type.isDate(result.date), msg);\n      });\n\n      rpc.callAsync(callback);\n\n      // Fake JSON (String) response\n      evt.setContent(str);\n      req.dispatchEvent(evt);\n\n      this.assertCalled(callback);\n    },\n\n    \"test: response is parsed as JSON\": function() {\n      this.setUpFakeRequest();\n      var rpc = new qx.io.remote.Rpc(),\n          req = this.request,\n          evt = qx.event.Registration.createEvent(\"completed\", qx.io.remote.Response),\n          str = '{\"result\": { \"json\" : true} }',\n          that = this;\n\n      this.stub(rpc, \"_isConvertDates\").returns(false);\n      this.spy(qx.lang.Json, \"parse\");\n\n      var callback = this.spy(function(result) {\n        that.assertCalledWith(qx.lang.Json.parse, str);\n      });\n\n      rpc.callAsync(callback);\n\n      // Fake JSON (String) response\n      evt.setContent(str);\n      req.dispatchEvent(evt);\n\n      this.assertCalled(callback);\n    },\n\n    \"test: response is not parsed when already object\": function() {\n      this.setUpFakeRequest();\n      var rpc = new qx.io.remote.Rpc(),\n          req = this.request,\n          evt = qx.event.Registration.createEvent(\"completed\", qx.io.remote.Response),\n          obj = {\"result\": { \"json\" : true} },\n          that = this;\n\n      this.stub(rpc, \"_isConvertDates\").returns(false);\n      this.spy(qx.lang.Json, \"parse\");\n\n      var callback = this.spy(function(result) {\n        that.assertNotCalled(qx.lang.Json.parse);\n      });\n\n      rpc.callAsync(callback);\n\n      // Object response\n      evt.setContent(obj);\n      req.dispatchEvent(evt);\n\n      this.assertCalled(callback);\n    },\n\n    //\n    // isConvertDates()\n    //\n\n    \"test: isConvertDates() returns true when Rpc true\": function() {\n      var rpc = new qx.io.remote.Rpc();\n      this.stub(qx.io.remote.Rpc, \"CONVERT_DATES\", true);\n      this.assertEquals(true, rpc._isConvertDates());\n    },\n\n\n    skip: function(msg) {\n      throw new qx.dev.unit.RequirementError(null, msg);\n    }\n  }\n});\n"
  ]
}