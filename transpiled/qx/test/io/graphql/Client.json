{
  "className": "qx.test.io.graphql.Client",
  "packageName": "qx.test.io.graphql",
  "name": "Client",
  "superClass": "qx.dev.unit.TestCase",
  "interfaces": [],
  "mixins": [
    "qx.test.io.MAssert"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 19,
        "column": 0
      },
      "end": {
        "line": 117,
        "column": 5
      }
    },
    "jsdoc": {}
  },
  "type": "class",
  "statics": {
    "TEST_ENDPOINT": {
      "location": {
        "start": {
          "line": 24,
          "column": 6
        },
        "end": {
          "line": 24,
          "column": 65
        }
      },
      "type": "variable",
      "access": "public"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 26,
        "column": 4
      },
      "end": {
        "line": 29,
        "column": 5
      }
    }
  },
  "members": {
    "runQuery": {
      "location": {
        "start": {
          "line": 32,
          "column": 6
        },
        "end": {
          "line": 36,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "runQueryWithVariables": {
      "location": {
        "start": {
          "line": 38,
          "column": 6
        },
        "end": {
          "line": 43,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: execute query": {
      "location": {
        "start": {
          "line": 45,
          "column": 6
        },
        "end": {
          "line": 73,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: execute query with variables": {
      "location": {
        "start": {
          "line": 75,
          "column": 6
        },
        "end": {
          "line": 91,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: expect protocol error": {
      "location": {
        "start": {
          "line": 93,
          "column": 6
        },
        "end": {
          "line": 102,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: expect transport error": {
      "location": {
        "start": {
          "line": 104,
          "column": 6
        },
        "end": {
          "line": 115,
          "column": 7
        }
      },
      "type": "function",
      "access": "public"
    },
    "assertDeepEquals": {
      "type": "function",
      "name": "assertDeepEquals",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.test.io.MAssert",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Deep equal comparison, using Sinon's <code>deepEqual</code> comparison.\n Two values are \"deep equal\" if:</p>\n<ul>\n<li>They are equal, according to samsam.identical\n(https://sinonjs.github.io/samsam/)</li>\n<li>They are both date objects representing the same time</li>\n<li>They are both arrays containing elements that are all deepEqual</li>\n<li>They are objects with the same set of properties, and each property\n in obj1 is deepEqual to the corresponding property in obj2\nSupports cyclic objects.</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{*} expected"
          },
          {
            "name": "@param",
            "body": "{*} actual"
          },
          {
            "name": "@param",
            "body": "{String?} msg"
          }
        ]
      }
    },
    "assertMessageDispatched": {
      "type": "function",
      "name": "assertMessageDispatched",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.test.io.MAssert",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Assert that an message is dispatched via the message bus.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{String} name The name of the message",
            "paramName": "name",
            "description": "The name of the message",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "{*|Function|undefined} data The data of the message, if any, or a\n valiation function which returns true of false depending on whether the\n data was correct. If you dont want to check the data and want to provide\n a message as the third argument, pass <code>undefined</code> explicitly.",
            "paramName": "data",
            "description": "The data of the message, if any, or a\n valiation function which returns true of false depending on whether the\n data was correct. If you dont want to check the data and want to provide\n a message as the third argument, pass <code>undefined</code> explicitly.",
            "type": [
              "*",
              "Function",
              "undefined"
            ]
          },
          {
            "name": "@param",
            "body": "msg {String?\"\"} Message to be shows if the assertion fails.",
            "paramName": "msg",
            "description": " Message to be shows if the assertion fails.",
            "optional": true,
            "defaultValue": "\"\"",
            "type": "String"
          }
        ]
      }
    },
    "assertContains": {
      "type": "function",
      "name": "assertContains",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.test.io.MAssert",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Asserts that a string fragment is contained in a result</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{String} expectedFragment"
          },
          {
            "name": "@param",
            "body": "{String} actual"
          },
          {
            "name": "@param",
            "body": "{String?} msg"
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getTestResult": {
      "type": "function",
      "name": "getTestResult",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>testResult</code>.\n\nFor further details take a look at the property definition: {@link #testResult}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for testResult"
          }
        ]
      }
    },
    "setTestResult": {
      "type": "function",
      "name": "setTestResult",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>testResult</code>.\n\nFor further details take a look at the property definition: {@link #testResult}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for testResult"
          }
        ]
      }
    },
    "resetTestResult": {
      "type": "function",
      "name": "resetTestResult",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>testResult</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #testResult}."
          }
        ]
      }
    },
    "getTestFunc": {
      "type": "function",
      "name": "getTestFunc",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>testFunc</code>.\n\nFor further details take a look at the property definition: {@link #testFunc}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for testFunc"
          }
        ]
      }
    },
    "setTestFunc": {
      "type": "function",
      "name": "setTestFunc",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>testFunc</code>.\n\nFor further details take a look at the property definition: {@link #testFunc}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for testFunc"
          }
        ]
      }
    },
    "resetTestFunc": {
      "type": "function",
      "name": "resetTestFunc",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>testFunc</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #testFunc}."
          }
        ]
      }
    }
  },
  "events": {},
  "descendants": []
}