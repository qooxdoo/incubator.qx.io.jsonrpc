{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/io/request/Jsonp.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "request",
    "MRequest",
    "MMock",
    "members",
    "setUp",
    "setUpRequest",
    "setUpFakeTransport",
    "req",
    "dispose",
    "Jsonp",
    "setUrl",
    "transport",
    "injectStub",
    "prototype",
    "deepStub",
    "bom",
    "tearDown",
    "getSandbox",
    "restore",
    "undefine",
    "e",
    "assertEquals",
    "getUrl",
    "setCallbackParam",
    "assertCalledWith",
    "setCallbackName"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;AAWAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,0BAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EAAG,CAACV,EAAE,CAACW,IAAH,CAAQC,EAAR,CAAWC,OAAX,CAAmBC,QAApB,EACCd,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYO,KADb,CAHZ;AAMEC,IAAAA,OAAO,EACP;AACEC,MAAAA,KAAK,EAAE,iBAAW;AAChB,aAAKC,YAAL;AACA,aAAKC,kBAAL;AACD,OAJH;AAMED,MAAAA,YAAY,EAAE,wBAAW;AACvB,aAAKE,GAAL,IAAY,KAAKA,GAAL,CAASC,OAAT,EAAZ;AACA,aAAKD,GAAL,GAAW,IAAIpB,EAAE,CAACY,EAAH,CAAMC,OAAN,CAAcS,KAAlB,EAAX;AACA,aAAKF,GAAL,CAASG,MAAT,CAAgB,KAAhB;AACD,OAVH;AAYE;AACA;AACAJ,MAAAA,kBAAkB,EAAE,8BAAW;AAC7B,aAAKK,SAAL,GAAiB,KAAKC,UAAL,CAAgBzB,EAAE,CAACY,EAAH,CAAMC,OAAN,CAAcS,KAAd,CAAoBI,SAApC,EACf,kBADe,EACK,KAAKC,QAAL,CAAc,IAAI3B,EAAE,CAAC4B,GAAH,CAAOf,OAAP,CAAeS,KAAnB,EAAd,CADL,CAAjB;AAEA,aAAKJ,YAAL;AACD,OAlBH;AAoBEW,MAAAA,QAAQ,EAAE,oBAAW;AACnB,aAAKC,UAAL,GAAkBC,OAAlB;AACA,aAAKX,GAAL,CAASC,OAAT,GAFmB,CAInB;;AACA,YAAI;AAAErB,UAAAA,EAAE,CAACI,KAAH,CAAS4B,QAAT,CAAkB,OAAlB;AAA6B,SAAnC,CAAoC,OAAMC,CAAN,EAAS,CAAE;AAChD,OA1BH;AA4BE;AACA;AACA;AAEA,6CAAuC,yCAAW;AAChD,YAAIb,GAAG,GAAG,IAAIpB,EAAE,CAACY,EAAH,CAAMC,OAAN,CAAcS,KAAlB,CAAwB,KAAxB,CAAV;AACA,aAAKY,YAAL,CAAkB,KAAlB,EAAyBd,GAAG,CAACe,MAAJ,EAAzB;AACAf,QAAAA,GAAG,CAACC,OAAJ;AACD,OApCH;AAsCE;AACA;AACA;AAEA,kCAA4B,gCAAW;AACrC,YAAID,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAGAJ,QAAAA,GAAG,CAACgB,gBAAJ,CAAqB,QAArB;AACA,aAAKC,gBAAL,CAAsBb,SAAS,CAACY,gBAAhC,EAAkD,QAAlD;AACD,OAhDH;AAkDE,iCAA2B,+BAAW;AACpC,YAAIhB,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAGAJ,QAAAA,GAAG,CAACkB,eAAJ,CAAoB,YAApB;AACA,aAAKD,gBAAL,CAAsBb,SAAS,CAACc,eAAhC,EAAiD,YAAjD;AACD;AAxDH;AAPF,GADA;AA7BAtC,EAAAA,EAAE,CAACW,IAAH,CAAQC,EAAR,CAAWC,OAAX,CAAmBS,KAAnB,CAAyBnB,aAAzB,GAAyCA,aAAzC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/**\n * Tests asserting behavior\n *\n * - special to io.request.Jsonp and\n * - common to io.request.* (see {@link qx.test.io.request.MRequest})\n *\n * Tests defined in MRequest run with appropriate context, i.e.\n * a transport that is an instance of qx.bom.request.Jsonp\n * (see {@link #setUpFakeTransport}).\n *\n */\nqx.Class.define(\"qx.test.io.request.Jsonp\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  include : [qx.test.io.request.MRequest,\n             qx.dev.unit.MMock],\n\n  members :\n  {\n    setUp: function() {\n      this.setUpRequest();\n      this.setUpFakeTransport();\n    },\n\n    setUpRequest: function() {\n      this.req && this.req.dispose();\n      this.req = new qx.io.request.Jsonp;\n      this.req.setUrl(\"url\");\n    },\n\n    // Also called in shared tests, i.e. shared tests\n    // use appropriate transport\n    setUpFakeTransport: function() {\n      this.transport = this.injectStub(qx.io.request.Jsonp.prototype,\n        \"_createTransport\", this.deepStub(new qx.bom.request.Jsonp()));\n      this.setUpRequest();\n    },\n\n    tearDown: function() {\n      this.getSandbox().restore();\n      this.req.dispose();\n\n      // May fail in IE\n      try { qx.Class.undefine(\"Klass\"); } catch(e) {}\n    },\n\n    //\n    // General (cont.)\n    //\n\n    \"test: set url property on construct\": function() {\n      var req = new qx.io.request.Jsonp(\"url\");\n      this.assertEquals(\"url\", req.getUrl());\n      req.dispose();\n    },\n\n    //\n    // Callback management\n    //\n\n    \"test: setCallbackParam()\": function() {\n      var req = this.req,\n          transport = this.transport;\n\n      req.setCallbackParam(\"method\");\n      this.assertCalledWith(transport.setCallbackParam, \"method\");\n    },\n\n    \"test: setCallbackName()\": function() {\n      var req = this.req,\n          transport = this.transport;\n\n      req.setCallbackName(\"myCallback\");\n      this.assertCalledWith(transport.setCallbackName, \"myCallback\");\n    }\n  }\n});\n"
  ]
}