{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/io/request/XhrWithRemote.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "MRemoteTest",
    "MRequirements",
    "members",
    "setUp",
    "req",
    "request",
    "Xhr",
    "require",
    "tearDown",
    "dispose",
    "url",
    "noCache",
    "getUrl",
    "addListener",
    "e",
    "resume",
    "assertEquals",
    "getTarget",
    "getResponseText",
    "setUrl",
    "send",
    "wait",
    "url1",
    "url2",
    "count",
    "phases",
    "expectedPhases",
    "push",
    "getPhase",
    "assertArrayEquals",
    "abort",
    "event",
    "Timer",
    "once",
    "setTimeout",
    "getResponseHeader",
    "Error",
    "ex",
    "util",
    "Uri",
    "appendParamsToUrl",
    "Date",
    "valueOf",
    "hasNoIe",
    "core",
    "Environment",
    "get",
    "XhrWithRemote"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.io.request.XhrWithRemote\",\n{\n  extend: qx.dev.unit.TestCase,\n\n  include: [qx.test.io.MRemoteTest,\n            qx.dev.unit.MRequirements],\n\n  members:\n  {\n    setUp: function() {\n      this.req = new qx.io.request.Xhr();\n      this.require([\"http\"]);\n    },\n\n    tearDown: function() {\n      this.req.dispose();\n    },\n\n    \"test: fetch resource\": function() {\n\n      var req = this.req,\n          url = this.noCache(this.getUrl(\"qx/test/xmlhttp/sample.txt\"));\n\n      req.addListener(\"success\", function(e) {\n        this.resume(function() {\n          this.assertEquals(\"SAMPLE\", e.getTarget().getResponseText());\n        }, this);\n      }, this);\n\n      req.setUrl(url);\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: recycle request\": function() {\n      var req = new qx.io.request.Xhr(),\n          url1 = this.noCache(this.getUrl(\"qx/test/xmlhttp/sample.txt\") + \"?1\"),\n          url2 = this.noCache(this.getUrl(\"qx/test/xmlhttp/sample.txt\") + \"?2\"),\n          count = 0;\n\n      req.addListener(\"success\", function() {\n        count++;\n\n        if (count == 2) {\n          this.resume();\n        } else {\n          req.setUrl(url2);\n          req.send();\n        }\n      }, this);\n\n      req.setUrl(url1);\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: progress phases\": function() {\n      var req = this.req,\n          phases = [],\n          expectedPhases = [\"opened\", \"sent\", \"loading\", \"load\", \"success\"],\n          url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n\n      req.addListener(\"changePhase\", function() {\n        phases.push(req.getPhase());\n\n        if (req.getPhase() === \"success\") {\n          this.resume(function() {\n            this.assertArrayEquals(expectedPhases, phases);\n          }, this);\n        }\n\n      }, this);\n\n      req.setUrl(url);\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: progress phases when abort after send\": function() {\n      var req = this.req,\n          phases = [],\n          expectedPhases = [\"opened\", \"sent\", \"abort\"],\n          url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n\n      req.addListener(\"changePhase\", function() {\n        phases.push(req.getPhase());\n\n        if (req.getPhase() === \"abort\") {\n          this.assertArrayEquals(expectedPhases, phases);\n        }\n\n      }, this);\n\n      req.setUrl(url);\n      req.send();\n      req.abort();\n    },\n\n    \"test: progress phases when abort after loading\": function() {\n      // Note:\n      //   * Breaks on Windows 7 and OS X in every browser because the loading phase\n      //     is never entered\n      //   * Also breaks on Windows 10 in every browser\n      this.require([\"noIe\", \"noWin7\", \"noOsx\", \"noWin10\"]);\n\n      var req = this.req,\n          phases = [],\n          expectedPhases = [\"opened\", \"sent\", \"loading\", \"abort\"],\n          url = this.noCache(this.getUrl(\"qx/test/xmlhttp/loading.php\")) + \"&duration=100\";\n\n      req.addListener(\"changePhase\", function() {\n        phases.push(req.getPhase());\n\n        if (req.getPhase() === \"abort\") {\n          this.resume(function() {\n            this.assertArrayEquals(expectedPhases, phases);\n          });\n        }\n\n      }, this);\n\n      req.setUrl(url);\n      req.send();\n\n      // Abort loading. Give remote some time to respond.\n      qx.event.Timer.once(function() {\n        req.abort();\n      }, this, 500);\n\n      this.wait();\n    },\n\n    \"test: timeout\": function() {\n      var req = this.req,\n          url = this.noCache(this.getUrl(\"qx/test/xmlhttp/loading.php\")) + \"&duration=100\";\n\n      req.addListener(\"timeout\", function() {\n        this.resume(function() {\n          this.assertEquals(\"timeout\", req.getPhase());\n        });\n      }, this);\n\n      req.setUrl(url);\n      req.setTimeout(1/1000);\n      req.send();\n      this.wait();\n    },\n\n    \"test: timeout with header call\": function() {\n      var req = this.req,\n          url = this.noCache(this.getUrl(\"qx/test/xmlhttp/loading.php\")) + \"&duration=100\";\n\n      req.addListener(\"timeout\", function() {\n        this.resume(function() {\n          try {\n            req.getResponseHeader(\"X-UI-My-Header\");\n            throw new Error(\"DOM exception expected!\");\n          } catch (ex) {}\n        });\n      }, this);\n\n      req.setUrl(url);\n      req.setTimeout(1/1000);\n      req.send();\n      this.wait();\n    },\n\n    // \"test: fetch resources simultaneously\": function() {\n    //   this.require([\"php\"]);\n    //\n    //   var count = 1,\n    //       upTo = 20,\n    //       startedAt = new Date(),\n    //       duration = 0;\n    //\n    //   for (var i=0; i<upTo; i++) {\n    //     var req = new qx.io.request.Xhr(),\n    //         url = this.noCache(this.getUrl(\"qx/test/xmlhttp/loading.php\")) + \"&duration=6\";\n    //\n    //     req.addListener(\"success\", function() {\n    //       this.resume(function() {\n    //         // In seconds\n    //         duration = (new Date() - startedAt) / 1000;\n    //         this.debug(\"Request #\" + count + \" completed (\" +  duration + \")\");\n    //         if (count == upTo) {\n    //           return;\n    //         }\n    //\n    //         ++count;\n    //         this.wait(6000 + 1000);\n    //       }, this);\n    //     }, this);\n    //\n    //     req.setUrl(url);\n    //     req.send();\n    //   }\n    //\n    //   // Provided two concurrent requests are made (each 6s), 20 requests\n    //   // (i.e. 10 packs of requests) should complete after 60s\n    //   this.wait(60000 + 1000);\n    // },\n\n    noCache: function(url) {\n      return qx.util.Uri.appendParamsToUrl(url, \"nocache=\" + (new Date).valueOf());\n    },\n\n    hasNoIe: function() {\n      return !(qx.core.Environment.get(\"engine.name\") == \"mshtml\");\n    }\n\n  }\n});\n"
  ]
}