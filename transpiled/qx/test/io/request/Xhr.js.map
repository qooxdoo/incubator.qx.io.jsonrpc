{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/io/request/Xhr.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "request",
    "MRequest",
    "MMock",
    "MRequirements",
    "members",
    "setUp",
    "setUpRequest",
    "setUpFakeTransport",
    "req",
    "dispose",
    "Xhr",
    "setUrl",
    "transport",
    "send",
    "restore",
    "injectStub",
    "prototype",
    "setUpFakeServer",
    "getSandbox",
    "useFakeServer",
    "server",
    "getServer",
    "respondWith",
    "setUpFakeXhr",
    "useFakeXMLHttpRequest",
    "tearDown",
    "undefine",
    "e",
    "assertEquals",
    "getUrl",
    "getMethod",
    "setMethod",
    "assertCalledWith",
    "open",
    "require",
    "setAsync",
    "assertCalled",
    "setRequestData",
    "setRequestHeader",
    "msg",
    "assert",
    "calledWith",
    "setUpKlass",
    "obj",
    "Klass",
    "window",
    "Blob",
    "skip",
    "blob",
    "type",
    "ArrayBuffer",
    "array",
    "data",
    "contentType",
    "assertNull",
    "_serializeData",
    "spy",
    "withArgs",
    "assertNotCalled",
    "setCache",
    "setAccept",
    "overrideResponseContentType",
    "overrideMimeType",
    "stub",
    "getResponseContentType",
    "getResponseHeader",
    "that",
    "readyState",
    "status",
    "responseText",
    "addListener",
    "getTarget",
    "getResponseText",
    "onreadystatechange",
    "readyStates",
    "statuses",
    "push",
    "getReadyState",
    "getStatus",
    "respond",
    "assertArrayEquals",
    "getStatusText",
    "getResponse",
    "assertEventFired",
    "getData",
    "json",
    "stubbedParser",
    "_createResponseParser",
    "_transport",
    "returns",
    "_parser",
    "_getParsedResponse",
    "parse",
    "customParser",
    "setParser",
    "auth",
    "call",
    "key",
    "credentials",
    "authentication",
    "Basic",
    "setAuthentication",
    "getCall",
    "exec",
    "args",
    "util",
    "Base64",
    "decode",
    "sendWithPromise",
    "assertCalledOnce",
    "then",
    "resumeHandler",
    "result",
    "wait",
    "_",
    "BaseError",
    "catch",
    "assertInstance",
    "toString",
    "statusText",
    "onerror",
    "setTimeout",
    "ontimeout",
    "promise",
    "listeners",
    "event",
    "Registration",
    "serializeListeners",
    "length",
    "assertNotEquals",
    "onabort",
    "throws",
    "promise1",
    "finally",
    "abort",
    "cancel",
    "getPhase",
    "assertIdentical",
    "self"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;AAIA;;;;;AAKA;;;;;;;;;;;AAWAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,wBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EAAG,CAACV,EAAE,CAACW,IAAH,CAAQC,EAAR,CAAWC,OAAX,CAAmBC,QAApB,EACCd,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYO,KADb,EAECf,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYQ,aAFb,CAHZ;AAOEC,IAAAA,OAAO,EACP;AACEC,MAAAA,KAAK,EAAE,iBAAW;AAChB,aAAKC,YAAL;AACA,aAAKC,kBAAL;AACD,OAJH;AAMED,MAAAA,YAAY,EAAE,wBAAW;AACvB,aAAKE,GAAL,IAAY,KAAKA,GAAL,CAASC,OAAT,EAAZ;AACA,aAAKD,GAAL,GAAW,IAAIrB,EAAE,CAACY,EAAH,CAAMC,OAAN,CAAcU,GAAlB,EAAX;AACA,aAAKF,GAAL,CAASG,MAAT,CAAgB,KAAhB;AACD,OAVH;AAYEJ,MAAAA,kBAAkB,EAAE,8BAAW;AAC7B,YAAI,KAAKK,SAAL,IAAkB,KAAKA,SAAL,CAAeC,IAAf,CAAoBC,OAA1C,EAAmD;AAAE;AAAS;;AAC9D,aAAKF,SAAL,GAAiB,KAAKG,UAAL,CAAgB5B,EAAE,CAACY,EAAH,CAAMC,OAAN,CAAcU,GAAd,CAAkBM,SAAlC,EAA6C,kBAA7C,CAAjB;AACA,aAAKV,YAAL;AACD,OAhBH;AAkBEW,MAAAA,eAAe,EAAE,2BAAW;AAC1B;AACA,aAAKC,UAAL,GAAkBJ,OAAlB;AAEA,aAAKK,aAAL;AACA,aAAKb,YAAL;AAEA,aAAKc,MAAL,GAAc,KAAKC,SAAL,EAAd;AAEA,aAAKD,MAAL,CAAYE,WAAZ,CAAwB,KAAxB,EAA+B,QAA/B,EACE,CAAC,GAAD,EAAM;AAAC,0BAAgB;AAAjB,SAAN,EAAqC,OAArC,CADF;AAGA,aAAKF,MAAL,CAAYE,WAAZ,CAAwB,KAAxB,EAA+B,aAA/B,EACE,CAAC,GAAD,EAAM;AAAC,0BAAgB;AAAjB,SAAN,EAA2D,MAA3D,CADF;AAGA,aAAKF,MAAL,CAAYE,WAAZ,CAAwB,KAAxB,EAA+B,cAA/B,EACE,CAAC,GAAD,EAAM;AAAC,0BAAgB;AAAjB,SAAN,EAA6C,OAA7C,CADF;AAED,OAnCH;AAqCEC,MAAAA,YAAY,EAAE,wBAAW;AACvB;AACA,aAAKL,UAAL,GAAkBJ,OAAlB;AAEA,aAAKU,qBAAL;AACA,aAAKlB,YAAL;AACD,OA3CH;AA6CEmB,MAAAA,QAAQ,EAAE,oBAAW;AACnB,aAAKP,UAAL,GAAkBJ,OAAlB;AACA,aAAKN,GAAL,CAASC,OAAT,GAFmB,CAInB;;AACA,YAAI;AAAEtB,UAAAA,EAAE,CAACI,KAAH,CAASmC,QAAT,CAAkB,OAAlB;AAA6B,SAAnC,CAAoC,OAAMC,CAAN,EAAS,CAAE;AAChD,OAnDH;AAqDE;AACA;AACA;AAEA,6CAAuC,yCAAW;AAChD,YAAInB,GAAG,GAAG,IAAIrB,EAAE,CAACY,EAAH,CAAMC,OAAN,CAAcU,GAAlB,CAAsB,KAAtB,CAAV;AACA,aAAKkB,YAAL,CAAkB,KAAlB,EAAyBpB,GAAG,CAACqB,MAAJ,EAAzB;AACArB,QAAAA,GAAG,CAACC,OAAJ;AACD,OA7DH;AA+DE,gDAA0C,4CAAW;AACnD,YAAID,GAAG,GAAG,IAAIrB,EAAE,CAACY,EAAH,CAAMC,OAAN,CAAcU,GAAlB,CAAsB,KAAtB,EAA6B,MAA7B,CAAV;AACA,aAAKkB,YAAL,CAAkB,MAAlB,EAA0BpB,GAAG,CAACsB,SAAJ,EAA1B;AACAtB,QAAAA,GAAG,CAACC,OAAJ;AACD,OAnEH;AAqEE;AACA;AACA;AAEA,iCAA2B,+BAAW;AACpC,aAAKF,kBAAL;AACA,aAAKC,GAAL,CAASuB,SAAT,CAAmB,MAAnB;AACA,aAAKvB,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAeqB,IAArC,EAA2C,MAA3C;AACD,OA/EH;AAiFE,iCAA2B,+BAAW;AACpC,aAAKC,OAAL,CAAa,CAAC,MAAD,CAAb;;AAEA,aAAK3B,kBAAL;AACA,aAAKC,GAAL,CAAS2B,QAAT,CAAkB,KAAlB;AACA,aAAK3B,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAeqB,IAArC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD;AACA,aAAKG,YAAL,CAAkB,KAAKxB,SAAL,CAAeC,IAAjC;AACD,OA1FH;AA4FE;AACA;AACA;AAEA,yFAAmF,6EAAW;AAC5F,aAAKN,kBAAL;AACA,aAAKC,GAAL,CAASuB,SAAT,CAAmB,MAAnB;AACA,aAAKvB,GAAL,CAAS6B,cAAT,CAAwB,MAAxB;AACA,aAAK7B,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAe0B,gBAArC,EACK,cADL,EACqB,mCADrB;AAED,OAxGH;AA0GE,0FAAoF,8EAAW;AAC7F,YAAIC,GAAJ;AAEA,aAAKhC,kBAAL;AACA,aAAKC,GAAL,CAASuB,SAAT,CAAmB,MAAnB;AACA,aAAKvB,GAAL,CAAS6B,cAAT,CAAwB,MAAxB;AACA,aAAK7B,GAAL,CAAS8B,gBAAT,CAA0B,cAA1B,EAA0C,kBAA1C;AACA,aAAK9B,GAAL,CAASK,IAAT;AAEA0B,QAAAA,GAAG,GAAG,4DAAN;AACA,aAAKC,MAAL,CAAY,CAAC,KAAK5B,SAAL,CAAe0B,gBAAf,CAAgCG,UAAhC,CAA2C,cAA3C,EACX,mCADW,CAAb,EACwCF,GADxC;AAED,OAtHH;AAwHE,kDAA4C,6CAAW;AACrD,aAAKhC,kBAAL;AACA,aAAKC,GAAL,CAASuB,SAAT,CAAmB,MAAnB;AACA,aAAKvB,GAAL,CAAS6B,cAAT,CAAwB,KAAxB;AACA,aAAK7B,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAeC,IAArC,EAA2C,KAA3C;AACD,OA/HH;AAiIE,+CAAyC,0CAAW;AAClD,aAAKN,kBAAL;AACA,aAAKC,GAAL,CAASuB,SAAT,CAAmB,MAAnB;AACA,aAAKvB,GAAL,CAAS6B,cAAT,CAAwB;AAAC,mBAAS;AAAV,SAAxB;AACA,aAAK7B,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAeC,IAArC,EAA2C,YAA3C;AACD,OAxIH;AA0IE,uDAAiD,iDAAW;AAC1D,aAAKN,kBAAL;AACA,aAAKmC,UAAL;AACA,YAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,aAAKpC,GAAL,CAASuB,SAAT,CAAmB,MAAnB;AACA,aAAKvB,GAAL,CAAS6B,cAAT,CAAwBM,GAAxB;AACA,aAAKnC,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAeC,IAArC,EAA2C,WAA3C;AACA8B,QAAAA,GAAG,CAAClC,OAAJ;AACD,OApJH;AAsJE,gDAA0C,2CAAW;AACnD,YAAI,OAAOoC,MAAM,CAACC,IAAd,IAAsB,WAA1B,EAAuC;AACrC,eAAKC,IAAL,CAAU,gCAAV;AACD;;AACD,YAAIC,IAAI,GAAG,IAAIH,MAAM,CAACC,IAAX,CAAgB,CAAC,QAAD,CAAhB,EAA4B;AAACG,UAAAA,IAAI,EAAE;AAAP,SAA5B,CAAX;AACA,aAAK1C,kBAAL;AACA,aAAKC,GAAL,CAASuB,SAAT,CAAmB,MAAnB;AACA,aAAKvB,GAAL,CAAS6B,cAAT,CAAwBW,IAAxB;AACA,aAAKxC,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAeC,IAArC,EAA2CmC,IAA3C;AACD,OAjKH;AAmKE,wDAAkD,kDAAW;AAC3D,YAAI,OAAOH,MAAM,CAACK,WAAd,IAA6B,WAAjC,EAA8C;AAC5C,eAAKH,IAAL,CAAU,uCAAV;AACD;;AACD,YAAII,KAAK,GAAG,IAAIN,MAAM,CAACK,WAAX,CAAuB,GAAvB,CAAZ;AACA,aAAK3C,kBAAL;AACA,aAAKC,GAAL,CAASuB,SAAT,CAAmB,MAAnB;AACA,aAAKvB,GAAL,CAAS6B,cAAT,CAAwBc,KAAxB;AACA,aAAK3C,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAeC,IAArC,EAA2CsC,KAA3C;AACD,OA9KH;AAgLE,8BAAwB,6BAAW;AACjC,YAAI3C,GAAG,GAAG,KAAKA,GAAf;AAAA,YACI4C,IAAI,GAAG;AAAC,iBAAO,KAAR;AAAe,iBAAO;AAAtB,SADX;AAAA,YAEIC,WAAW,GAAG,kBAFlB;AAIA,aAAKC,UAAL,CAAgB9C,GAAG,CAAC+C,cAAJ,CAAmB,IAAnB,CAAhB;AACA,aAAK3B,YAAL,CAAkB,eAAlB,EAAmCpB,GAAG,CAAC+C,cAAJ,CAAmB,eAAnB,CAAnC;AACA,aAAK3B,YAAL,CAAkB,iBAAlB,EAAqCpB,GAAG,CAAC+C,cAAJ,CAAmBH,IAAnB,CAArC;AAEA5C,QAAAA,GAAG,CAAC8B,gBAAJ,CAAqB,cAArB,EAAqC,uBAArC;AACA,aAAKV,YAAL,CAAkB,iBAAlB,EAAqCpB,GAAG,CAAC+C,cAAJ,CAAmBH,IAAnB,CAArC;AAEA5C,QAAAA,GAAG,CAAC8B,gBAAJ,CAAqB,cAArB,EAAqCe,WAArC;AACA,aAAKzB,YAAL,CAAkB,2BAAlB,EAA+CpB,GAAG,CAAC+C,cAAJ,CAAmBH,IAAnB,CAA/C;AAEA5C,QAAAA,GAAG,CAAC8B,gBAAJ,CAAqB,cAArB,EAAqCe,WAArC;AACA,aAAKzB,YAAL,CAAkB,SAAlB,EAA6BpB,GAAG,CAAC+C,cAAJ,CAAmB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAnB,CAA7B;AACD,OAjMH;AAmME;AACA;AACA;AAEA,yCAAmC,sCAAW;AAC5C,aAAKhD,kBAAL;AACA,aAAKC,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAe0B,gBAArC,EAAuD,kBAAvD,EAA2E,gBAA3E;AACD,OA5MH;AA8ME,+DAAyD,wDAAW;AAClE,aAAK/B,kBAAL;AACA,YAAIiD,GAAG,GAAG,KAAK5C,SAAL,CAAe0B,gBAAf,CAAgCmB,QAAhC,CAAyC,kBAAzC,EAA6D,gBAA7D,CAAV;AAEA,aAAKjD,GAAL,CAASG,MAAT,CAAgB,oBAAhB;AACA,aAAKH,GAAL,CAASK,IAAT;AAEA,aAAK6C,eAAL,CAAqBF,GAArB;AACD,OAtNH;AAwNE,wCAAkC,qCAAW;AAC3C,aAAKjD,kBAAL;AACA,aAAKC,GAAL,CAASmD,QAAT,CAAkB,UAAlB;AACA,aAAKnD,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAe0B,gBAArC,EAAuD,eAAvD,EAAwE,UAAxE;AACD,OA9NH;AAgOE,iCAA2B,+BAAW;AACpC,aAAK/B,kBAAL;AACA,aAAKC,GAAL,CAASoD,SAAT,CAAmB,kBAAnB;AACA,aAAKpD,GAAL,CAASK,IAAT;AAEA,aAAKmB,gBAAL,CAAsB,KAAKpB,SAAL,CAAe0B,gBAArC,EAAuD,QAAvD,EAAiE,kBAAjE;AACD,OAtOH;AAwOE,8CAAwC,2CAAW;AACjD,aAAK/B,kBAAL;AACA,aAAKC,GAAL,CAASqD,2BAAT,CAAqC,8BAArC;AAEA,aAAK7B,gBAAL,CAAsB,KAAKpB,SAAL,CAAekD,gBAArC,EAAuD,8BAAvD;AACD,OA7OH;AA+OE,yCAAmC,sCAAW;AAC5C,aAAKC,IAAL,CAAU,KAAKvD,GAAf,EAAoB,mBAApB;AACA,aAAKA,GAAL,CAASwD,sBAAT;AAEA,aAAKhC,gBAAL,CAAsB,KAAKxB,GAAL,CAASyD,iBAA/B,EAAkD,cAAlD;AACD,OApPH;AAsPE;AACA;AACA;AAEA;AACA,8CAAwC,2CAAW;AACjD,aAAK1D,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAAA,YAEIsD,IAAI,GAAG,IAFX;AAIAtD,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAACyD,YAAV,GAAyB,MAAzB;AAEA7D,QAAAA,GAAG,CAAC8D,WAAJ,CAAgB,SAAhB,EAA2B,UAAS3C,CAAT,EAAY;AACrCuC,UAAAA,IAAI,CAACtC,YAAL,CAAkBD,CAAC,CAAC4C,SAAF,EAAlB,EAAiC/D,GAAjC;AACA0D,UAAAA,IAAI,CAACtC,YAAL,CAAkB,MAAlB,EAA0BD,CAAC,CAAC4C,SAAF,GAAcC,eAAd,EAA1B;AACD,SAHD;AAKA5D,QAAAA,SAAS,CAAC6D,kBAAV;AACD,OA3QH;AA6QE;AACA,+CAAyC,0CAAW;AAClD,aAAKlE,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAAA,YAEIsD,IAAI,GAAG,IAFX;AAIAtD,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAACyD,YAAV,GAAyB,MAAzB;AAEA7D,QAAAA,GAAG,CAAC8D,WAAJ,CAAgB,SAAhB,EAA2B,YAAW;AACpCJ,UAAAA,IAAI,CAACtC,YAAL,CAAkB,IAAlB,EAAwBpB,GAAxB;AACA0D,UAAAA,IAAI,CAACtC,YAAL,CAAkB,MAAlB,EAA0B,KAAK4C,eAAL,EAA1B;AACD,SAHD;AAKA5D,QAAAA,SAAS,CAAC6D,kBAAV;AACD,OA9RH;AAgSE;AACA;AACA;AAEA,wDAAkD,mDAAW;AAC3D,aAAKvC,OAAL,CAAa,CAAC,MAAD,CAAb;;AAEA,aAAKjB,eAAL;AACA,YAAIT,GAAG,GAAG,KAAKA,GAAf;AAAA,YACIY,MAAM,GAAG,KAAKA,MADlB;AAAA,YAEIsD,WAAW,GAAG,EAFlB;AAAA,YAGIC,QAAQ,GAAG,EAHf;AAKAnE,QAAAA,GAAG,CAACG,MAAJ,CAAW,QAAX;AACAH,QAAAA,GAAG,CAACuB,SAAJ,CAAc,KAAd;AAEA2C,QAAAA,WAAW,CAACE,IAAZ,CAAiBpE,GAAG,CAACqE,aAAJ,EAAjB;AACArE,QAAAA,GAAG,CAAC8D,WAAJ,CAAgB,kBAAhB,EAAoC,YAAW;AAC7CI,UAAAA,WAAW,CAACE,IAAZ,CAAiBpE,GAAG,CAACqE,aAAJ,EAAjB;AACAF,UAAAA,QAAQ,CAACC,IAAT,CAAcpE,GAAG,CAACsE,SAAJ,EAAd;AACD,SAHD,EAGG,IAHH;AAKAtE,QAAAA,GAAG,CAACK,IAAJ;AACAO,QAAAA,MAAM,CAAC2D,OAAP;AAEA,aAAKC,iBAAL,CAAuB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAvB,EAAwCN,WAAxC;AACA,aAAKM,iBAAL,CAAuB,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,CAAvB,EAA2CL,QAA3C;AACA,aAAK/C,YAAL,CAAkB,WAAlB,EAA+BpB,GAAG,CAACyD,iBAAJ,CAAsB,cAAtB,CAA/B;AACA,aAAKrC,YAAL,CAAkB,IAAlB,EAAwBpB,GAAG,CAACyE,aAAJ,EAAxB;AACA,aAAKrD,YAAL,CAAkB,OAAlB,EAA2BpB,GAAG,CAACgE,eAAJ,EAA3B;AACD,OA9TH;AAgUE;AACA;AACA;AAEA,4BAAsB,2BAAW;AAC/B,aAAKjE,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAGAA,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAACyD,YAAV,GAAyB,MAAzB;AACAzD,QAAAA,SAAS,CAAC6D,kBAAV;AAEA,aAAK7C,YAAL,CAAkB,MAAlB,EAA0BpB,GAAG,CAAC0E,WAAJ,EAA1B;AACD,OA/UH;AAiVE,0CAAoC,sCAAW;AAC7C,aAAK3E,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAGAA,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAACyD,YAAV,GAAyB,MAAzB;AACAzD,QAAAA,SAAS,CAAC6D,kBAAV;AAEA,aAAK7C,YAAL,CAAkB,MAAlB,EAA0BpB,GAAG,CAAC0E,WAAJ,EAA1B;AACD,OA5VH;AA8VE,4CAAsC,wCAAW;AAC/C,aAAK3E,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAAA,YAEIsD,IAAI,GAAG,IAFX;AAIAtD,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAACyD,YAAV,GAAyB,MAAzB;AAEA,aAAKc,gBAAL,CAAsB3E,GAAtB,EAA2B,gBAA3B,EAA6C,YAAW;AACtDI,UAAAA,SAAS,CAAC6D,kBAAV;AACD,SAFD,EAEG,UAAS9C,CAAT,EAAY;AACbuC,UAAAA,IAAI,CAACtC,YAAL,CAAkB,MAAlB,EAA0BD,CAAC,CAACyD,OAAF,EAA1B;AACD,SAJD;AAMD,OA9WH;AAgXE;AACA;AACA;AAEA,kCAA4B,kCAAW;AACrC,YAAI5E,GAAG,GAAG,KAAKA,GAAf;AAAA,YACI6E,IAAI,GAAG,gBADX;AAAA,YAEIhC,WAAW,GAAG,kBAFlB;AAAA,YAGIiC,aAAa,GAAG9E,GAAG,CAAC+E,qBAAJ,EAHpB;;AAKA/E,QAAAA,GAAG,CAACgF,UAAJ,CAAenB,YAAf,GAA8BgB,IAA9B;AACA,aAAKtB,IAAL,CAAUvD,GAAV,EAAe,wBAAf,EAAyCiF,OAAzC,CAAiDpC,WAAjD,EAPqC,CASrC;;AACA,aAAKU,IAAL,CAAUuB,aAAV,EAAyB,OAAzB;AACA9E,QAAAA,GAAG,CAACkF,OAAJ,GAAcJ,aAAd;;AAEA9E,QAAAA,GAAG,CAACmF,kBAAJ;;AACA,aAAK3D,gBAAL,CAAsBsD,aAAa,CAACM,KAApC,EAA2CP,IAA3C,EAAiDhC,WAAjD;AACD,OAnYH;AAqYE,yBAAmB,yBAAW;AAC5B,YAAI7C,GAAG,GAAG,KAAKA,GAAf;AAAA,YACIqF,YAAY,GAAG,SAAfA,YAAe,GAAW,CAAE,CADhC;AAAA,YAEIP,aAAa,GAAG9E,GAAG,CAAC+E,qBAAJ,EAFpB,CAD4B,CAK5B;;;AACA,aAAKxB,IAAL,CAAUuB,aAAV,EAAyB,WAAzB;AACA9E,QAAAA,GAAG,CAACkF,OAAJ,GAAcJ,aAAd;AAEA9E,QAAAA,GAAG,CAACsF,SAAJ,CAAcD,YAAd;AACA,aAAK7D,gBAAL,CAAsBsD,aAAa,CAACQ,SAApC,EAA+CD,YAA/C;AACD,OAhZH;AAkZE;AACA;AACA;AAEA,0BAAoB,yBAAW;AAC7B,aAAKtF,kBAAL;AAEA,YAAIK,SAAS,GAAG,KAAKA,SAArB;AAAA,YACImF,IADJ;AAAA,YACUC,IADV;AAAA,YACgBC,GADhB;AAAA,YACqBC,WADrB;AAGAH,QAAAA,IAAI,GAAG,IAAI5G,EAAE,CAACY,EAAH,CAAMC,OAAN,CAAcmG,cAAd,CAA6BC,KAAjC,CAAuC,MAAvC,EAA+C,QAA/C,CAAP;AACA,aAAK5F,GAAL,CAAS6F,iBAAT,CAA2BN,IAA3B;AACA,aAAKvF,GAAL,CAASK,IAAT;AAEAmF,QAAAA,IAAI,GAAGpF,SAAS,CAAC0B,gBAAV,CAA2BgE,OAA3B,CAAmC,CAAnC,CAAP;AACAL,QAAAA,GAAG,GAAG,eAAN;AACAC,QAAAA,WAAW,GAAG,cAAcK,IAAd,CAAmBP,IAAI,CAACQ,IAAL,CAAU,CAAV,CAAnB,EAAiC,CAAjC,CAAd;AACA,aAAK5E,YAAL,CAAkBqE,GAAlB,EAAuBD,IAAI,CAACQ,IAAL,CAAU,CAAV,CAAvB;AACA,aAAK5E,YAAL,CAAkB,aAAlB,EAAiCzC,EAAE,CAACsH,IAAH,CAAQC,MAAR,CAAeC,MAAf,CAAsBT,WAAtB,CAAjC;AACD,OAraH;AAwaG;AACA;AACA;AAED,mDAA6C,8CAAW;AAKtD,aAAK1F,GAAL,CAASoG,eAAT;AACA,aAAKC,gBAAL,CAAsB,KAAKjG,SAAL,CAAeC,IAArC;AACD,OAnbH;AAqbE,0CAAoC,uCAAW;AAK7C,aAAKN,kBAAL;AAEA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEAA,QAAAA,GAAG,CAACoG,eAAJ,CAAoB,IAApB,EACGE,IADH,CACQ,KAAKC,aAAL,CAAmB,UAASC,MAAT,EAAiB;AACxC,eAAKpF,YAAL,CAAkBpB,GAAlB,EAAuBwG,MAAvB;AACA,eAAKpF,YAAL,CAAkB,GAAlB,EAAuBpB,GAAG,CAACsE,SAAJ,EAAvB;AACD,SAHK,EAGH,IAHG,CADR;AAMA,YAAIlE,SAAS,GAAG,KAAKA,SAArB;AACAA,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAAC6D,kBAAV;AACA,aAAKwC,IAAL,CAAU,KAAV;AACD,OAzcH;AA2cE,wDAAkD,mDAAW;AAK3D,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEAA,QAAAA,GAAG,CAACoG,eAAJ,CAAoB,IAApB,EACGE,IADH,CACQ,KAAKC,aAAL,CAAmB,UAASG,CAAT,EAAY;AACnC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,2DAApD,CAAN;AACD,SAFK,CADR,EAIGC,KAJH,CAIS,KAAKL,aAAL,CAAmB,UAASC,MAAT,EAAiB;AACzC,eAAKK,cAAL,CAAoBL,MAApB,EAA4B7H,EAAE,CAAC8D,IAAH,CAAQkE,SAApC;AACA,eAAKvF,YAAL,CAAkB,yBAAlB,EAA6CoF,MAAM,CAACM,QAAP,EAA7C;AACD,SAHM,EAGJ,IAHI,CAJT;AASA,YAAI1G,SAAS,GAAG,KAAKA,SAArB;AACAA,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAAC2G,UAAV,GAAuB,MAAvB;AACA3G,QAAAA,SAAS,CAAC6D,kBAAV;AAEA,aAAKwC,IAAL,CAAU,IAAV;AACD,OAneH;AAqeE,kDAA4C,6CAAW;AAKrD,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEAA,QAAAA,GAAG,CAACoG,eAAJ,CAAoB,IAApB,EACGE,IADH,CACQ,KAAKC,aAAL,CAAmB,UAASG,CAAT,EAAY;AACnC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,2DAApD,CAAN;AACD,SAFK,CADR,EAIGC,KAJH,CAIS,KAAKL,aAAL,CAAmB,UAASC,MAAT,EAAiB;AACzC,eAAKK,cAAL,CAAoBL,MAApB,EAA4B7H,EAAE,CAAC8D,IAAH,CAAQkE,SAApC;AACA,eAAKvF,YAAL,CAAkB,wBAAlB,EAA4CoF,MAAM,CAACM,QAAP,EAA5C;AACD,SAHM,EAGJ,IAHI,CAJT;AASA,YAAI1G,SAAS,GAAG,KAAKA,SAArB;AACAA,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,CAAnB;AACAxD,QAAAA,SAAS,CAAC4G,OAAV;AAEA,aAAKP,IAAL,CAAU,IAAV;AACD,OA5fH;AA8fE,oDAA8C,+CAAW;AAKvD,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEAA,QAAAA,GAAG,CAACoG,eAAJ,CAAoB,IAApB,EACGE,IADH,CACQ,KAAKC,aAAL,CAAmB,UAASG,CAAT,EAAY;AACnC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,2DAApD,CAAN;AACD,SAFK,CADR,EAIGC,KAJH,CAIS,KAAKL,aAAL,CAAmB,UAASC,MAAT,EAAiB;AACzC,eAAKK,cAAL,CAAoBL,MAApB,EAA4B7H,EAAE,CAAC8D,IAAH,CAAQkE,SAApC;AACA,eAAKvF,YAAL,CAAkB,kDAAlB,EAAsEoF,MAAM,CAACM,QAAP,EAAtE;AACD,SAHM,EAGJ,IAHI,CAJT;AASA9G,QAAAA,GAAG,CAACiH,UAAJ,CAAe,CAAf;AACA,aAAK7G,SAAL,CAAe8G,SAAf;AACA,aAAKT,IAAL,CAAU,IAAV;AACD,OAlhBH;AAohBE,qDAA+C,gDAAW;AAKxD,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEA,YAAImH,OAAO,GAAGnH,GAAG,CAACoG,eAAJ,CAAoB,IAApB,CAAd,CARwD,CAUxD;;AACA,YAAIgB,SAAS,GAAGzI,EAAE,CAAC0I,KAAH,CAASC,YAAT,CAAsBC,kBAAtB,CAAyCvH,GAAzC,CAAhB;AAEAmH,QAAAA,OAAO,CAACP,KAAR,CAAc,KAAKL,aAAL,CAAmB,YAAW;AAC1C,cAAIiB,MAAM,GAAG7I,EAAE,CAAC0I,KAAH,CAASC,YAAT,CAAsBC,kBAAtB,CAAyCvH,GAAzC,EAA8CwH,MAA3D;AACA,eAAKC,eAAL,CAAqBD,MAArB,EAA6BJ,SAAS,CAACI,MAAvC,EAA+C,gFAA/C;AACD,SAHa,CAAd;AAKA,aAAKpH,SAAL,CAAe8G,SAAf;AACA,aAAKT,IAAL,CAAU,IAAV;AACD,OAxiBH;AA0iBE,mDAA6C,+CAAW;AAKtD,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEAA,QAAAA,GAAG,CAACoG,eAAJ,CAAoB,IAApB,EACGE,IADH,CACQ,KAAKC,aAAL,CAAmB,UAASG,CAAT,EAAY;AACnC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,2DAApD,CAAN;AACD,SAFK,CADR,EAIGC,KAJH,CAIS,KAAKL,aAAL,CAAmB,UAASC,MAAT,EAAiB;AACzC,eAAKK,cAAL,CAAoBL,MAApB,EAA4B7H,EAAE,CAAC8D,IAAH,CAAQkE,SAApC;AACA,eAAKvF,YAAL,CAAkB,yBAAlB,EAA6CoF,MAAM,CAACM,QAAP,EAA7C;AACD,SAHM,EAGJ,IAHI,CAJT;AASA,aAAK1G,SAAL,CAAesH,OAAf;AACA,aAAKjB,IAAL,CAAU,IAAV;AACD,OA7jBH;AA+jBE,8CAAwC,2CAAW;AAKjD,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;;AACA,YAAI8E,aAAa,GAAG9E,GAAG,CAAC+E,qBAAJ,EAApB,CAPiD,CASjD;;;AACA,YAAIxB,IAAI,GAAG,KAAKA,IAAL,CAAUuB,aAAV,EAAyB,OAAzB,CAAX;AACAvB,QAAAA,IAAI,CAACoE,MAAL;AACA3H,QAAAA,GAAG,CAACkF,OAAJ,GAAcJ,aAAd;AAEA9E,QAAAA,GAAG,CAACoG,eAAJ,CAAoB,IAApB,EACGE,IADH,CACQ,KAAKC,aAAL,CAAmB,UAASG,CAAT,EAAY;AACnC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,2DAApD,CAAN;AACD,SAFK,CADR,EAIGC,KAJH,CAIS,KAAKL,aAAL,CAAmB,UAASC,MAAT,EAAiB;AACzC,eAAKK,cAAL,CAAoBL,MAApB,EAA4B7H,EAAE,CAAC8D,IAAH,CAAQkE,SAApC;AACA,eAAKvF,YAAL,CAAkB,yCAAlB,EAA6DoF,MAAM,CAACM,QAAP,EAA7D;AACD,SAHM,EAGJ,IAHI,CAJT;AASA,YAAI1G,SAAS,GAAG,KAAKA,SAArB;AACAA,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAAC6D,kBAAV;AACA,aAAKwC,IAAL,CAAU,IAAV;AACD,OA3lBH;AA6lBE,uFAAiF,2EAAW;AAK1F,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEA,YAAImH,OAAO,GAAGnH,GAAG,CAACoG,eAAJ,CAAoB,IAApB,CAAd,CAR0F,CAU1F;;AACA,YAAIwB,QAAQ,GAAGT,OAAO,CACnBb,IADY,CACP,KAAKC,aAAL,CAAmB,UAASG,CAAT,EAAY;AACnC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,oCAApD,CAAN;AACD,SAFK,EAEH,IAFG,CADO,EAIZC,KAJY,CAIN,KAAKL,aAAL,CAAmB,UAASC,MAAT,EAAiB;AACzC,gBAAM,IAAI7H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,mCAApD,CAAN;AACD,SAFM,EAEJ,IAFI,CAJM,EAOf;AAPe,SAQZkB,OARY,CAQJ,YAAW;AAClB7H,UAAAA,GAAG,CAAC8H,KAAJ;AACD,SAVY,CAAf,CAX0F,CAwB1F;;AACAX,QAAAA,OAAO,CACJb,IADH,CACQ,KAAKC,aAAL,CAAmB,UAASC,MAAT,EAAiB;AACxC,eAAKpF,YAAL,CAAkBpB,GAAlB,EAAuBwG,MAAvB;AACD,SAFK,EAEH,IAFG,CADR,EAIGI,KAJH,CAIS,KAAKL,aAAL,CAAmB,UAASG,CAAT,EAAY;AACpC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,2DAApD,CAAN;AACD,SAFM,EAEJ,IAFI,CAJT;AAQAiB,QAAAA,QAAQ,CAACG,MAAT;AAEA,YAAI3H,SAAS,GAAG,KAAKA,SAArB;AACAA,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAAC6D,kBAAV;AACA,aAAKwC,IAAL,CAAU,IAAV;AACD,OAroBH;AAuoBE,qEAA+D,8DAAW;AAKxE,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEA,YAAImH,OAAO,GAAGnH,GAAG,CAACoG,eAAJ,CAAoB,IAApB,CAAd,CARwE,CAUxE;;AACA,YAAIwB,QAAQ,GAAGT,OAAO,CACnBb,IADY,CACP,KAAKC,aAAL,CAAmB,UAASG,CAAT,EAAY;AACnC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,mCAApD,CAAN;AACD,SAFK,CADO,EAIZC,KAJY,CAIN,KAAKL,aAAL,CAAmB,UAASG,CAAT,EAAY;AACpC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,kCAApD,CAAN;AACD,SAFM,EAEJ,IAFI,CAJM,CAAf,CAXwE,CAoBxE;;AACAQ,QAAAA,OAAO,CACJb,IADH,CACQ,KAAKC,aAAL,CAAmB,UAASC,MAAT,EAAiB;AACxC,eAAKpF,YAAL,CAAkBpB,GAAlB,EAAuBwG,MAAvB;AACD,SAFK,EAEH,IAFG,CADR;AAKAoB,QAAAA,QAAQ,CAACG,MAAT;AAEA,YAAI3H,SAAS,GAAG,KAAKA,SAArB;AACAA,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAAC6D,kBAAV;AACA,aAAKwC,IAAL,CAAU,IAAV;AACD,OAxqBH;AA0qBE,uDAAiD,mDAAW;AAK1D,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEA,YAAImH,OAAO,GAAGnH,GAAG,CAACoG,eAAJ,CAAoB,IAApB,EACXE,IADW,CACN,KAAKC,aAAL,CAAmB,UAASG,CAAT,EAAY;AACnC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,kCAApD,CAAN;AACD,SAFK,CADM,EAIXC,KAJW,CAIL,KAAKL,aAAL,CAAmB,UAASG,CAAT,EAAY;AACpC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,iCAApD,CAAN;AACD,SAFM,CAJK,EAOXkB,OAPW,CAOH,KAAKtB,aAAL,CAAmB,YAAW;AACrC,eAAKnF,YAAL,CAAkB,OAAlB,EAA2BpB,GAAG,CAACgI,QAAJ,EAA3B;AACD,SAFQ,CAPG,CAAd;AAWA,YAAI5H,SAAS,GAAG,KAAKA,SAArB;AACAA,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAAC6D,kBAAV;AAEAkD,QAAAA,OAAO,CAACY,MAAR;AAEA,aAAKtB,IAAL,CAAU,IAAV;AACD,OApsBH;AAssBE,2DAAqD,oDAAW;AAK9D,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEAA,QAAAA,GAAG,CAACoG,eAAJ,CAAoB,IAApB,EACGE,IADH,CACQ,KAAKC,aAAL,CAAmB,UAASG,CAAT,EAAY;AACnC,eAAKtF,YAAL,CAAkB,SAAlB,EAA6BpB,GAAG,CAACgI,QAAJ,EAA7B;AACD,SAFK,CADR,EAIGpB,KAJH,CAIS,KAAKL,aAAL,CAAmB,UAASG,CAAT,EAAY;AACpC,gBAAM,IAAI/H,EAAE,CAAC8D,IAAH,CAAQkE,SAAZ,CAAsB,4BAAtB,EAAoD,iCAApD,CAAN;AACD,SAFM,CAJT,EAOGkB,OAPH,CAOW,YAAW;AAClB,eAAKzG,YAAL,CAAkB,SAAlB,EAA6BpB,GAAG,CAACgI,QAAJ,EAA7B;AACD,SATH;AAWA,YAAI5H,SAAS,GAAG,KAAKA,SAArB;AACAA,QAAAA,SAAS,CAACuD,UAAV,GAAuB,CAAvB;AACAvD,QAAAA,SAAS,CAACwD,MAAV,GAAmB,GAAnB;AACAxD,QAAAA,SAAS,CAAC6D,kBAAV;AAEA,aAAKwC,IAAL,CAAU,IAAV;AACD,OA/tBH;AAiuBE,oDAA8C,+CAAW;AAKvD,aAAK1G,kBAAL;AACA,YAAIC,GAAG,GAAG,KAAKA,GAAf;AAEAA,QAAAA,GAAG,CAACoG,eAAJ,GACCQ,KADD,CACO,KAAKL,aAAL,CAAmB,UAASG,CAAT,EAAY;AACpC,eAAKuB,eAAL,CAAqBjI,GAArB,EAA0B,IAA1B;AACD,SAFM,CADP;AAKA,aAAKI,SAAL,CAAe4G,OAAf;AAEA,aAAKP,IAAL,CAAU,IAAV;AACD,OAjvBH;AAmvBE,mDAA6C,8CAAW;AAKtD,aAAK1G,kBAAL,CAAwB,IAAxB;AACA,YAAImI,IAAI,GAAG,IAAX;AAEA,aAAKlI,GAAL,CAASoG,eAAT,CAAyB,IAAzB,EACCQ,KADD,CACO,KAAKL,aAAL,CAAmB,UAASG,CAAT,EAAY;AACpC,eAAKuB,eAAL,CAAqBC,IAArB,EAA2B,IAA3B;AACD,SAFM,CADP;AAKA,aAAK9H,SAAL,CAAe4G,OAAf;AAEA,aAAKP,IAAL,CAAU,IAAV;AACD;AAnwBH;AARF,GADA;AAtCA9H,EAAAA,EAAE,CAACW,IAAH,CAAQC,EAAR,CAAWC,OAAX,CAAmBU,GAAnB,CAAuBpB,aAAvB,GAAuCA,aAAvC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n************************************************************************ */\n\n/**\n * @ignore(Klass)\n * @asset(qx/test/xmlhttp/*)\n */\n\n/**\n * Tests asserting behavior\n *\n * - special to io.request.Xhr and\n * - common to io.request.* (see {@link qx.test.io.request.MRequest})\n *\n * Tests defined in MRequest run with appropriate context, i.e.\n * a transport that is an instance of qx.bom.request.Xhr\n * (see {@link #setUpFakeTransport}).\n *\n */\nqx.Class.define(\"qx.test.io.request.Xhr\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  include : [qx.test.io.request.MRequest,\n             qx.dev.unit.MMock,\n             qx.dev.unit.MRequirements],\n\n  members :\n  {\n    setUp: function() {\n      this.setUpRequest();\n      this.setUpFakeTransport();\n    },\n\n    setUpRequest: function() {\n      this.req && this.req.dispose();\n      this.req = new qx.io.request.Xhr();\n      this.req.setUrl(\"url\");\n    },\n\n    setUpFakeTransport: function() {\n      if (this.transport && this.transport.send.restore) { return; }\n      this.transport = this.injectStub(qx.io.request.Xhr.prototype, \"_createTransport\");\n      this.setUpRequest();\n    },\n\n    setUpFakeServer: function() {\n      // Not fake transport\n      this.getSandbox().restore();\n\n      this.useFakeServer();\n      this.setUpRequest();\n\n      this.server = this.getServer();\n\n      this.server.respondWith(\"GET\", \"/found\",\n        [200, {\"Content-Type\": \"text/html\"}, \"FOUND\"]);\n\n      this.server.respondWith(\"GET\", \"/found.json\",\n        [200, {\"Content-Type\": \"application/json; charset=utf-8\"}, \"JSON\"]);\n\n      this.server.respondWith(\"GET\", \"/found.other\",\n        [200, {\"Content-Type\": \"application/other\"}, \"OTHER\"]);\n    },\n\n    setUpFakeXhr: function() {\n      // Not fake transport\n      this.getSandbox().restore();\n\n      this.useFakeXMLHttpRequest();\n      this.setUpRequest();\n    },\n\n    tearDown: function() {\n      this.getSandbox().restore();\n      this.req.dispose();\n\n      // May fail in IE\n      try { qx.Class.undefine(\"Klass\"); } catch(e) {}\n    },\n\n    //\n    // General (cont.)\n    //\n\n    \"test: set url property on construct\": function() {\n      var req = new qx.io.request.Xhr(\"url\");\n      this.assertEquals(\"url\", req.getUrl());\n      req.dispose();\n    },\n\n    \"test: set method property on construct\": function() {\n      var req = new qx.io.request.Xhr(\"url\", \"POST\");\n      this.assertEquals(\"POST\", req.getMethod());\n      req.dispose();\n    },\n\n    //\n    // Send (cont.)\n    //\n\n    \"test: send POST request\": function() {\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.open, \"POST\");\n    },\n\n    \"test: send sync request\": function() {\n      this.require([\"http\"]);\n\n      this.setUpFakeTransport();\n      this.req.setAsync(false);\n      this.req.send();\n\n      this.assertCalledWith(this.transport.open, \"GET\", \"url\", false);\n      this.assertCalled(this.transport.send);\n    },\n\n    //\n    // Data (cont.)\n    //\n\n    \"test: set content type urlencoded for POST request with body when no type given\": function() {\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(\"Affe\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.setRequestHeader,\n           \"Content-Type\", \"application/x-www-form-urlencoded\");\n    },\n\n    \"test: not set content type urlencoded for POST request with body when type given\": function() {\n      var msg;\n\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(\"Affe\");\n      this.req.setRequestHeader(\"Content-Type\", \"application/json\");\n      this.req.send();\n\n      msg = \"Must not set content type urlencoded when other type given\";\n      this.assert(!this.transport.setRequestHeader.calledWith(\"Content-Type\",\n        \"application/x-www-form-urlencoded\"), msg);\n    },\n\n    \"test: send string data with POST request\": function() {\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(\"str\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, \"str\");\n    },\n\n    \"test: send obj data with POST request\": function() {\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData({\"af fe\": true});\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, \"af+fe=true\");\n    },\n\n    \"test: send qooxdoo obj data with POST request\": function() {\n      this.setUpFakeTransport();\n      this.setUpKlass();\n      var obj = new Klass();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(obj);\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, \"affe=true\");\n      obj.dispose();\n    },\n\n    \"test: send blob data with POST request\": function() {\n      if (typeof window.Blob == \"undefined\") {\n        this.skip(\"Blob constructor not available\");\n      }\n      var blob = new window.Blob(['abc123'], {type: 'text/plain'});\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(blob);\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, blob);\n    },\n\n    \"test: send array buffer data with POST request\": function() {\n      if (typeof window.ArrayBuffer == \"undefined\") {\n        this.skip(\"ArrayBuffer constructor not available\");\n      }\n      var array = new window.ArrayBuffer(512);\n      this.setUpFakeTransport();\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(array);\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, array);\n    },\n\n    \"test: serialize data\": function() {\n      var req = this.req,\n          data = {\"abc\": \"def\", \"uvw\": \"xyz\"},\n          contentType = \"application/json\";\n\n      this.assertNull(req._serializeData(null));\n      this.assertEquals(\"leaveMeIntact\", req._serializeData(\"leaveMeIntact\"));\n      this.assertEquals(\"abc=def&uvw=xyz\", req._serializeData(data));\n\n      req.setRequestHeader(\"Content-Type\", \"arbitrary/contentType\");\n      this.assertEquals(\"abc=def&uvw=xyz\", req._serializeData(data));\n\n      req.setRequestHeader(\"Content-Type\", contentType);\n      this.assertEquals('{\"abc\":\"def\",\"uvw\":\"xyz\"}', req._serializeData(data));\n\n      req.setRequestHeader(\"Content-Type\", contentType);\n      this.assertEquals('[1,2,3]', req._serializeData([1,2,3]));\n    },\n\n    //\n    // Header and Params (cont.)\n    //\n\n    \"test: set requested-with header\": function() {\n      this.setUpFakeTransport();\n      this.req.send();\n\n      this.assertCalledWith(this.transport.setRequestHeader, \"X-Requested-With\", \"XMLHttpRequest\");\n    },\n\n    \"test: not set requested-with header when cross-origin\": function() {\n      this.setUpFakeTransport();\n      var spy = this.transport.setRequestHeader.withArgs(\"X-Requested-With\", \"XMLHttpRequest\");\n\n      this.req.setUrl(\"http://example.com\");\n      this.req.send();\n\n      this.assertNotCalled(spy);\n    },\n\n    \"test: set cache control header\": function() {\n      this.setUpFakeTransport();\n      this.req.setCache(\"no-cache\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.setRequestHeader, \"Cache-Control\", \"no-cache\");\n    },\n\n    \"test: set accept header\": function() {\n      this.setUpFakeTransport();\n      this.req.setAccept(\"application/json\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.setRequestHeader, \"Accept\", \"application/json\");\n    },\n\n    \"test: override response content type\": function() {\n      this.setUpFakeTransport();\n      this.req.overrideResponseContentType(\"text/plain;charset=Shift-JIS\");\n\n      this.assertCalledWith(this.transport.overrideMimeType, \"text/plain;charset=Shift-JIS\");\n    },\n\n    \"test: get response content type\": function() {\n      this.stub(this.req, \"getResponseHeader\");\n      this.req.getResponseContentType();\n\n      this.assertCalledWith(this.req.getResponseHeader, \"Content-Type\");\n    },\n\n    //\n    // Handler\n    //\n\n    // Documentation only\n    \"test: event handler receives request\": function() {\n      this.setUpFakeTransport();\n      var req = this.req,\n          transport = this.transport,\n          that = this;\n\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.responseText = \"Affe\";\n\n      req.addListener(\"success\", function(e) {\n        that.assertEquals(e.getTarget(), req);\n        that.assertEquals(\"Affe\", e.getTarget().getResponseText());\n      });\n\n      transport.onreadystatechange();\n    },\n\n    // Documentation only\n    \"test: event handler's this is request\": function() {\n      this.setUpFakeTransport();\n      var req = this.req,\n          transport = this.transport,\n          that = this;\n\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.responseText = \"Affe\";\n\n      req.addListener(\"success\", function() {\n        that.assertEquals(this, req);\n        that.assertEquals(\"Affe\", this.getResponseText());\n      });\n\n      transport.onreadystatechange();\n    },\n\n    //\n    // Properties\n    //\n\n    \"test: sync XHR properties for every readyState\": function() {\n      this.require([\"http\"]);\n\n      this.setUpFakeServer();\n      var req = this.req,\n          server = this.server,\n          readyStates = [],\n          statuses = [];\n\n      req.setUrl(\"/found\");\n      req.setMethod(\"GET\");\n\n      readyStates.push(req.getReadyState());\n      req.addListener(\"readyStateChange\", function() {\n        readyStates.push(req.getReadyState());\n        statuses.push(req.getStatus());\n      }, this);\n\n      req.send();\n      server.respond();\n\n      this.assertArrayEquals([0, 1, 2, 3, 4], readyStates);\n      this.assertArrayEquals([0, 200, 200, 200], statuses);\n      this.assertEquals(\"text/html\", req.getResponseHeader(\"Content-Type\"));\n      this.assertEquals(\"OK\", req.getStatusText());\n      this.assertEquals(\"FOUND\", req.getResponseText());\n    },\n\n    //\n    // Response\n    //\n\n    \"test: get response\": function() {\n      this.setUpFakeTransport();\n      var req = this.req,\n          transport = this.transport;\n\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.responseText = \"Affe\";\n      transport.onreadystatechange();\n\n      this.assertEquals(\"Affe\", req.getResponse());\n    },\n\n    \"test: get response on 400 status\": function() {\n      this.setUpFakeTransport();\n      var req = this.req,\n          transport = this.transport;\n\n      transport.readyState = 4;\n      transport.status = 400;\n      transport.responseText = \"Affe\";\n      transport.onreadystatechange();\n\n      this.assertEquals(\"Affe\", req.getResponse());\n    },\n\n    \"test: get response by change event\": function() {\n      this.setUpFakeTransport();\n      var req = this.req,\n          transport = this.transport,\n          that = this;\n\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.responseText = \"Affe\";\n\n      this.assertEventFired(req, \"changeResponse\", function() {\n        transport.onreadystatechange();\n      }, function(e) {\n        that.assertEquals(\"Affe\", e.getData());\n      });\n\n    },\n\n    //\n    // Parsing\n    //\n\n    \"test: _getParsedResponse\": function() {\n      var req = this.req,\n          json = '{\"animals\": 3}',\n          contentType = \"application/json\",\n          stubbedParser = req._createResponseParser();\n\n      req._transport.responseText = json;\n      this.stub(req, \"getResponseContentType\").returns(contentType);\n\n      // replace real parser with stub\n      this.stub(stubbedParser, \"parse\");\n      req._parser = stubbedParser;\n\n      req._getParsedResponse();\n      this.assertCalledWith(stubbedParser.parse, json, contentType);\n    },\n\n    \"test: setParser\": function() {\n      var req = this.req,\n          customParser = function() {},\n          stubbedParser = req._createResponseParser();\n\n      // replace real parser with stub\n      this.stub(stubbedParser, \"setParser\");\n      req._parser = stubbedParser;\n\n      req.setParser(customParser);\n      this.assertCalledWith(stubbedParser.setParser, customParser);\n    },\n\n    //\n    // Auth\n    //\n\n    \"test: basic auth\": function() {\n      this.setUpFakeTransport();\n\n      var transport = this.transport,\n          auth, call, key, credentials;\n\n      auth = new qx.io.request.authentication.Basic(\"affe\", \"geheim\");\n      this.req.setAuthentication(auth);\n      this.req.send();\n\n      call = transport.setRequestHeader.getCall(1);\n      key = \"Authorization\";\n      credentials = /Basic\\s(.*)/.exec(call.args[1])[1];\n      this.assertEquals(key, call.args[0]);\n      this.assertEquals(\"affe:geheim\", qx.util.Base64.decode(credentials));\n    },\n\n\n     //\n     // Promise\n     //\n\n    \"test: send with promise sends the request\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.req.sendWithPromise();\n      this.assertCalledOnce(this.transport.send);\n    },\n\n    \"test: send with promise succeeds\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n\n      var req = this.req;\n\n      req.sendWithPromise(this)\n        .then(this.resumeHandler(function(result) {\n          this.assertEquals(req, result);\n          this.assertEquals(200, req.getStatus());\n        }, this));\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.onreadystatechange();\n      this.wait(10000);\n    },\n\n    \"test: send with promise fails with statusError\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req.sendWithPromise(this)\n        .then(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"Promise has been fulfilled but should have been rejected.\");\n        }))\n        .catch(this.resumeHandler(function(result) {\n          this.assertInstance(result, qx.type.BaseError);\n          this.assertEquals(\"statusError: 404: Affe.\", result.toString());\n        }, this));\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 404;\n      transport.statusText = \"Affe\";\n      transport.onreadystatechange();\n\n      this.wait(1000);\n    },\n\n    \"test: send with promise fails with error\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req.sendWithPromise(this)\n        .then(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"Promise has been fulfilled but should have been rejected.\");\n        }))\n        .catch(this.resumeHandler(function(result) {\n          this.assertInstance(result, qx.type.BaseError);\n          this.assertEquals(\"error: Request failed.\", result.toString());\n        }, this));\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 0;\n      transport.onerror();\n\n      this.wait(1000);\n    },\n\n    \"test: send with promise fails with timeout\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req.sendWithPromise(this)\n        .then(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"Promise has been fulfilled but should have been rejected.\");\n        }))\n        .catch(this.resumeHandler(function(result) {\n          this.assertInstance(result, qx.type.BaseError);\n          this.assertEquals(\"timeout: Request failed with timeout after 1 ms.\", result.toString());\n        }, this));\n\n      req.setTimeout(1);\n      this.transport.ontimeout();\n      this.wait(5000);\n    },\n\n    \"test: setled promise has no extra listeners\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      var promise = req.sendWithPromise(this);\n\n      // cache the number of listeners before setling the promise\n      var listeners = qx.event.Registration.serializeListeners(req);\n\n      promise.catch(this.resumeHandler(function() {\n        var length = qx.event.Registration.serializeListeners(req).length;\n        this.assertNotEquals(length, listeners.length, \"The number of listeners remains the same before and after setling the promise.\");\n      }));\n\n      this.transport.ontimeout();\n      this.wait(5000);\n    },\n\n    \"test: aborted request rejects the promise\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req.sendWithPromise(this)\n        .then(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"Promise has been fulfilled but should have been rejected.\");\n        }))\n        .catch(this.resumeHandler(function(result) {\n          this.assertInstance(result, qx.type.BaseError);\n          this.assertEquals(\"abort: Request aborted.\", result.toString());\n        }, this));\n\n      this.transport.onabort();\n      this.wait(5000);\n    },\n\n    \"test: parseError rejects the promise\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n      var stubbedParser = req._createResponseParser();\n\n      // replace real parser with stub\n      var stub = this.stub(stubbedParser, \"parse\");\n      stub.throws();\n      req._parser = stubbedParser;\n\n      req.sendWithPromise(this)\n        .then(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"Promise has been fulfilled but should have been rejected.\");\n        }))\n        .catch(this.resumeHandler(function(result) {\n          this.assertInstance(result, qx.type.BaseError);\n          this.assertEquals(\"parseError: Error parsing the response.\", result.toString());\n        }, this));\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.onreadystatechange();\n      this.wait(5000);\n    },\n\n    \"test: canceled promise with abort() in finally does not reject other promises\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      var promise = req.sendWithPromise(this);\n\n      // this path is canceled. We don't expect anything from it\n      var promise1 = promise\n        .then(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"This path should not be fulfilled.\");\n        }, this))\n        .catch(this.resumeHandler(function(result) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"This path should not be rejected.\");\n        }, this))\n      // except that we want to abort when is finished\n        .finally(function() {\n          req.abort();\n        });\n\n\n      // this path should keep going\n      promise\n        .then(this.resumeHandler(function(result) {\n          this.assertEquals(req, result);\n        }, this))\n        .catch(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"Promise has been rejected but should have been fulfilled.\");\n        }, this));\n\n      promise1.cancel();\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.onreadystatechange();\n      this.wait(5000);\n    },\n\n    \"test: canceled promise path does not affect other listeners\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      var promise = req.sendWithPromise(this);\n\n      // this path is canceled. We don't expect anything from it\n      var promise1 = promise\n        .then(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"promise1 should not be fulfilled.\");\n        }))\n        .catch(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"promise1 should not be rejected.\");\n        }, this));\n\n\n      // this path should keep going\n      promise\n        .then(this.resumeHandler(function(result) {\n          this.assertEquals(req, result);\n        }, this));\n\n      promise1.cancel();\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.onreadystatechange();\n      this.wait(5000);\n    },\n\n    \"test: canceled promise aborts pending request\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      var promise = req.sendWithPromise(this)\n        .then(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"promise should not be fulfilled.\");\n        }))\n        .catch(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"promise should not be rejected.\");\n        }))\n        .finally(this.resumeHandler(function() {\n          this.assertEquals(\"abort\", req.getPhase());\n        }));\n\n      var transport = this.transport;\n      transport.readyState = 2;\n      transport.onreadystatechange();\n\n      promise.cancel();\n\n      this.wait(5000);\n    },\n\n    \"test: settled promise does not set phase to abort\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req.sendWithPromise(this)\n        .then(this.resumeHandler(function(_) {\n          this.assertEquals(\"success\", req.getPhase());\n        }))\n        .catch(this.resumeHandler(function(_) {\n          throw new qx.type.BaseError(\"Error in sendWithPromise()\", \"promise should not be rejected.\");\n        }))\n        .finally(function() {\n          this.assertEquals(\"success\", req.getPhase());\n        });\n\n      var transport = this.transport;\n      transport.readyState = 4;\n      transport.status = 200;\n      transport.onreadystatechange();\n\n      this.wait(5000);\n    },\n\n    \"test: returned promise is bound to request\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport();\n      var req = this.req;\n\n      req.sendWithPromise()\n      .catch(this.resumeHandler(function(_) {\n        this.assertIdentical(req, this);\n      }));\n\n      this.transport.onerror();\n\n      this.wait(5000);\n    },\n\n    \"test: returned promise is bound to caller\": function() {\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        this.skip(\"Skipping because qx.promise==false\");\n      }\n\n      this.setUpFakeTransport(this);\n      var self = this;\n\n      this.req.sendWithPromise(this)\n      .catch(this.resumeHandler(function(_) {\n        this.assertIdentical(self, this);\n      }));\n\n      this.transport.onerror();\n\n      this.wait(5000);\n    }\n  }\n});\n"
  ]
}