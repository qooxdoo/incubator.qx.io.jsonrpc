{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/io/request/MRequest.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "setUpKlass",
    "Class",
    "extend",
    "core",
    "Object",
    "properties",
    "affe",
    "init",
    "req",
    "dispose",
    "wait",
    "assertCalled",
    "transport",
    "assertEquals",
    "getTransport",
    "send",
    "assertCalledWith",
    "open",
    "setUrl",
    "abort",
    "setRequestData",
    "undefined",
    "obj",
    "Klass",
    "window",
    "FormData",
    "skip",
    "setMethod",
    "formData",
    "append",
    "setRequestHeader",
    "stub",
    "withArgs",
    "assertCalledOnce",
    "getRequestHeader",
    "removeRequestHeader",
    "assertNotCalled",
    "_getAllRequestHeaders",
    "_getConfiguredRequestHeaders",
    "msg",
    "assertFalse",
    "test",
    "args",
    "setCache",
    "assertTrue",
    "readystatechange",
    "spy",
    "addListener",
    "respond",
    "success",
    "load",
    "loadEnd",
    "onabort",
    "timeout",
    "setTimeout",
    "ontimeout",
    "error",
    "respondError",
    "statusError",
    "fail",
    "that",
    "assertEventFired",
    "evt",
    "assertMatch",
    "getData",
    "getPhase",
    "phases",
    "push",
    "assertArrayEquals",
    "readyState",
    "onreadystatechange",
    "status",
    "getReadyState",
    "onloadend",
    "getFakeReq",
    "getRequests",
    "slice",
    "noCache",
    "url",
    "util",
    "Uri",
    "appendParamsToUrl",
    "Date",
    "valueOf",
    "onerror",
    "onload",
    "io",
    "request",
    "MRequest"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AAGA;;;;;AAKA;;;;;;;AAOAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,6BAAhB,EACA;AAEEC,IAAAA,OAAO,EACP;AAEEC,MAAAA,UAAU,EAAE,sBAAW;AACrBP,QAAAA,EAAE,CAACQ,KAAH,CAASH,MAAT,CAAgB,OAAhB,EAAyB;AACvBI,UAAAA,MAAM,EAAGT,EAAE,CAACU,IAAH,CAAQC,MADM;AAGvBC,UAAAA,UAAU,EACV;AACEC,YAAAA,IAAI,EAAE;AACJC,cAAAA,IAAI,EAAE;AADF;AADR;AAJuB,SAAzB;AAUD,OAbH;AAeE;AACA;AACA;AAEA,6CAAuC,0CACvC;AACE,aAAKC,GAAL,CAASC,OAAT;AAEA,aAAKC,IAAL,CAAU,GAAV,EAAe,YAAW;AACxB,eAAKC,YAAL,CAAkB,KAAKC,SAAL,CAAeH,OAAjC;AACD,SAFD,EAEG,IAFH;AAGD,OA1BH;AA4BE,8BAAwB,4BAAW;AACjC,aAAKI,YAAL,CAAkB,KAAKD,SAAvB,EAAkC,KAAKJ,GAAL,CAASM,YAAT,EAAlC;AACD,OA9BH;AAgCE;AACA;AACA;AAEA,0BAAoB,uBAAW;AAC7B,aAAKN,GAAL,CAASO,IAAT;AAEA,aAAKC,gBAAL,CAAsB,KAAKJ,SAAL,CAAeK,IAArC,EAA2C,KAA3C,EAAkD,KAAlD;AACA,aAAKN,YAAL,CAAkB,KAAKC,SAAL,CAAeG,IAAjC;AACD,OAzCH;AA2CE,sCAAgC,mCAAW;AACzC,aAAKP,GAAL,CAASU,MAAT,CAAgB,sBAAhB;AACA,aAAKV,GAAL,CAASO,IAAT;AAEA,aAAKC,gBAAL,CAAsB,KAAKJ,SAAL,CAAeK,IAArC,EAA2C,KAA3C,EAAkD,aAAlD;AACD,OAhDH;AAkDE;AACA;AACA;AAEA,6BAAuB,4BAAW;AAChC,aAAKT,GAAL,CAASW,KAAT;AAEA,aAAKR,YAAL,CAAkB,KAAKC,SAAL,CAAeO,KAAjC;AACD,OA1DH;AA4DE;AACA;AACA;AAEA,8CAAwC,yCAAW;AACjD,aAAKX,GAAL,CAASY,cAAT,CAAwB,KAAxB;AACA,aAAKZ,GAAL,CAASO,IAAT;AAEA,aAAKC,gBAAL,CAAsB,KAAKJ,SAAL,CAAeG,IAArC,EAA2CM,SAA3C;AACD,OArEH;AAuEE,0DAAoD,mDAAW;AAC7D,aAAKb,GAAL,CAASY,cAAT,CAAwB,KAAxB;AACA,aAAKZ,GAAL,CAASO,IAAT;AAEA,aAAKC,gBAAL,CAAsB,KAAKJ,SAAL,CAAeK,IAArC,EAA2C,KAA3C,EAAkD,SAAlD;AACD,OA5EH;AA8EE,uDAAiD,gDAAW;AAC1D,aAAKT,GAAL,CAASY,cAAT,CAAwB;AAACd,UAAAA,IAAI,EAAE;AAAP,SAAxB;AACA,aAAKE,GAAL,CAASO,IAAT;AAEA,aAAKC,gBAAL,CAAsB,KAAKJ,SAAL,CAAeK,IAArC,EAA2C,KAA3C,EAAkD,eAAlD;AACD,OAnFH;AAqFE,+DAAyD,uDAAW;AAClE,aAAKjB,UAAL;AACA,YAAIsB,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,aAAKf,GAAL,CAASY,cAAT,CAAwBE,GAAxB;AACA,aAAKd,GAAL,CAASO,IAAT;AAEA,aAAKC,gBAAL,CAAsB,KAAKJ,SAAL,CAAeK,IAArC,EAA2C,KAA3C,EAAkD,eAAlD;AACAK,QAAAA,GAAG,CAACb,OAAJ;AACD,OA7FH;AA+FE,wDAAkD,kDAAW;AAC3D,YAAI,CAACe,MAAM,CAACC,QAAZ,EAAsB;AACpB,eAAKC,IAAL,CAAU,4BAAV;AACD;;AAED,YAAI,CAAC,KAAKlB,GAAL,CAASmB,SAAd,EAAyB;AACvB,eAAKD,IAAL,CAAU,+CAAV;AACD;;AAED,YAAIE,QAAQ,GAAG,IAAIH,QAAJ,EAAf;AACAG,QAAAA,QAAQ,CAACC,MAAT,CAAgB,KAAhB,EAAuB,KAAvB;AACAD,QAAAA,QAAQ,CAACC,MAAT,CAAgB,KAAhB,EAAuB,KAAvB;AAEA,aAAKrB,GAAL,CAASmB,SAAT,CAAmB,MAAnB;AACA,aAAKnB,GAAL,CAASY,cAAT,CAAwBQ,QAAxB;AACA,aAAKpB,GAAL,CAASO,IAAT;AAEA,aAAKC,gBAAL,CAAsB,KAAKJ,SAAL,CAAeG,IAArC,EAA2Ca,QAA3C;AACD,OAjHH;AAmHE;AACA;AACA;AAEA,kCAA4B,gCAAW;AACrC,aAAKpB,GAAL,CAASsB,gBAAT,CAA0B,KAA1B,EAAiC,OAAjC;AACA,aAAKtB,GAAL,CAASO,IAAT;AAEA,aAAKC,gBAAL,CAAsB,KAAKJ,SAAL,CAAekB,gBAArC,EAAuD,KAAvD,EAA8D,OAA9D;AACD,OA5HH;AA8HE,kDAA4C,6CAAW;AACrD,YAAIC,IAAI,GAAG,KAAKnB,SAAL,CAAekB,gBAAf,CAAgCE,QAAhC,CAAyC,KAAzC,EAAgD,OAAhD,CAAX;AAEA,aAAKxB,GAAL,CAASsB,gBAAT,CAA0B,KAA1B,EAAiC,OAAjC;AACA,aAAKtB,GAAL,CAASsB,gBAAT,CAA0B,KAA1B,EAAiC,OAAjC;AACA,aAAKtB,GAAL,CAASO,IAAT;AAEA,aAAKkB,gBAAL,CAAsBF,IAAI,CAACC,QAAL,CAAc,KAAd,EAAqB,OAArB,CAAtB;AACD,OAtIH;AAwIE,kCAA4B,gCAAW;AACrC,aAAKxB,GAAL,CAASsB,gBAAT,CAA0B,KAA1B,EAAiC,OAAjC;AAEA,aAAKjB,YAAL,CAAkB,OAAlB,EAA2B,KAAKL,GAAL,CAAS0B,gBAAT,CAA0B,KAA1B,CAA3B;AACD,OA5IH;AA8IE,qCAA+B,mCAAW;AACxC,YAAIH,IAAJ;AAEA,aAAKvB,GAAL,CAASsB,gBAAT,CAA0B,KAA1B,EAAiC,OAAjC;AACA,aAAKtB,GAAL,CAAS2B,mBAAT,CAA6B,KAA7B;AAEAJ,QAAAA,IAAI,GAAG,KAAKnB,SAAL,CAAekB,gBAAf,CAAgCE,QAAhC,CAAyC,KAAzC,EAAgD,OAAhD,CAAP;AACA,aAAKxB,GAAL,CAASO,IAAT;AAEA,aAAKqB,eAAL,CAAqBL,IAArB;AACD,OAxJH;AA0JE,uCAAiC,oCAAW;AAC1C,aAAKvB,GAAL,CAASsB,gBAAT,CAA0B,KAA1B,EAAiC,OAAjC;AACA,aAAKtB,GAAL,CAASsB,gBAAT,CAA0B,UAA1B,EAAsC,OAAtC;AAEA,aAAKjB,YAAL,CAAkB,OAAlB,EAA2B,KAAKL,GAAL,CAAS6B,qBAAT,GAAiC,KAAjC,CAA3B;AACA,aAAKxB,YAAL,CAAkB,OAAlB,EAA2B,KAAKL,GAAL,CAAS6B,qBAAT,GAAiC,UAAjC,CAA3B;AACD,OAhKH;AAkKE,gFAA0E,yEAAW;AACnF,aAAK7B,GAAL,CAASsB,gBAAT,CAA0B,KAA1B,EAAiC,OAAjC;;AACA,aAAKtB,GAAL,CAAS8B,4BAAT,GAAwC,YAAW;AAAE,iBAAO;AAAC,wBAAY;AAAb,WAAP;AAA+B,SAApF;;AAEA,aAAKzB,YAAL,CAAkB,OAAlB,EAA2B,KAAKL,GAAL,CAAS6B,qBAAT,GAAiC,KAAjC,CAA3B;AACA,aAAKxB,YAAL,CAAkB,OAAlB,EAA2B,KAAKL,GAAL,CAAS6B,qBAAT,GAAiC,UAAjC,CAA3B;AACD,OAxKH;AA0KE,iDAA2C,4CAAW;AACpD,aAAK7B,GAAL,CAASO,IAAT;AAEA,YAAIwB,GAAG,GAAG,mCAAV;AACA,aAAKC,WAAL,CAAiB,YAAYC,IAAZ,CAAiB,KAAK7B,SAAL,CAAeK,IAAf,CAAoByB,IAApB,CAAyB,CAAzB,EAA4B,CAA5B,CAAjB,CAAjB,EAAmEH,GAAnE;AACD,OA/KH;AAiLE,+CAAyC,2CAAW;AAClD,aAAK/B,GAAL,CAASmC,QAAT,CAAkB,KAAlB;AACA,aAAKnC,GAAL,CAASO,IAAT;AAEA,YAAIwB,GAAG,GAAG,yCAAV;AACA,aAAKK,UAAL,CAAgB,oBAAoBH,IAApB,CAAyB,KAAK7B,SAAL,CAAeK,IAAf,CAAoByB,IAApB,CAAyB,CAAzB,EAA4B,CAA5B,CAAzB,CAAhB,EAA0EH,GAA1E;AACD,OAvLH;AAyLE;AACA;AACA;AAEA,qCAA+B,oCAAW;AACxC,YAAI/B,GAAG,GAAG,KAAKA,GAAf;AAAA,YACIqC,gBAAgB,GAAG,KAAKC,GAAL,EADvB;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,kBAAhB,EAAoCF,gBAApC;AACA,aAAKG,OAAL;AAEA,aAAKf,gBAAL,CAAsBY,gBAAtB;AACD,OArMH;AAuME,4BAAsB,2BAAW;AAC/B,YAAIrC,GAAG,GAAG,KAAKA,GAAf;AAAA,YACIyC,OAAO,GAAG,KAAKH,GAAL,EADd;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,SAAhB,EAA2BE,OAA3B;AACA,aAAKD,OAAL;AAEA,aAAKf,gBAAL,CAAsBgB,OAAtB;AACD,OA/MH;AAiNE,oDAA8C,+CAAW;AACvD,YAAIzC,GAAG,GAAG,KAAKA,GAAf;AAAA,YACIyC,OAAO,GAAG,KAAKH,GAAL,EADd;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,SAAhB,EAA2BE,OAA3B;AACA,aAAKD,OAAL,CAAa,GAAb;AAEA,aAAKZ,eAAL,CAAqBa,OAArB;AACD,OAzNH;AA2NE,yBAAmB,wBAAW;AAC5B,YAAIzC,GAAG,GAAG,KAAKA,GAAf;AAAA,YACI0C,IAAI,GAAG,KAAKJ,GAAL,EADX;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,MAAhB,EAAwBG,IAAxB;AACA,aAAKF,OAAL;AAEA,aAAKf,gBAAL,CAAsBiB,IAAtB;AACD,OAnOH;AAqOE,4BAAsB,2BAAW;AAC/B,YAAI1C,GAAG,GAAG,KAAKA,GAAf;AAAA,YACI2C,OAAO,GAAG,KAAKL,GAAL,EADd;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,SAAhB,EAA2BI,OAA3B;AACA,aAAKH,OAAL;AAEA,aAAKf,gBAAL,CAAsBkB,OAAtB;AACD,OA7OH;AA+OE,0BAAoB,yBAAW;AAC7B,YAAI3C,GAAG,GAAG,KAAKA,GAAf;AAAA,YACIW,KAAK,GAAG,KAAK2B,GAAL,EADZ;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,OAAhB,EAAyB5B,KAAzB;AACA,aAAKP,SAAL,CAAewC,OAAf;AAEA,aAAKnB,gBAAL,CAAsBd,KAAtB;AACD,OAvPH;AAyPE,4BAAsB,2BAAW;AAC/B,YAAIX,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAAA,YAEIyC,OAAO,GAAG,KAAKP,GAAL,EAFd;AAIAtC,QAAAA,GAAG,CAAC8C,UAAJ,CAAe,GAAf;AACA9C,QAAAA,GAAG,CAACO,IAAJ;AAEAP,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,SAAhB,EAA2BM,OAA3B;AACAzC,QAAAA,SAAS,CAAC2C,SAAV;AAEA,aAAK1C,YAAL,CAAkB,GAAlB,EAAuBD,SAAS,CAACyC,OAAjC;AACA,aAAKpB,gBAAL,CAAsBoB,OAAtB;AACD,OAtQH;AAwQE,0BAAoB,yBAAW;AAC7B,YAAI7C,GAAG,GAAG,KAAKA,GAAf;AAAA,YACIgD,KAAK,GAAG,KAAKV,GAAL,EADZ;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,OAAhB,EAAyBS,KAAzB;AACA,aAAKC,YAAL;AAEA,aAAKxB,gBAAL,CAAsBuB,KAAtB;AACD,OAhRH;AAkRE,gCAA0B,+BAAW;AACnC,YAAIhD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACIkD,WAAW,GAAG,KAAKZ,GAAL,EADlB;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,aAAhB,EAA+BW,WAA/B;AACA,aAAKV,OAAL,CAAa,GAAb;AAEA,aAAKf,gBAAL,CAAsByB,WAAtB;AACD,OA1RH;AA4RE,6CAAuC,yCAAW;AAChD,YAAIlD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACImD,IAAI,GAAG,KAAKb,GAAL,EADX;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,MAAhB,EAAwBY,IAAxB;AACA,aAAKX,OAAL,CAAa,GAAb;AAEA,aAAKf,gBAAL,CAAsB0B,IAAtB;AACD,OApSH;AAsSE,0CAAoC,sCAAW;AAC7C,YAAInD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACImD,IAAI,GAAG,KAAKb,GAAL,EADX;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,MAAhB,EAAwBY,IAAxB;AACA,aAAKF,YAAL;AAEA,aAAKxB,gBAAL,CAAsB0B,IAAtB;AACD,OA9SH;AAgTE,oCAA8B,iCAAW;AACvC,YAAInD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACImD,IAAI,GAAG,KAAKb,GAAL,EADX;AAGAtC,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,MAAhB,EAAwBY,IAAxB;AACA,aAAKN,OAAL;AAEA,aAAKpB,gBAAL,CAAsB0B,IAAtB;AACD,OAxTH;AA0TE,gCAA0B,+BAAW;AACnC,YAAInD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACIoD,IAAI,GAAG,IADX;AAGA,aAAKC,gBAAL,CAAsBrD,GAAtB,EAA2B,aAA3B,EAA0C,YAAW;AACnDoD,UAAAA,IAAI,CAACZ,OAAL;AACD,SAFD,EAEG,UAASc,GAAT,EAAc;AACfF,UAAAA,IAAI,CAACG,WAAL,CAAiBD,GAAG,CAACE,OAAJ,EAAjB,EAAgC,cAAhC;AACD,SAJD;AAKD,OAnUH;AAqUE;AACA;AACA;AAEA,+BAAyB,6BAAW;AAClC,aAAKnD,YAAL,CAAkB,QAAlB,EAA4B,KAAKL,GAAL,CAASyD,QAAT,EAA5B;AACD,OA3UH;AA6UE,0CAAoC,sCAAW;AAC7C,YAAIzD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACI0D,MAAM,GAAG,EADb;AAGA1D,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,aAAhB,EAA+B,YAAW;AACxCmB,UAAAA,MAAM,CAACC,IAAP,CAAY3D,GAAG,CAACyD,QAAJ,EAAZ;AACD,SAFD;AAIAzD,QAAAA,GAAG,CAACU,MAAJ,CAAW,MAAX;AACAV,QAAAA,GAAG,CAACO,IAAJ;AAEA,aAAKqD,iBAAL,CAAuB,CAAC,QAAD,EAAW,MAAX,CAAvB,EAA2CF,MAA3C;AACD,OAzVH;AA2VE,6BAAuB,2BAAW;AAChC,YAAI1D,GAAG,GAAG,KAAKA,GAAf;AAEAA,QAAAA,GAAG,CAACU,MAAJ,CAAW,MAAX;AACAV,QAAAA,GAAG,CAACO,IAAJ;AAEA,aAAKF,YAAL,CAAkB,MAAlB,EAA0BL,GAAG,CAACyD,QAAJ,EAA1B;AACD,OAlWH;AAoWE,gCAA0B,8BAAW;AACnC,YAAIzD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAGAA,QAAAA,SAAS,CAACyD,UAAV,GAAuB,CAAvB;AACAzD,QAAAA,SAAS,CAAC0D,kBAAV;AAEA,aAAKzD,YAAL,CAAkB,SAAlB,EAA6BL,GAAG,CAACyD,QAAJ,EAA7B;AACD,OA5WH;AA8WE,4CAAsC,yCAAW;AAC/C,YAAIzD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAAA,YAEIsD,MAAM,GAAG,EAFb;AAIA1D,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,aAAhB,EAA+B,YAAW;AACxCmB,UAAAA,MAAM,CAACC,IAAP,CAAY3D,GAAG,CAACyD,QAAJ,EAAZ;AACD,SAFD;AAIArD,QAAAA,SAAS,CAACyD,UAAV,GAAuB,CAAvB;AACAzD,QAAAA,SAAS,CAAC0D,kBAAV,GAV+C,CAY/C;;AACA,aAAKzD,YAAL,CAAkB,MAAlB,EAA0BqD,MAAM,CAAC,CAAD,CAAhC;AACD,OA5XH;AA8XE,gCAA0B,8BAAW;AACnC,YAAI1D,GAAG,GAAG,KAAKA,GAAf;AAEA,aAAKwC,OAAL;AACA,aAAKnC,YAAL,CAAkB,SAAlB,EAA6BL,GAAG,CAACyD,QAAJ,EAA7B;AACD,OAnYH;AAqYE;AAEA,oCAA8B,kCAAW;AACvC,YAAIzD,GAAG,GAAG,KAAKA,GAAf;AAEA,aAAKwC,OAAL,CAAa,GAAb;AACA,aAAKnC,YAAL,CAAkB,aAAlB,EAAiCL,GAAG,CAACyD,QAAJ,EAAjC;AACD,OA5YH;AA8YE,8BAAwB,4BAAW;AACjC,YAAIzD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAGAJ,QAAAA,GAAG,CAACW,KAAJ;AACAP,QAAAA,SAAS,CAACwC,OAAV,GALiC,CAOjC;;AACAxC,QAAAA,SAAS,CAACyD,UAAV,GAAuB,CAAvB;AACAzD,QAAAA,SAAS,CAAC0D,kBAAV;AAEA,aAAKzD,YAAL,CAAkB,OAAlB,EAA2BL,GAAG,CAACyD,QAAJ,EAA3B;AACD,OA1ZH;AA4ZE,8CAAwC,yCAAW;AACjD,YAAIzD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAGAJ,QAAAA,GAAG,CAACW,KAAJ;AACAP,QAAAA,SAAS,CAACwC,OAAV,GALiD,CAOjD;;AACAxC,QAAAA,SAAS,CAAC2D,MAAV,GAAmB,GAAnB,CARiD,CAUjD;;AACA3D,QAAAA,SAAS,CAACyD,UAAV,GAAuB,CAAvB;AACAzD,QAAAA,SAAS,CAAC0D,kBAAV;AAEA,aAAKzD,YAAL,CAAkB,OAAlB,EAA2BL,GAAG,CAACyD,QAAJ,EAA3B;AACD,OA3aH;AA6aE,qEAA+D,6DAAW;AACxE,YAAIzD,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAGAJ,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,kBAAhB,EAAoC,YAAW;AAC7C,cAAIvC,GAAG,CAACgE,aAAJ,MAAuB,CAA3B,EAA8B;AAC5B,iBAAK3D,YAAL,CAAkB,OAAlB,EAA2BL,GAAG,CAACyD,QAAJ,EAA3B;AACD;AACF,SAJD,EAIG,IAJH;AAMAzD,QAAAA,GAAG,CAACO,IAAJ;AACAP,QAAAA,GAAG,CAACW,KAAJ,GAXwE,CAaxE;;AACAP,QAAAA,SAAS,CAACyD,UAAV,GAAuB,CAAvB;AACAzD,QAAAA,SAAS,CAAC0D,kBAAV;AAEA1D,QAAAA,SAAS,CAACwC,OAAV;AACD,OA/bH;AAicE,uEAAiE,+DAAW;AAC1E,YAAI5C,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAGAJ,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,kBAAhB,EAAoC,YAAW;AAC7C,cAAIvC,GAAG,CAACgE,aAAJ,MAAuB,CAA3B,EAA8B;AAC5B,iBAAK3D,YAAL,CAAkB,OAAlB,EAA2BL,GAAG,CAACyD,QAAJ,EAA3B;AACD;AACF,SAJD,EAIG,IAJH;AAMAzD,QAAAA,GAAG,CAACO,IAAJ,GAV0E,CAY1E;;AACAH,QAAAA,SAAS,CAACyD,UAAV,GAAuB,CAAvB;AACAzD,QAAAA,SAAS,CAAC0D,kBAAV,GAd0E,CAgB1E;;AACA9D,QAAAA,GAAG,CAACW,KAAJ,GAjB0E,CAmB1E;;AACAP,QAAAA,SAAS,CAACyD,UAAV,GAAuB,CAAvB;AACAzD,QAAAA,SAAS,CAAC0D,kBAAV;AACA1D,QAAAA,SAAS,CAACwC,OAAV;AACD,OAxdH;AA0dE,6DAAuD,sDAAW;AAChE,YAAI5C,GAAG,GAAG,KAAKA,GAAf;AAAA,YACII,SAAS,GAAG,KAAKA,SADrB;AAGAJ,QAAAA,GAAG,CAACuC,WAAJ,CAAgB,SAAhB,EAA2B,YAAW;AACpC,eAAKlC,YAAL,CAAkB,OAAlB,EAA2BL,GAAG,CAACyD,QAAJ,EAA3B;AACD,SAFD,EAEG,IAFH;AAIAzD,QAAAA,GAAG,CAACO,IAAJ;AACAP,QAAAA,GAAG,CAACW,KAAJ,GATgE,CAWhE;;AACAP,QAAAA,SAAS,CAACyD,UAAV,GAAuB,CAAvB;AACAzD,QAAAA,SAAS,CAAC6D,SAAV;AAEA7D,QAAAA,SAAS,CAACwC,OAAV;AACD,OA1eH;AA4eE,gCAA0B,8BAAW;AACnC,YAAI5C,GAAG,GAAG,KAAKA,GAAf;AAEA,aAAK6C,OAAL;AACA,aAAKxC,YAAL,CAAkB,SAAlB,EAA6BL,GAAG,CAACyD,QAAJ,EAA7B;AACD,OAjfH;AAmfES,MAAAA,UAAU,EAAE,sBAAW;AACrB,eAAO,KAAKC,WAAL,GAAmBC,KAAnB,CAAyB,CAAC,CAA1B,EAA6B,CAA7B,CAAP;AACD,OArfH;AAufEC,MAAAA,OAAO,EAAE,iBAASC,GAAT,EAAc;AACrB,eAAOrF,EAAE,CAACsF,IAAH,CAAQC,GAAR,CAAYC,iBAAZ,CAA8BH,GAA9B,EAAmC,aAAc,IAAII,IAAJ,EAAD,CAAWC,OAAX,EAAhD,CAAP;AACD,OAzfH;AA2fEnC,MAAAA,OAAO,EAAE,iBAASuB,MAAT,EAAiBf,KAAjB,EAAwB;AAC/B,YAAI5C,SAAS,GAAG,KAAKA,SAArB;AAEAA,QAAAA,SAAS,CAAC2D,MAAV,GAAmB,OAAOA,MAAP,KAAkB,WAAlB,GAAgC,GAAhC,GAAsCA,MAAzD;AACA3D,QAAAA,SAAS,CAACyD,UAAV,GAAuB,CAAvB;AACAzD,QAAAA,SAAS,CAAC0D,kBAAV;;AAEA,SAAC,YAAW;AACV,cAAId,KAAK,KAAK,SAAd,EAAyB;AACvB5C,YAAAA,SAAS,CAAC2C,SAAV;AACA;AACD;;AAED,cAAIC,KAAK,KAAK,SAAd,EAAyB;AACvB5C,YAAAA,SAAS,CAACwE,OAAV;AACA;AACD;;AAEDxE,UAAAA,SAAS,CAACyE,MAAV;AACD,SAZD;;AAcAzE,QAAAA,SAAS,CAAC6D,SAAV;AACD,OAjhBH;AAmhBEhB,MAAAA,YAAY,EAAE,wBAAW;AACvB,aAAKT,OAAL,CAAa,CAAb,EAAgB,SAAhB;AACD,OArhBH;AAuhBEK,MAAAA,OAAO,EAAE,mBAAW;AAClB,aAAKL,OAAL,CAAa,CAAb,EAAgB,SAAhB;AACD;AAzhBH;AAHF,GADA;AAjCAvD,EAAAA,EAAE,CAACgD,IAAH,CAAQ6C,EAAR,CAAWC,OAAX,CAAmBC,QAAnB,CAA4B5F,aAA5B,GAA4CA,aAA5C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/* ************************************************************************\n************************************************************************ */\n\n/**\n * @ignore(Klass)\n * @asset(qx/test/xmlhttp/*)\n */\n\n/**\n * Tests asserting shared behavior of io.request.* classes. Also provides\n * common helpers.\n *\n * It should be noted that tests defined here fake an ideal transport. The\n * transport itself is tested elsewhere (see {@link qx.test.bom.request}).\n */\nqx.Mixin.define(\"qx.test.io.request.MRequest\",\n{\n\n  members :\n  {\n\n    setUpKlass: function() {\n      qx.Class.define(\"Klass\", {\n        extend : qx.core.Object,\n\n        properties :\n        {\n          affe: {\n            init: true\n          }\n        }\n      });\n    },\n\n    //\n    // General\n    //\n\n    \"test: dispose transport on destruct\": function()\n    {\n      this.req.dispose();\n\n      this.wait(100, function() {\n        this.assertCalled(this.transport.dispose);\n      }, this);\n    },\n\n    \"test: getTransport()\": function() {\n      this.assertEquals(this.transport, this.req.getTransport());\n    },\n\n    //\n    // Send\n    //\n\n    \"test: send() GET\": function() {\n      this.req.send();\n\n      this.assertCalledWith(this.transport.open, \"GET\", \"url\");\n      this.assertCalled(this.transport.send);\n    },\n\n    \"test: drop fragment from URL\": function() {\n      this.req.setUrl(\"example.com#fragment\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.open, \"GET\", \"example.com\");\n    },\n\n    //\n    // Abort\n    //\n\n    \"test: abort request\": function() {\n      this.req.abort();\n\n      this.assertCalled(this.transport.abort);\n    },\n\n    //\n    // Data\n    //\n\n    \"test: not send data with GET request\": function() {\n      this.req.setRequestData(\"str\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, undefined);\n    },\n\n    \"test: append string data to URL with GET request\": function() {\n      this.req.setRequestData(\"str\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.open, \"GET\", \"url?str\");\n    },\n\n    \"test: append obj data to URL with GET request\": function() {\n      this.req.setRequestData({affe: true});\n      this.req.send();\n\n      this.assertCalledWith(this.transport.open, \"GET\", \"url?affe=true\");\n    },\n\n    \"test: append qooxdoo obj data to URL with GET request\": function() {\n      this.setUpKlass();\n      var obj = new Klass();\n      this.req.setRequestData(obj);\n      this.req.send();\n\n      this.assertCalledWith(this.transport.open, \"GET\", \"url?affe=true\");\n      obj.dispose();\n    },\n\n    \"test: append FormData to URL with POST request\": function() {\n      if (!window.FormData) {\n        this.skip(\"FormData API not supported\");\n      }\n\n      if (!this.req.setMethod) {\n        this.skip(\"POST requests not supported by this transport\");\n      }\n\n      var formData = new FormData();\n      formData.append(\"foo\", \"bar\");\n      formData.append(\"baz\", \"qux\");\n\n      this.req.setMethod(\"POST\");\n      this.req.setRequestData(formData);\n      this.req.send();\n\n      this.assertCalledWith(this.transport.send, formData);\n    },\n\n    //\n    // Header and Params\n    //\n\n    \"test: set request header\": function() {\n      this.req.setRequestHeader(\"key\", \"value\");\n      this.req.send();\n\n      this.assertCalledWith(this.transport.setRequestHeader, \"key\", \"value\");\n    },\n\n    \"test: set request header does not append\": function() {\n      var stub = this.transport.setRequestHeader.withArgs(\"key\", \"value\");\n\n      this.req.setRequestHeader(\"key\", \"value\");\n      this.req.setRequestHeader(\"key\", \"value\");\n      this.req.send();\n\n      this.assertCalledOnce(stub.withArgs(\"key\", \"value\"));\n    },\n\n    \"test: get request header\": function() {\n      this.req.setRequestHeader(\"key\", \"value\");\n\n      this.assertEquals(\"value\", this.req.getRequestHeader(\"key\"));\n    },\n\n    \"test: remove request header\": function() {\n      var stub;\n\n      this.req.setRequestHeader(\"key\", \"value\");\n      this.req.removeRequestHeader(\"key\");\n\n      stub = this.transport.setRequestHeader.withArgs(\"key\", \"value\");\n      this.req.send();\n\n      this.assertNotCalled(stub);\n    },\n\n    \"test: get all request headers\": function() {\n      this.req.setRequestHeader(\"key\", \"value\");\n      this.req.setRequestHeader(\"otherkey\", \"value\");\n\n      this.assertEquals(\"value\", this.req._getAllRequestHeaders()[\"key\"]);\n      this.assertEquals(\"value\", this.req._getAllRequestHeaders()[\"otherkey\"]);\n    },\n\n    \"test: get all request headers includes configuration dependent headers\": function() {\n      this.req.setRequestHeader(\"key\", \"value\");\n      this.req._getConfiguredRequestHeaders = function() { return {\"otherkey\": \"value\"}; };\n\n      this.assertEquals(\"value\", this.req._getAllRequestHeaders()[\"key\"]);\n      this.assertEquals(\"value\", this.req._getAllRequestHeaders()[\"otherkey\"]);\n    },\n\n    \"test: not append cache parameter to URL\": function() {\n      this.req.send();\n\n      var msg = \"nocache parameter must not be set\";\n      this.assertFalse(/\\?nocache/.test(this.transport.open.args[0][1]), msg);\n    },\n\n    \"test: append nocache parameter to URL\": function() {\n      this.req.setCache(false);\n      this.req.send();\n\n      var msg = \"nocache parameter must be set to number\";\n      this.assertTrue(/\\?nocache=\\d{13,}/.test(this.transport.open.args[0][1]), msg);\n    },\n\n    //\n    // Events\n    //\n\n    \"test: fire readyStateChange\": function() {\n      var req = this.req,\n          readystatechange = this.spy();\n\n      req.addListener(\"readyStateChange\", readystatechange);\n      this.respond();\n\n      this.assertCalledOnce(readystatechange);\n    },\n\n    \"test: fire success\": function() {\n      var req = this.req,\n          success = this.spy();\n\n      req.addListener(\"success\", success);\n      this.respond();\n\n      this.assertCalledOnce(success);\n    },\n\n    \"test: not fire success on erroneous status\": function() {\n      var req = this.req,\n          success = this.spy();\n\n      req.addListener(\"success\", success);\n      this.respond(500);\n\n      this.assertNotCalled(success);\n    },\n\n    \"test: fire load\": function() {\n      var req = this.req,\n          load = this.spy();\n\n      req.addListener(\"load\", load);\n      this.respond();\n\n      this.assertCalledOnce(load);\n    },\n\n    \"test: fire loadEnd\": function() {\n      var req = this.req,\n          loadEnd = this.spy();\n\n      req.addListener(\"loadEnd\", loadEnd);\n      this.respond();\n\n      this.assertCalledOnce(loadEnd);\n    },\n\n    \"test: fire abort\": function() {\n      var req = this.req,\n          abort = this.spy();\n\n      req.addListener(\"abort\", abort);\n      this.transport.onabort();\n\n      this.assertCalledOnce(abort);\n    },\n\n    \"test: fire timeout\": function() {\n      var req = this.req,\n          transport = this.transport,\n          timeout = this.spy();\n\n      req.setTimeout(100);\n      req.send();\n\n      req.addListener(\"timeout\", timeout);\n      transport.ontimeout();\n\n      this.assertEquals(100, transport.timeout);\n      this.assertCalledOnce(timeout);\n    },\n\n    \"test: fire error\": function() {\n      var req = this.req,\n          error = this.spy();\n\n      req.addListener(\"error\", error);\n      this.respondError();\n\n      this.assertCalledOnce(error);\n    },\n\n    \"test: fire statusError\": function() {\n      var req = this.req,\n          statusError = this.spy();\n\n      req.addListener(\"statusError\", statusError);\n      this.respond(500);\n\n      this.assertCalledOnce(statusError);\n    },\n\n    \"test: fire fail on erroneous status\": function() {\n      var req = this.req,\n          fail = this.spy();\n\n      req.addListener(\"fail\", fail);\n      this.respond(500);\n\n      this.assertCalledOnce(fail);\n    },\n\n    \"test: fire fail on network error\": function() {\n      var req = this.req,\n          fail = this.spy();\n\n      req.addListener(\"fail\", fail);\n      this.respondError();\n\n      this.assertCalledOnce(fail);\n    },\n\n    \"test: fire fail on timeout\": function() {\n      var req = this.req,\n          fail = this.spy();\n\n      req.addListener(\"fail\", fail);\n      this.timeout();\n\n      this.assertCalledOnce(fail);\n    },\n\n    \"test: fire changePhase\": function() {\n      var req = this.req,\n          that = this;\n\n      this.assertEventFired(req, \"changePhase\", function() {\n        that.respond();\n      }, function(evt) {\n        that.assertMatch(evt.getData(), \"load|success\");\n      });\n    },\n\n    //\n    // Phase\n    //\n\n    \"test: phase is unsent\": function() {\n      this.assertEquals(\"unsent\", this.req.getPhase());\n    },\n\n    \"test: phase was open before send\": function() {\n      var req = this.req,\n          phases = [];\n\n      req.addListener(\"changePhase\", function() {\n        phases.push(req.getPhase());\n      });\n\n      req.setUrl(\"/url\");\n      req.send();\n\n      this.assertArrayEquals([\"opened\", \"sent\"], phases);\n    },\n\n    \"test: phase is sent\": function() {\n      var req = this.req;\n\n      req.setUrl(\"/url\");\n      req.send();\n\n      this.assertEquals(\"sent\", req.getPhase());\n    },\n\n    \"test: phase is loading\": function() {\n      var req = this.req,\n          transport = this.transport;\n\n      transport.readyState = 3;\n      transport.onreadystatechange();\n\n      this.assertEquals(\"loading\", req.getPhase());\n    },\n\n    \"test: phase is load intermediately\": function() {\n      var req = this.req,\n          transport = this.transport,\n          phases = [];\n\n      req.addListener(\"changePhase\", function() {\n        phases.push(req.getPhase());\n      });\n\n      transport.readyState = 4;\n      transport.onreadystatechange();\n\n      // phases = [\"load\", \"statusError\"]\n      this.assertEquals(\"load\", phases[0]);\n    },\n\n    \"test: phase is success\": function() {\n      var req = this.req;\n\n      this.respond();\n      this.assertEquals(\"success\", req.getPhase());\n    },\n\n    // Error handling\n\n    \"test: phase is statusError\": function() {\n      var req = this.req;\n\n      this.respond(500);\n      this.assertEquals(\"statusError\", req.getPhase());\n    },\n\n    \"test: phase is abort\": function() {\n      var req = this.req,\n          transport = this.transport;\n\n      req.abort();\n      transport.onabort();\n\n      // Transport switches to readyState DONE on abort\n      transport.readyState = 4;\n      transport.onreadystatechange();\n\n      this.assertEquals(\"abort\", req.getPhase());\n    },\n\n    \"test: phase is abort when from cache\": function() {\n      var req = this.req,\n          transport = this.transport;\n\n      req.abort();\n      transport.onabort();\n\n      // Synchronously served from cached\n      transport.status = 304;\n\n      // Transport switches to readyState DONE on abort\n      transport.readyState = 4;\n      transport.onreadystatechange();\n\n      this.assertEquals(\"abort\", req.getPhase());\n    },\n\n    \"test: phase is abort on readyState DONE when aborted before\": function() {\n      var req = this.req,\n          transport = this.transport;\n\n      req.addListener(\"readyStateChange\", function() {\n        if (req.getReadyState() == 4) {\n          this.assertEquals(\"abort\", req.getPhase());\n        }\n      }, this);\n\n      req.send();\n      req.abort();\n\n      // Transport switches to readyState DONE on abort\n      transport.readyState = 4;\n      transport.onreadystatechange();\n\n      transport.onabort();\n    },\n\n    \"test: phase is abort on readyState DONE when aborting loading\": function() {\n      var req = this.req,\n          transport = this.transport;\n\n      req.addListener(\"readyStateChange\", function() {\n        if (req.getReadyState() == 4) {\n          this.assertEquals(\"abort\", req.getPhase());\n        }\n      }, this);\n\n      req.send();\n\n      // Loading\n      transport.readyState = 3;\n      transport.onreadystatechange();\n\n      // Abort loading\n      req.abort();\n\n      // Transport switches to readyState DONE on abort\n      transport.readyState = 4;\n      transport.onreadystatechange();\n      transport.onabort();\n    },\n\n    \"test: phase is abort on loadEnd when aborted before\": function() {\n      var req = this.req,\n          transport = this.transport;\n\n      req.addListener(\"loadEnd\", function() {\n        this.assertEquals(\"abort\", req.getPhase());\n      }, this);\n\n      req.send();\n      req.abort();\n\n      // Transport fires \"onloadend\" on abort\n      transport.readyState = 4;\n      transport.onloadend();\n\n      transport.onabort();\n    },\n\n    \"test: phase is timeout\": function() {\n      var req = this.req;\n\n      this.timeout();\n      this.assertEquals(\"timeout\", req.getPhase());\n    },\n\n    getFakeReq: function() {\n      return this.getRequests().slice(-1)[0];\n    },\n\n    noCache: function(url) {\n      return qx.util.Uri.appendParamsToUrl(url, \"nocache=\" + (new Date).valueOf());\n    },\n\n    respond: function(status, error) {\n      var transport = this.transport;\n\n      transport.status = typeof status === \"undefined\" ? 200 : status;\n      transport.readyState = 4;\n      transport.onreadystatechange();\n\n      (function() {\n        if (error === \"timeout\") {\n          transport.ontimeout();\n          return;\n        }\n\n        if (error === \"network\") {\n          transport.onerror();\n          return;\n        }\n\n        transport.onload();\n      })();\n\n      transport.onloadend();\n    },\n\n    respondError: function() {\n      this.respond(0, \"network\");\n    },\n\n    timeout: function() {\n      this.respond(0, \"timeout\");\n    }\n  }\n});\n"
  ]
}