{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/source/class/qx/test/io/jsonrpc/Protocol.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "MAssert",
    "construct",
    "parser",
    "jsonrpc",
    "protocol",
    "Parser",
    "members",
    "message",
    "Request",
    "expected",
    "id",
    "method",
    "params",
    "assertDeepEquals",
    "toObject",
    "parse",
    "JSON",
    "stringify",
    "Notification",
    "Error",
    "error",
    "code",
    "Protocol"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,6BAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAEEC,IAAAA,OAAO,EAAG,CAACV,EAAE,CAACW,IAAH,CAAQC,EAAR,CAAWC,OAAZ,CAFZ;;AAGEC,IAAAA,SAAS,GAAG;AACV;AACA,WAAKC,MAAL,GAAc,IAAIf,EAAE,CAACY,EAAH,CAAMI,OAAN,CAAcC,QAAd,CAAuBC,MAA3B,EAAd;AACD,KANH;;AAOEC,IAAAA,OAAO,EAAG;AACR,gDAA0C;AACxC,YAAIC,OAAO,GAAG,IAAIpB,EAAE,CAACY,EAAH,CAAMI,OAAN,CAAcC,QAAd,CAAuBI,OAA3B,CAAmC,KAAnC,EAA0C,CAAC,KAAD,EAAQ,CAAR,EAAW,KAAX,CAA1C,CAAd;AACA,YAAIC,QAAQ,GAAG;AACbC,UAAAA,EAAE,EAAE,CADS;AAEbP,UAAAA,OAAO,EAAE,KAFI;AAGbQ,UAAAA,MAAM,EAAE,KAHK;AAIbC,UAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,CAAR,EAAW,KAAX;AAJK,SAAf;AAMA,aAAKC,gBAAL,CAAsBJ,QAAtB,EAAgCF,OAAO,CAACO,QAAR,EAAhC,EARwC,CASxC;;AACA,aAAKD,gBAAL,CAAsBJ,QAAtB,EAAgC,KAAKP,MAAL,CAAYa,KAAZ,CAAkBC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAlB,EAA4CK,QAA5C,EAAhC;AACD,OAZO;;AAcR,qDAA+C;AAC7C,YAAIP,OAAO,GAAG,IAAIpB,EAAE,CAACY,EAAH,CAAMI,OAAN,CAAcC,QAAd,CAAuBc,YAA3B,CAAwC,KAAxC,EAA+C,CAAC,KAAD,EAAQ,CAAR,EAAW,KAAX,CAA/C,CAAd;AACA,YAAIT,QAAQ,GAAG;AACbN,UAAAA,OAAO,EAAE,KADI;AAEbQ,UAAAA,MAAM,EAAE,KAFK;AAGbC,UAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,CAAR,EAAW,KAAX;AAHK,SAAf;AAKA,aAAKC,gBAAL,CAAsBJ,QAAtB,EAAgCF,OAAO,CAACO,QAAR,EAAhC,EAP6C,CAQ7C;;AACA,aAAKD,gBAAL,CAAsBJ,QAAtB,EAAgC,KAAKP,MAAL,CAAYa,KAAZ,CAAkBC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAlB,EAA4CK,QAA5C,EAAhC;AACD,OAxBO;;AA0BR,sCAAgC;AAC9B,YAAIP,OAAO,GAAG,IAAIpB,EAAE,CAACY,EAAH,CAAMI,OAAN,CAAcC,QAAd,CAAuBe,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,EAAuC,QAAvC,CAAd;AACA,YAAIV,QAAQ,GAAG;AACbN,UAAAA,OAAO,EAAE,KADI;AAEbO,UAAAA,EAAE,EAAE,CAFS;AAGbU,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE,CADD;AAELd,YAAAA,OAAO,EAAE;AAFJ;AAHM,SAAf;AAQA,aAAKM,gBAAL,CAAsBJ,QAAtB,EAAgCF,OAAO,CAACO,QAAR,EAAhC,EAV8B,CAW9B;;AACA,aAAKD,gBAAL,CAAsBJ,QAAtB,EAAgC,KAAKP,MAAL,CAAYa,KAAZ,CAAkBC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAlB,EAA4CK,QAA5C,EAAhC;AACD,OAvCO;;AAyCR,uCAAiC;AAC/B,YAAIP,OAAO,GAAG,IAAIpB,EAAE,CAACY,EAAH,CAAMI,OAAN,CAAcC,QAAd,CAAuBe,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,EAAuC,QAAvC,CAAd;AACA,YAAIV,QAAQ,GAAG;AACbN,UAAAA,OAAO,EAAE,KADI;AACGO,UAAAA,EAAE,EAAE,CADP;AACUU,UAAAA,KAAK,EAAE;AAC5BC,YAAAA,IAAI,EAAE,CADsB;AACnBd,YAAAA,OAAO,EAAE;AADU;AADjB,SAAf;AAKA,aAAKM,gBAAL,CAAsBJ,QAAtB,EAAgCF,OAAO,CAACO,QAAR,EAAhC,EAP+B,CAQ/B;;AACA,aAAKD,gBAAL,CAAsBJ,QAAtB,EAAgC,KAAKP,MAAL,CAAYa,KAAZ,CAAkBC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAlB,EAA4CK,QAA5C,EAAhC;AACD;;AAnDO;AAPZ,GADA;AAlBA3B,EAAAA,EAAE,CAACW,IAAH,CAAQC,EAAR,CAAWI,OAAX,CAAmBmB,QAAnB,CAA4BhC,aAA5B,GAA4CA,aAA5C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.io.jsonrpc.Protocol\",\n{\n  extend : qx.dev.unit.TestCase,\n  include : [qx.test.io.MAssert],\n  construct() {\n    this.base(arguments);\n    this.parser = new qx.io.jsonrpc.protocol.Parser();\n  },\n  members : {\n    \"test: JSON-RPC request message object\"() {\n      let message = new qx.io.jsonrpc.protocol.Request(\"foo\", [\"bar\", 1, false]);\n      let expected = {\n        id: 1,\n        jsonrpc: \"2.0\",\n        method: \"foo\",\n        params: [\"bar\", 1, false]\n      };\n      this.assertDeepEquals(expected, message.toObject());\n      // test parser\n      this.assertDeepEquals(expected, this.parser.parse(JSON.stringify(expected)).toObject());\n    },\n\n    \"test: JSON-RPC request notification object\"() {\n      let message = new qx.io.jsonrpc.protocol.Notification(\"foo\", [\"bar\", 1, false]);\n      let expected = {\n        jsonrpc: \"2.0\",\n        method: \"foo\",\n        params: [\"bar\", 1, false]\n      };\n      this.assertDeepEquals(expected, message.toObject());\n      // test parser\n      this.assertDeepEquals(expected, this.parser.parse(JSON.stringify(expected)).toObject());\n    },\n\n    \"test: JSON-RPC error object\"() {\n      let message = new qx.io.jsonrpc.protocol.Error(1, 5, \"error!\");\n      let expected = {\n        jsonrpc: \"2.0\",\n        id: 1,\n        error: {\n          code: 5,\n          message: \"error!\"\n        }\n      };\n      this.assertDeepEquals(expected, message.toObject());\n      // test parser\n      this.assertDeepEquals(expected, this.parser.parse(JSON.stringify(expected)).toObject());\n    },\n\n    \"test: JSON-RPC result object\"() {\n      let message = new qx.io.jsonrpc.protocol.Error(1, 5, \"error!\");\n      let expected = {\n        jsonrpc: \"2.0\", id: 1, error: {\n          code: 5, message: \"error!\"\n        }\n      };\n      this.assertDeepEquals(expected, message.toObject());\n      // test parser\n      this.assertDeepEquals(expected, this.parser.parse(JSON.stringify(expected)).toObject());\n    }\n  }\n});\n"
  ]
}