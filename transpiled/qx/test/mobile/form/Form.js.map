{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/mobile/form/Form.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "mobile",
    "MobileTestCase",
    "members",
    "__username",
    "testValidation",
    "form",
    "__createForm",
    "renderer",
    "ui",
    "Single",
    "getRoot",
    "add",
    "assertFalse",
    "validate",
    "assertEquals",
    "_getChildren",
    "getChildren",
    "length",
    "assertTrue",
    "bom",
    "element",
    "has",
    "getContainerElement",
    "setValue",
    "dispose",
    "Form",
    "validationManager",
    "getValidationManager",
    "username",
    "TextField",
    "set",
    "placeholder",
    "setRequired",
    "value",
    "item",
    "valid",
    "setInvalidMessage"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.mobile.form.Form\",\n{\n  extend : qx.test.mobile.MobileTestCase,\n\n  members :\n  {\n\n    __username : null,\n\n    testValidation : function()\n    {\n      var form = this.__createForm();\n      var renderer = new qx.ui.mobile.form.renderer.Single(form);\n      this.getRoot().add(renderer);\n      this.assertFalse(form.validate());\n\n      this.assertEquals(2, renderer._getChildren()[1].getChildren().length);\n      this.assertTrue(qx.bom.element.Class.has(renderer._getChildren()[1].getChildren()[1].getContainerElement(), 'invalid'));\n\n      this.__username.setValue('myusername');\n      this.assertTrue(form.validate());\n      this.assertEquals(2, renderer._getChildren()[1].getChildren().length);\n      this.assertFalse(qx.bom.element.Class.has(renderer._getChildren()[1]._getChildren()[1].getContainerElement(), 'invalid'));\n\n      this.__username.dispose();\n      renderer.dispose();\n      form.dispose();\n    },\n\n    __createForm : function()\n    {\n      var form = new qx.ui.mobile.form.Form();\n      var validationManager = form.getValidationManager();\n\n      var username = this.__username = new qx.ui.mobile.form.TextField().set({placeholder:\"Username\"});\n      username.setRequired(true);\n      form.add(username, \"Username: \");\n      validationManager.add(username, function(value, item){\n        var valid = value != null && value.length>3;\n        if(!valid) {\n          item.setInvalidMessage(\"username should have more than 3 characters!\");\n        }\n        return valid;\n      }, this);\n\n      return form;\n    }\n\n  }\n});\n"
  ]
}