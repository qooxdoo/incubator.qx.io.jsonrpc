{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/mobile/form/NumberField.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "mobile",
    "MobileTestCase",
    "members",
    "testValue",
    "numberField",
    "ui",
    "form",
    "NumberField",
    "getRoot",
    "add",
    "assertEquals",
    "getValue",
    "bom",
    "element",
    "Attribute",
    "get",
    "getContainerElement",
    "assertEventFired",
    "setValue",
    "destroy",
    "testMinimum",
    "getMinimum",
    "setMinimum",
    "testMaximum",
    "getMaximum",
    "setMaximum",
    "testStep",
    "getStep",
    "setStep",
    "testResetValue",
    "resetValue",
    "testEnabled",
    "getEnabled",
    "assertFalse",
    "has",
    "setEnabled"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.mobile.form.NumberField\",\n{\n  extend : qx.test.mobile.MobileTestCase,\n\n  members :\n  {\n    testValue : function()\n    {\n      var numberField = new qx.ui.mobile.form.NumberField();\n      this.getRoot().add(numberField);\n\n      this.assertEquals('',numberField.getValue());\n      this.assertEquals(null, qx.bom.element.Attribute.get(numberField.getContainerElement(),'value'));\n      this.assertEventFired(numberField, \"changeValue\", function() {\n        numberField.setValue(15);\n      });\n\n      this.assertEquals(15,numberField.getValue());\n      this.assertEquals(15,qx.bom.element.Attribute.get(numberField.getContainerElement(),'value'));\n\n      numberField.destroy();\n    },\n\n\n    testMinimum : function()\n    {\n      var numberField = new qx.ui.mobile.form.NumberField();\n      this.getRoot().add(numberField);\n\n      this.assertEquals('',numberField.getMinimum());\n\n      numberField.setMinimum(42.23);\n\n     this.assertEquals(42.23,numberField.getMinimum());\n\n      numberField.destroy();\n\n    },\n\n\n    testMaximum : function()\n    {\n      var numberField = new qx.ui.mobile.form.NumberField();\n      this.getRoot().add(numberField);\n\n      this.assertEquals('',numberField.getMaximum());\n\n      numberField.setMaximum(42.23);\n\n      this.assertEquals(42.23,numberField.getMaximum());\n\n      numberField.destroy();\n    },\n\n\n    testStep : function()\n    {\n      var numberField = new qx.ui.mobile.form.NumberField();\n      this.getRoot().add(numberField);\n\n      this.assertEquals('',numberField.getStep());\n\n      numberField.setStep(42.23);\n\n      this.assertEquals(42.23,numberField.getStep());\n\n      numberField.destroy();\n    },\n\n\n    testResetValue : function()\n    {\n      var numberField = new qx.ui.mobile.form.NumberField();\n      this.getRoot().add(numberField);\n\n      this.assertEquals('',numberField.getValue());\n      this.assertEquals(null, qx.bom.element.Attribute.get(numberField.getContainerElement(),'value'));\n\n      numberField.setValue(15);\n      this.assertEquals(15,numberField.getValue());\n\n      numberField.resetValue();\n\n      this.assertEquals(null,qx.bom.element.Attribute.get(numberField.getContainerElement(),'value'));\n      this.assertEquals('',numberField.getValue());\n\n      numberField.destroy();\n    },\n\n\n    testEnabled : function()\n    {\n      var numberField = new qx.ui.mobile.form.NumberField();\n      this.getRoot().add(numberField);\n      this.assertEquals(true,numberField.getEnabled());\n      this.assertFalse(qx.bom.element.Class.has(numberField.getContainerElement(),'disabled'));\n\n      numberField.setEnabled(false);\n      this.assertEquals(false,numberField.getEnabled());\n      this.assertEquals(true,qx.bom.element.Class.has(numberField.getContainerElement(),'disabled'));\n\n      numberField.destroy();\n    }\n\n  }\n});\n"
  ]
}