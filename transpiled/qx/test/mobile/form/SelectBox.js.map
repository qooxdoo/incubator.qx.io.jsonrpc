{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/mobile/form/SelectBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "mobile",
    "MobileTestCase",
    "members",
    "testValue",
    "dd",
    "data",
    "Array",
    "selectBox",
    "ui",
    "form",
    "SelectBox",
    "setModel",
    "assertEquals",
    "getValue",
    "setValue",
    "getSelection",
    "assertException",
    "lang",
    "Function",
    "bind",
    "core",
    "ValidationError",
    "destroy",
    "dispose",
    "testNullable",
    "model",
    "setNullable",
    "setSelection",
    "testSelectionNoModel",
    "testResetValue",
    "resetValue",
    "testResetValueNotNullable",
    "testSelection"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.mobile.form.SelectBox\",\n{\n  extend : qx.test.mobile.MobileTestCase,\n\n  members :\n  {\n    testValue : function()\n    {\n      var dd = new qx.data.Array([\"Item 1\", \"Item 2\", \"Item 3\"]);\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      selectBox.setModel(dd);\n\n      // Initial value '''\n      this.assertEquals('',selectBox.getValue());\n\n      // Attempt to set value to \"Item 3\"\n      selectBox.setValue(\"Item 3\");\n      this.assertEquals(2, selectBox.getSelection());\n      this.assertEquals(\"Item 3\",selectBox.getValue());\n\n      // Attempt to set invalid value occurs validation error.\n      this.assertException(qx.lang.Function.bind(selectBox.setValue, selectBox, \"Item 4\"),\n        qx.core.ValidationError,\n        \"Validation Error: Input value is out of model range\",\n        \"An validation error is expected, because this value does not exists in model.\"\n      );\n\n      this.assertEquals(\"Item 3\",selectBox.getValue(), \"Nothing should be changed by input setValue('Item 4') because input value is not in model.\");\n\n      selectBox.destroy();\n      dd.dispose();\n      dd = null;\n    },\n\n    testNullable : function() {\n      var model = new qx.data.Array([\"Item 1\", \"Item 2\", \"Item 3\"]);\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      selectBox.setModel(model);\n\n      // Default case: nullable is true, selection is null.\n      this.assertEquals(null, selectBox.getSelection(), \"Default selection of SelectBox should be null.\");\n\n      // Switch to nullable true...\n      selectBox.setNullable(false);\n\n      // Attempt to set null value occurs validation error.\n      this.assertException(qx.lang.Function.bind(selectBox.setSelection, selectBox, null),\n        qx.core.ValidationError,\n        \"Validation Error: SelectBox is not nullable\",\n        \"Value should not be accepted when SelectBox is not nullable.\"\n      );\n\n      // Switch to nullable true... try to set selection to null..\n      selectBox.setNullable(true);\n      selectBox.setSelection(null);\n      this.assertEquals(null, selectBox.getSelection(), \"Value should be null.\");\n\n      // After\n      selectBox.destroy();\n      model.dispose();\n      model = null;\n    },\n\n    testSelectionNoModel : function() {\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      this.assertException(qx.lang.Function.bind(selectBox.setSelection, selectBox, 4),\n        qx.core.ValidationError,\n        \"Validation Error: Please apply model before selection\",\n        \"A selection needs a model.\"\n      );\n\n      selectBox.destroy();\n    },\n\n    testResetValue : function() {\n      var model = new qx.data.Array([\"Item 1\", \"Item 2\", \"Item 3\"]);\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      selectBox.setModel(model);\n      selectBox.setNullable(true);\n      selectBox.setValue(\"Item 3\");\n\n      this.assertEquals(2, selectBox.getSelection());\n\n      selectBox.resetValue();\n\n      this.assertEquals(null, selectBox.getSelection());\n\n      // After\n      selectBox.destroy();\n      model.dispose();\n      model = null;\n    },\n\n    testResetValueNotNullable : function() {\n      var model = new qx.data.Array([\"Item 1\", \"Item 2\", \"Item 3\"]);\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      selectBox.setModel(model);\n      selectBox.setNullable(false);\n      selectBox.setValue(\"Item 3\");\n\n      this.assertEquals(2, selectBox.getSelection());\n\n      selectBox.resetValue();\n\n      this.assertEquals(0, selectBox.getSelection());\n\n      // After\n      selectBox.destroy();\n      model.dispose();\n      model = null;\n    },\n\n    testSelection : function()\n    {\n      var model = new qx.data.Array([\"Item 1\", \"Item 2\", \"Item 3\"]);\n      var selectBox = new qx.ui.mobile.form.SelectBox();\n      selectBox.setModel(model);\n\n      // Default value of selectedIndex after setting model is 0.\n      this.assertEquals(null, selectBox.getSelection());\n\n      // Set selection success\n      selectBox.setSelection(2);\n      this.assertEquals(2, selectBox.getSelection());\n      this.assertEquals(\"Item 3\", selectBox.getValue());\n\n      // Set selection failure\n      // Nothing is changed because invalid selectedIndex value.\n      this.assertException(qx.lang.Function.bind(selectBox.setSelection, selectBox, 4),\n        qx.core.ValidationError,\n        \"Validation Error: Input value is out of model range\",\n        \"Exception assertion failed.\"\n      );\n\n      this.assertEquals(2, selectBox.getSelection());\n      this.assertEquals(\"Item 3\", selectBox.getValue());\n\n      // Negative values are not allowed. Nothing is changed.\n      this.assertException(qx.lang.Function.bind(selectBox.setSelection, selectBox, -1),\n        qx.core.ValidationError,\n        \"Validation Error: Input value is out of model range\",\n        \"Exception assertion failed.\"\n      );\n\n      this.assertEquals(2, selectBox.getSelection());\n      this.assertEquals(\"Item 3\", selectBox.getValue());\n\n      // Only type Number is allowed. Nothing is changed.\n      this.assertException(qx.lang.Function.bind(selectBox.setSelection, selectBox, \"foo\"),\n        qx.core.ValidationError,\n        \"Validation Error: Input value is not a number\",\n        \"Exception assertion failed.\"\n      );\n\n      this.assertEquals(2, selectBox.getSelection());\n      this.assertEquals(\"Item 3\", selectBox.getValue());\n\n      // After\n      selectBox.destroy();\n      model.dispose();\n      model = null;\n    }\n  }\n});\n"
  ]
}