{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/mobile/form/Label.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "mobile",
    "MobileTestCase",
    "members",
    "testLabelForTarget",
    "label",
    "ui",
    "form",
    "Label",
    "target",
    "TextField",
    "setLabelFor",
    "getId",
    "foundValue",
    "getContentElement",
    "getAttribute",
    "assertEquals",
    "destroy",
    "testDisableTarget",
    "setEnabled",
    "assertFalse",
    "isEnabled",
    "assertTrue"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,MAAR,CAAeC,cAD1B;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,kBAAkB,EAAG,8BACrB;AACE,YAAIC,KAAK,GAAG,IAAIZ,EAAE,CAACa,EAAH,CAAML,MAAN,CAAaM,IAAb,CAAkBC,KAAtB,CAA4B,WAA5B,CAAZ;AACA,YAAIC,MAAM,GAAG,IAAIhB,EAAE,CAACa,EAAH,CAAML,MAAN,CAAaM,IAAb,CAAkBG,SAAtB,CAAgC,KAAhC,CAAb;AACAL,QAAAA,KAAK,CAACM,WAAN,CAAkBF,MAAM,CAACG,KAAP,EAAlB;AAEA,YAAIC,UAAU,GAAGR,KAAK,CAACS,iBAAN,GAA0BC,YAA1B,CAAuC,KAAvC,CAAjB;AAEA,aAAKC,YAAL,CAAkBP,MAAM,CAACG,KAAP,EAAlB,EAAiCC,UAAjC,EAA4C,0CAA5C;AAEAR,QAAAA,KAAK,CAACY,OAAN;AACAR,QAAAA,MAAM,CAACQ,OAAP;AACD,OAbH;AAgBEC,MAAAA,iBAAiB,EAAG,6BACpB;AACE,YAAIb,KAAK,GAAG,IAAIZ,EAAE,CAACa,EAAH,CAAML,MAAN,CAAaM,IAAb,CAAkBC,KAAtB,CAA4B,WAA5B,CAAZ;AACA,YAAIC,MAAM,GAAG,IAAIhB,EAAE,CAACa,EAAH,CAAML,MAAN,CAAaM,IAAb,CAAkBG,SAAtB,CAAgC,KAAhC,CAAb;AAEAD,QAAAA,MAAM,CAACU,UAAP,CAAkB,KAAlB;AAEAd,QAAAA,KAAK,CAACM,WAAN,CAAkBF,MAAM,CAACG,KAAP,EAAlB,EANF,CAQE;;AACA,aAAKQ,WAAL,CAAiBf,KAAK,CAACgB,SAAN,EAAjB;AAEAZ,QAAAA,MAAM,CAACU,UAAP,CAAkB,IAAlB;AAEA,aAAKG,UAAL,CAAgBjB,KAAK,CAACgB,SAAN,EAAhB;AAEAZ,QAAAA,MAAM,CAACU,UAAP,CAAkB,KAAlB;AAEA,aAAKC,WAAL,CAAiBf,KAAK,CAACgB,SAAN,EAAjB;AAEAhB,QAAAA,KAAK,CAACY,OAAN;AACAR,QAAAA,MAAM,CAACQ,OAAP;AACD;AAtCH;AAJF,GADA;AAlBAxB,EAAAA,EAAE,CAACO,IAAH,CAAQC,MAAR,CAAeM,IAAf,CAAoBC,KAApB,CAA0BZ,aAA1B,GAA0CA,aAA1C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christopher Zuendorf (czuendorf)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.mobile.form.Label\",\n{\n  extend : qx.test.mobile.MobileTestCase,\n\n  members :\n  {\n    testLabelForTarget : function()\n    {\n      var label = new qx.ui.mobile.form.Label(\"foo-label\");\n      var target = new qx.ui.mobile.form.TextField(\"foo\");\n      label.setLabelFor(target.getId());\n\n      var foundValue = label.getContentElement().getAttribute(\"for\");\n\n      this.assertEquals(target.getId(),foundValue,\"'For' attribute has an unexpected value.\");\n\n      label.destroy();\n      target.destroy();\n    },\n\n\n    testDisableTarget : function()\n    {\n      var label = new qx.ui.mobile.form.Label(\"foo-label\");\n      var target = new qx.ui.mobile.form.TextField(\"foo\");\n\n      target.setEnabled(false);\n\n      label.setLabelFor(target.getId());\n\n      // check if state is considered before label.for is set.\n      this.assertFalse(label.isEnabled());\n\n      target.setEnabled(true);\n\n      this.assertTrue(label.isEnabled());\n\n      target.setEnabled(false);\n\n      this.assertFalse(label.isEnabled());\n\n      label.destroy();\n      target.destroy();\n    }\n  }\n\n});\n"
  ]
}