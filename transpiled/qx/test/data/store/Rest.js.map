{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/data/store/Rest.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "MRequirements",
    "members",
    "setUp",
    "setUpDoubleRequest",
    "marshal",
    "data",
    "Json",
    "shallowStub",
    "injectStub",
    "toModel",
    "returns",
    "setUpResource",
    "store",
    "Rest",
    "res",
    "dispose",
    "description",
    "method",
    "url",
    "io",
    "rest",
    "Resource",
    "req",
    "request",
    "Xhr",
    "AbstractRequest",
    "stub",
    "tearDown",
    "getSandbox",
    "restore",
    "assertIdentical",
    "getResource",
    "getActionName",
    "require",
    "assertException",
    "Error",
    "core",
    "AssertionError",
    "assertCalled",
    "addListener",
    "index",
    "respond",
    "assertCalledWith",
    "that",
    "assertEventFired",
    "configureRequest",
    "spy",
    "setUserData",
    "delegate",
    "assertNotCalled",
    "send",
    "assertTrue",
    "getUserData",
    "manipulateData",
    "name",
    "hasDebug",
    "response",
    "getPhase",
    "getResponse",
    "fireEvent",
    "skip",
    "msg",
    "RequirementError",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.data.store.Rest\",\n{\n  extend: qx.dev.unit.TestCase,\n\n  include : [qx.dev.unit.MMock,\n             qx.dev.unit.MRequirements],\n\n  members:\n  {\n    setUp: function() {\n      this.setUpDoubleRequest();\n\n      var marshal = this.marshal = new qx.data.marshal.Json();\n      marshal = this.shallowStub(marshal, qx.data.marshal.Json);\n      this.injectStub(qx.data.marshal, \"Json\", marshal);\n\n      marshal.toModel.returns({});\n\n      this.setUpResource();\n      this.store = new qx.data.store.Rest(this.res, \"index\");\n    },\n\n    setUpResource: function() {\n      this.res && this.res.dispose();\n      var description = {\"index\": {method: \"GET\", url: \"/photos\"}};\n      return this.res = new qx.io.rest.Resource(description);\n    },\n\n    setUpDoubleRequest: function() {\n      var req = this.req = new qx.io.request.Xhr(),\n          res = this.res;\n\n      // Stub request methods, leave event system intact\n      req = this.shallowStub(req, qx.io.request.AbstractRequest);\n\n      // Not dispose stub yet\n      this.stub(req, \"dispose\");\n\n      // Inject double and return\n      this.injectStub(qx.io.request, \"Xhr\", req);\n\n      return req;\n    },\n\n    tearDown: function() {\n      this.getSandbox().restore();\n      this.req.dispose();\n      this.marshal.dispose();\n      this.res.dispose();\n      this.store.dispose();\n    },\n\n    \"test: construct with res and action name\": function() {\n      var store = this.store;\n\n      this.assertIdentical(store.getResource(), this.res);\n      this.assertIdentical(store.getActionName(), \"index\");\n    },\n\n    \"test: construct throws with missing res\": function() {\n      this.require([\"debug\"]);\n\n      var store;\n\n      // Unfortunately, qx.core.Property throws a generic error\n      this.assertException(function() {\n        store = new qx.data.store.Rest(null, \"index\");\n      }, Error, (/property res/));\n      store && store.dispose();\n    },\n\n    \"test: construct throws with erroneous res\": function() {\n      this.require([\"debug\"]);\n\n      var store;\n\n      this.assertException(function() {\n        store = new qx.data.store.Rest({}, \"index\");\n      }, qx.core.AssertionError);\n      store && store.dispose();\n    },\n\n    \"test: construct throws with missing action\": function() {\n      this.require([\"debug\"]);\n\n      var store,\n          res = this.res;\n\n      this.assertException(function() {\n        store = new qx.data.store.Rest(res, null);\n      }, Error, (/property actionName/));\n      store && store.dispose();\n    },\n\n    \"test: add listener for actionSuccess to res\": function() {\n      var res = this.res,\n          store;\n\n      this.stub(res, \"addListener\");\n      store = new qx.data.store.Rest(res, \"index\");\n      this.assertCalled(res.addListener);\n      store.dispose();\n    },\n\n    \"test: marshal response\": function() {\n      var res = this.res,\n          store = this.store,\n          marshal = this.marshal,\n          data = {\"key\": \"value\"};\n\n      res.index();\n\n      this.respond(data);\n      this.assertCalledWith(marshal.toModel, data);\n    },\n\n    \"test: populates model property with marshaled response\": function() {\n      // Do not stub marshal.Json\n      qx.data.marshal.Json.restore();\n\n      var res = this.setUpResource(),\n          store = new qx.data.store.Rest(res, \"index\");\n\n      res.index();\n      this.respond({\"name\": \"Affe\"});\n      // this.assertEquals(\"Affe\", store.getModel().getName());\n      store.dispose();\n    },\n\n    \"test: fires changeModel\": function() {\n      // Do not stub marshal.Json\n      qx.data.marshal.Json.restore();\n\n      var res = this.setUpResource(),\n          store = new qx.data.store.Rest(res, \"index\"),\n          that = this;\n\n      res.index();\n      this.assertEventFired(store, \"changeModel\", function() {\n        that.respond({\"name\": \"Affe\"});\n      });\n\n      store.dispose();\n      res.dispose();\n    },\n\n    \"test: configure request with delegate\": function() {\n      var res = this.res,\n          req = this.req;\n\n      var configureRequest = this.spy(function(req) {\n        req.setUserData(\"affe\", true);\n      });\n\n      var delegate = {\n        configureRequest: configureRequest\n      };\n\n      var store = new qx.data.store.Rest(res, \"index\", delegate);\n\n      // Configure before sending\n      this.assertNotCalled(req.send);\n\n      res.index();\n      this.assertCalledWith(configureRequest, req);\n      this.assertTrue(req.getUserData(\"affe\"));\n      this.assertCalled(req.send);\n\n      store.dispose();\n    },\n\n    \"test: manipulate data with delegate before marshaling\": function() {\n      var res = this.res,\n          data = {\"name\": \"Tiger\"};\n\n      var manipulateData = this.spy(function(data) {\n        data.name = \"Maus\";\n        return data;\n      });\n\n      var delegate = {\n        manipulateData: manipulateData\n      };\n\n      var store = new qx.data.store.Rest(res, \"index\", delegate);\n      res.index();\n      this.respond(data);\n\n      this.assertCalledWith(manipulateData, data);\n      this.assertCalledWith(this.marshal.toModel, {\"name\": \"Maus\"});\n\n      store.dispose();\n    },\n\n    hasDebug: function() {\n      return qx.core.Environment.get(\"qx.debug\");\n    },\n\n    // Fake response\n    respond: function(response) {\n      var req = this.req;\n      response = response || \"\";\n      req.getPhase.returns(\"success\");\n\n      // Set parsed response\n      req.getResponse.returns(response);\n\n      req.fireEvent(\"success\");\n    },\n\n    skip: function(msg) {\n      throw new qx.dev.unit.RequirementError(null, msg);\n    }\n\n  }\n});\n"
  ]
}