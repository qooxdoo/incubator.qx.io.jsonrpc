{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/data/store/RestWithRemote.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MRequirements",
    "test",
    "io",
    "MRemoteTest",
    "members",
    "setUp",
    "url",
    "getUrl",
    "res",
    "rest",
    "Resource",
    "index",
    "method",
    "store",
    "data",
    "Rest",
    "configureRequest",
    "req",
    "setParser",
    "util",
    "ResponseParser",
    "PARSER",
    "json",
    "require",
    "tearDown",
    "dispose",
    "addListener",
    "resume",
    "assertEquals",
    "getModel",
    "getString",
    "wait",
    "label",
    "ui",
    "basic",
    "Label",
    "getValue",
    "bind",
    "skip",
    "msg",
    "RequirementError",
    "RestWithRemote"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n *\n * @asset(qx/test/primitive.json)\n */\n\nqx.Class.define(\"qx.test.data.store.RestWithRemote\",\n{\n  extend: qx.dev.unit.TestCase,\n\n  include : [qx.dev.unit.MRequirements,\n             qx.test.io.MRemoteTest],\n\n  members:\n  {\n    setUp: function() {\n      var url = this.getUrl(\"qx/test/primitive.json\"),\n          res = this.res = new qx.io.rest.Resource({index: {method: \"GET\", url: url} }),\n          store = this.store = new qx.data.store.Rest(res, \"index\");\n\n      res.configureRequest(function(req) {\n        req.setParser(qx.util.ResponseParser.PARSER.json);\n      });\n\n      this.require([\"http\"]);\n    },\n\n    tearDown: function() {\n      this.res.dispose();\n      this.store.dispose();\n    },\n\n    \"test: populate store with response of resource action\": function() {\n      var res = this.res,\n          store = this.store;\n\n      res.addListener(\"success\", function() {\n        this.resume(function() {\n          this.assertEquals(\"String\", store.getModel().getString());\n        }, this);\n      }, this);\n\n      res.index();\n      this.wait();\n    },\n\n    \"test: bind model property\": function() {\n      var res = this.res,\n          store = this.store,\n          label = new qx.ui.basic.Label();\n\n      res.addListener(\"success\", function() {\n        this.resume(function() {\n          this.assertEquals(\"String\", label.getValue());\n        }, this);\n      }, this);\n\n      res.index();\n      store.bind(\"model.string\", label, \"value\");\n\n      this.wait();\n    },\n\n    skip: function(msg) {\n      throw new qx.dev.unit.RequirementError(null, msg);\n    }\n\n  }\n});\n"
  ]
}