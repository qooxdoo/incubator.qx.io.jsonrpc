{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/data/controller/FormWithArrayAndModel.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "__arrayField",
    "__modelField",
    "__form",
    "__model",
    "setUp",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IArrayForm",
    "IForm",
    "include",
    "MForm",
    "events",
    "changeValue",
    "__value",
    "setValue",
    "value",
    "oldValue",
    "fireDataEvent",
    "getValue",
    "resetValue",
    "data",
    "controller",
    "Form",
    "changeEnabled",
    "setEnabled",
    "getEnabled",
    "setModel",
    "getModel",
    "resetModel",
    "_applyModel",
    "old",
    "test",
    "fixture",
    "ArrayField",
    "ModelField",
    "add",
    "marshal",
    "Json",
    "createModel",
    "f1",
    "f2",
    "f3",
    "tearDown",
    "_disposeObjects",
    "undefine",
    "__makeAddressForm",
    "houseNr",
    "TextField",
    "streetName",
    "addressForm",
    "util",
    "DisposeUtil",
    "disposeTriggeredBy",
    "arr",
    "c1",
    "c2",
    "setAutoDisposeItems",
    "ctrl",
    "assertNull",
    "getF1",
    "updateModel",
    "assertIdentical",
    "dispose",
    "setTarget",
    "getItem",
    "getF2",
    "getHouseNr",
    "getStreetName",
    "setF1",
    "FormWithArrayAndModel"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2016 Martijn Evers, The Netherlands\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martijn Evers (mever)\n\n************************************************************************ */\n\n/**\n * @ignore(qx.test.data.controller.fixture.ArrayField, qx.test.data.controller.fixture.ModelField)\n */\n\nqx.Class.define(\"qx.test.data.controller.FormWithArrayAndModel\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    /** @type {qx.test.data.controller.fixture.ArrayField} */\n    __arrayField : null,\n\n    /** @type {qx.test.data.controller.fixture.ModelField} */\n    __modelField : null,\n\n    /** @type {qx.ui.form.Form} */\n    __form : null,\n\n    /** @type {qx.core.Object} */\n    __model : null,\n\n\n    setUp : function() {\n\n      // imagine me being a table like widget containing two columns (e.g. an miniature todo-list)\n      qx.Class.define(\"qx.test.data.controller.fixture.ArrayField\", {\n        extend : qx.ui.core.Widget,\n        implement : [ qx.ui.form.IArrayForm, qx.ui.form.IForm ],\n        include : [ qx.ui.form.MForm ],\n\n        events : {\n          changeValue : \"qx.event.type.Data\"\n        },\n\n        members : {\n          /** @type {qx.data.Array|null} */\n          __value : null,\n\n          /**\n           * @param value {qx.data.Array|null}\n           */\n          setValue : function(value) {\n            var oldValue = this.__value;\n            this.__value = value;\n            this.fireDataEvent(\"changeValue\", value, oldValue);\n          },\n\n          /**\n           * @return {qx.data.Array|null}\n           */\n          getValue : function() {return this.__value;},\n\n          resetValue : function() {this.__value = null;}\n        }\n      });\n\n      // imagine me being a multi-field widget (e.g. address form embedded in user form)\n      qx.Class.define(\"qx.test.data.controller.fixture.ModelField\", {\n        extend : qx.data.controller.Form,\n        implement : [ qx.ui.form.IArrayForm, qx.ui.form.IForm ],\n        include : [ qx.ui.form.MForm ],\n\n        events : {\n          changeValue : \"qx.event.type.Data\",\n\n          // implement IForm interface\n          changeEnabled : \"qx.event.type.Data\"\n        },\n\n        members : {\n          // implement IForm interface\n          setEnabled : function() {},\n          getEnabled : function() {return true;},\n\n          /**\n           * @param value {qx.core.Object|null}\n           */\n          setValue : function(value) {\n            this.setModel(value);\n          },\n\n          /**\n           * @return {qx.core.Object|null}\n           */\n          getValue : function() {return this.getModel();},\n\n          resetValue : function() { this.resetModel(); },\n\n          // overwritten\n          _applyModel : function(value, old) {\n            this.base(arguments, value, old);\n            this.fireDataEvent(\"changeValue\", value, old);\n          }\n        }\n      });\n\n      this.__arrayField = new qx.test.data.controller.fixture.ArrayField();\n      this.__modelField = new qx.test.data.controller.fixture.ModelField();\n\n      this.__form = new qx.ui.form.Form();\n      this.__form.add(this.__arrayField, \"One\", null, \"f1\");\n      this.__form.add(this.__modelField, \"Two\", null, \"f2\");\n\n      this.__model = qx.data.marshal.Json.createModel({f1: null, f2: null, f3: null});\n    },\n\n\n    tearDown : function() {\n      this._disposeObjects(\"__arrayField\", \"__modelField\", \"__form\", \"__model\");\n      qx.Class.undefine(\"qx.test.data.controller.fixture.ArrayField\");\n      qx.Class.undefine(\"qx.test.data.controller.fixture.ModelField\");\n    },\n\n\n    /**\n     * Reusable address form.\n     *\n     * @return {qx.ui.form.Form} Address form.\n     */\n    __makeAddressForm : function() {\n      var houseNr = new qx.ui.form.TextField();\n      var streetName = new qx.ui.form.TextField();\n      var addressForm = new qx.ui.form.Form();\n      addressForm.add(houseNr, \"houseNr\");\n      addressForm.add(streetName, \"streetName\");\n      qx.util.DisposeUtil.disposeTriggeredBy(houseNr, addressForm);\n      qx.util.DisposeUtil.disposeTriggeredBy(streetName, addressForm);\n      return addressForm;\n    },\n\n\n    \"test self update: array\" : function() {\n      var arr = qx.data.marshal.Json.createModel([{c1: \"1a1\", c2: \"1a2\"}, {c1: \"1b1\", c2: \"1b2\"}]);\n      arr.setAutoDisposeItems(true);\n      this.__arrayField.setValue(arr);\n\n      // sync form and model, model (null) takes preference over form (arr)\n      var ctrl = new qx.data.controller.Form(this.__model, this.__form, true);\n      this.assertNull(this.__arrayField.getValue());\n      this.assertNull(this.__model.getF1());\n\n      // user changes field and hits ok button\n      this.__arrayField.setValue(arr);\n      ctrl.updateModel();\n\n      this.assertIdentical(arr, this.__model.getF1());\n      ctrl.dispose();\n      arr.dispose();\n    },\n\n\n    \"test self update: model\" : function() {\n      var addressForm = this.__makeAddressForm();\n      this.__modelField.setTarget(addressForm);\n\n      var ctrl = new qx.data.controller.Form(this.__model, this.__form, true);\n      this.assertNull(this.__arrayField.getValue());\n      this.assertNull(this.__modelField.getValue());\n\n      // let's make an address for this user (this.__model being a user now ;) )\n      this.__modelField.createModel(false);\n      addressForm.getItem(\"houseNr\").setValue(\"42\");\n      addressForm.getItem(\"streetName\").setValue(\"Nowhere Ln\");\n      ctrl.updateModel();\n\n      // imagine f2 now being a user address\n      this.assertIdentical(\"42\", this.__model.getF2().getHouseNr());\n      this.assertIdentical(\"Nowhere Ln\", this.__model.getF2().getStreetName());\n      ctrl.dispose();\n      addressForm.dispose();\n    },\n\n\n    \"test updating view\" : function() {\n      var arr = qx.data.marshal.Json.createModel([{c1: \"2a1\", c2: \"2a2\"}, {c1: \"2b1\", c2: \"2b2\"}]);\n      arr.setAutoDisposeItems(true);\n      this.__arrayField.setValue(arr);\n\n      // sync form and model, model (null) takes preference over form (arr)\n      var ctrl = new qx.data.controller.Form(this.__model, this.__form);\n      this.assertNull(this.__arrayField.getValue());\n      this.assertNull(this.__model.getF1());\n\n      // user changes field and hits ok button\n      this.__arrayField.setValue(arr);\n\n      this.assertIdentical(arr, this.__model.getF1());\n      ctrl.dispose();\n      arr.dispose();\n    },\n\n\n    \"test updating model: array field\" : function() {\n      var arr = qx.data.marshal.Json.createModel([{c1: \"2a1\", c2: \"2a2\"}, {c1: \"2b1\", c2: \"2b2\"}]);\n      arr.setAutoDisposeItems(true);\n\n      var ctrl = new qx.data.controller.Form(this.__model, this.__form);\n\n      // change model, view should follow\n      this.__model.setF1(arr);\n\n      this.assertIdentical(arr, this.__arrayField.getValue());\n      ctrl.dispose();\n      arr.dispose();\n    },\n\n\n    \"test updating model: model field\" : function() {\n      var addressForm = this.__makeAddressForm();\n      this.__modelField.setTarget(addressForm);\n\n      var ctrl = new qx.data.controller.Form(this.__model, this.__form);\n      this.assertNull(this.__arrayField.getValue());\n      this.assertNull(this.__modelField.getValue());\n\n      this.__modelField.createModel(false);\n      this.assertIdentical(this.__modelField.getModel(), this.__model.getF2());\n\n      ctrl.dispose();\n      addressForm.dispose();\n    }\n  }\n});\n"
  ]
}