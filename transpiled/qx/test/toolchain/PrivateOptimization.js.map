{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/toolchain/PrivateOptimization.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testPrivatesRenaming",
    "assertEquals",
    "__test",
    "test",
    "toolchain",
    "PrivateOptimization"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,uCAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EACP;AACA;;;AAGEC,MAAAA,oBAAoB,EAAE,gCAAW;AAC/B;AACA,aAAKC,YAAL,aAAmC,KAAKC,MAAL,EAAnC,EAAkD,+BAAlD;AACA,aAAKD,YAAL,kBAAwC,KAAKC,MAAL,KAAgB,OAAxD,EAAiE,+BAAjE;AACD,OARH;AAUE;AACAA,MAAAA,MAAM,EAAE,kBAAW;AACjB,eAAO,UAAP;AACD;AAbH;AAJF,GADA;AAlBAb,EAAAA,EAAE,CAACc,IAAH,CAAQC,SAAR,CAAkBC,mBAAlB,CAAsCb,aAAtC,GAAsDA,aAAtD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-20011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.toolchain.PrivateOptimization\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n  /*\n   * The next test tests whether privates are renamed at all.\n   */\n    testPrivatesRenaming: function() {\n      // Can only fail in build version with all optimizations\n      this.assertEquals(\"__te\" + \"st a\", this.__test(), \"Variable in a string renamed!\");\n      this.assertEquals(\"__te\" + \"st a test\", this.__test() + \" test\", \"Variable in a string renamed!\");\n    },\n\n    // needed for testPrivatesRenaming\n    __test: function() {\n      return \"__test a\";\n    }\n  }\n});\n"
  ]
}