{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/locale/Locale.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "locale",
    "MTranslation",
    "members",
    "__defaultLocale",
    "__listenerId",
    "setUp",
    "manager",
    "Manager",
    "getInstance",
    "getLocale",
    "tearDown",
    "setLocale",
    "removeListenerById",
    "testTranslation",
    "assertNotUndefined",
    "addTranslation",
    "assertEquals",
    "getLanguage",
    "getTerritory",
    "one",
    "tr",
    "hello",
    "firstName",
    "lastName",
    "hiJonny",
    "car",
    "trn",
    "cars",
    "trc",
    "trnc",
    "fired",
    "evtLocale",
    "addListener",
    "e",
    "getData",
    "assertTrue",
    "translate",
    "testInvalidMessage",
    "textField",
    "ui",
    "form",
    "TextField",
    "setInvalidMessage",
    "setRequiredInvalidMessage",
    "getInvalidMessage",
    "getRequiredInvalidMessage",
    "dispose",
    "testMacCtrl",
    "Key",
    "getKeyName",
    "core",
    "Environment",
    "get",
    "testResetLocale",
    "variant",
    "oldLocale",
    "resetLocale",
    "test",
    "Locale"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.locale.Locale\",\n{\n  extend : qx.dev.unit.TestCase,\n  include : qx.locale.MTranslation,\n\n  members :\n  {\n    __defaultLocale : null,\n    __listenerId : null,\n\n    setUp : function() {\n      var manager = qx.locale.Manager.getInstance();\n      this.__defaultLocale = manager.getLocale();\n    },\n\n\n    tearDown : function() {\n      var manager = qx.locale.Manager.getInstance();\n      manager.setLocale(this.__defaultLocale);\n      if (this.__listenerId) {\n        manager.removeListenerById(this.__listenerId);\n      }\n    },\n\n\n    testTranslation : function()\n    {\n      this.assertNotUndefined(qx.locale.Manager);\n      var manager = qx.locale.Manager.getInstance();\n\n      // add dummy translations\n      manager.addTranslation(\"en_QX\", {\n        \"test one\": \"test one\",\n        \"test two\": \"test two\",\n        \"test Hello %1!\": \"test Hello %1!\",\n        \"test Jonny\": \"test Jonny\",\n        \"test one car\": \"test one car\",\n        \"test %1 cars\": \"test %1 cars\"\n      });\n      manager.addTranslation(\"de_QX\", {\n        \"test one\": \"Eins\",\n        \"test two\": \"Zwei\",\n        \"test Hello %1!\": \"Servus %1!\",\n        \"test Jonny\": \"Jonathan\",\n        \"test one car\": \"Ein Auto\",\n        \"test %1 cars\": \"%1 Autos\"\n      });\n      manager.setLocale(\"en_QX\");\n\n      this.assertEquals(\"en\", manager.getLanguage());\n      this.assertEquals(\"QX\", manager.getTerritory());\n\n      // tr(): simple case\n      var one = this.tr(\"test one\");\n      this.assertEquals(\"test one\", one);\n\n      // tr(): format string\n      var hello = this.tr(\"test Hello %1!\", \"Fabian\");\n      this.assertEquals(\"test Hello Fabian!\", hello);\n\n      // tr(): format string with namedArg\n      var hello = this.tr(\"test Hello %{firstName} %{lastName}!\", { firstName: \"Fabian\", lastName: \"Jonny\"});\n      this.assertEquals(\"test Hello Fabian Jonny!\", hello);\n\n      // tr(): format string with translated arguments\n      var hiJonny = this.tr(\"test Hello %1!\", this.tr(\"test Jonny\"));\n      this.assertEquals(\"test Hello test Jonny!\", hiJonny);\n\n      // trn(): plural\n      var car = this.trn(\"test one car\", \"test %1 cars\", 0, 0);\n      this.assertEquals(\"test 0 cars\", car);\n\n      car = this.trn(\"test one car\", \"test %1 cars\", 1);\n      this.assertEquals(\"test one car\", car);\n\n      var cars = this.trn(\"test one car\", \"test %1 cars\", 5, 5);\n      this.assertEquals(\"test 5 cars\", cars);\n\n      // trc(): comments\n      one = this.trc(\"comment simple\", \"test one\");\n      this.assertEquals(\"test one\", one);\n      hello = this.trc(\"comment format\", \"test Hello %1!\", \"Fabian\");\n      this.assertEquals(\"test Hello Fabian!\", hello);\n      hiJonny = this.trc(\"comment format args\", \"test Hello %1!\", this.tr(\"test Jonny\"));\n      this.assertEquals(\"test Hello test Jonny!\", hiJonny);\n\n      // trnc(): comments and plural\n      car = this.trnc(\"comment count 0\", \"test one car\", \"test %1 cars\", 0, 0);\n      this.assertEquals(\"test 0 cars\", car);\n      car = this.trnc(\"comment count 1\", \"test one car\", \"test %1 cars\", 1);\n      this.assertEquals(\"test one car\", car);\n      cars = this.trnc(\"comment count 5\", \"test one car\", \"test %1 cars\", 5, 5);\n      this.assertEquals(\"test 5 cars\", cars);\n\n      // check listener\n      var fired = false;\n      var evtLocale = \"\";\n      this.__listenerId = manager.addListener(\"changeLocale\", function(e) {\n        fired = true;\n        evtLocale = e.getData();\n      });\n\n      // change locale\n      manager.setLocale(\"de_QX\");\n      this.assertTrue(fired);\n      this.assertEquals(\"de_QX\", evtLocale);\n\n\n      // simple case\n      one = one.translate();\n      this.assertEquals(\"Eins\", one);\n\n      // format string\n      hello = hello.translate();\n      this.assertEquals(\"Servus Fabian!\", hello);\n\n      // format string with translated arguments\n      hiJonny = hiJonny.translate();\n      this.assertEquals(\"Servus Jonathan!\", hiJonny);\n\n      // plural\n      car = car.translate();\n      this.assertEquals(\"Ein Auto\", car);\n\n      cars = cars.translate();\n      this.assertEquals(\"5 Autos\", cars);\n    },\n\n\n    testInvalidMessage : function()\n    {\n      this.assertNotUndefined(qx.locale.Manager);\n      var manager = qx.locale.Manager.getInstance();\n\n      // add dummy translations\n      manager.addTranslation(\"en_QX\", {\n        \"test one\": \"one!\",\n        \"test two\": \"two!\"\n      });\n      manager.addTranslation(\"de_QX\", {\n        \"test one\": \"Eins!\",\n        \"test two\": \"Zwei!\"\n      });\n      manager.setLocale(\"en_QX\");\n\n      var textField = new qx.ui.form.TextField();\n      textField.setInvalidMessage(this.tr(\"test one\"));\n      textField.setRequiredInvalidMessage(this.tr(\"test two\"));\n\n      this.assertEquals(\"one!\", textField.getInvalidMessage());\n      this.assertEquals(\"two!\", textField.getRequiredInvalidMessage());\n\n      manager.setLocale(\"de_QX\");\n\n      this.assertEquals(\"Eins!\", textField.getInvalidMessage());\n      this.assertEquals(\"Zwei!\", textField.getRequiredInvalidMessage());\n      textField.dispose();\n    },\n\n\n    testMacCtrl : function()\n    {\n      // check if the translation is working\n      this.assertEquals(\"Links\", qx.locale.Key.getKeyName(\"short\", \"Left\", \"de_DE\"));\n      // is the localized version\n      if (qx.core.Environment.get(\"os.name\") == \"osx\") {\n        // there is no strg on macs, only ctrl\n        this.assertEquals(\"Ctrl\", qx.locale.Key.getKeyName(\"short\", \"Control\", \"de_DE\"));\n        this.assertEquals(\"Control\", qx.locale.Key.getKeyName(\"full\", \"Control\", \"de_DE\"));\n      } else {\n        this.assertEquals(\"Strg\", qx.locale.Key.getKeyName(\"short\", \"Control\", \"de_DE\"));\n        this.assertEquals(\"Steuerung\", qx.locale.Key.getKeyName(\"full\", \"Control\", \"de_DE\"));\n      }\n    },\n\n    testResetLocale : function()\n    {\n      var locale = qx.core.Environment.get(\"locale\");\n      var variant = qx.core.Environment.get(\"locale.variant\");\n      if (variant !== \"\") {\n        locale += \"_\" + variant;\n      }\n\n      var manager = qx.locale.Manager.getInstance();\n      var oldLocale = manager.getLocale();\n      manager.addTranslation(\"en_QX\", {\n        \"test one\": \"one!\",\n        \"test two\": \"two!\"\n      });\n      manager.setLocale(\"en_QX\");\n\n      // try the reset of the locale\n      manager.resetLocale();\n      this.assertEquals(locale, manager.getLocale());\n\n      // make sure we set the locale which was there before the test\n      manager.setLocale(oldLocale);\n    }\n\n  }\n});\n"
  ]
}