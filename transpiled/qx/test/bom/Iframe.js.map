{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/Iframe.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "__iframe",
    "tearDown",
    "testCreate",
    "bom",
    "Iframe",
    "create",
    "__testAttributes",
    "DEFAULT_ATTRIBUTES",
    "testCreateWithAttributes",
    "attributes",
    "lang",
    "Object",
    "clone",
    "allowTransparency",
    "core",
    "Environment",
    "get",
    "key",
    "assertEquals",
    "element",
    "Attribute",
    "testGetWindow",
    "dom",
    "Element",
    "insertBegin",
    "document",
    "body",
    "assertNotNull",
    "getWindow",
    "remove",
    "test"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,oBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAGEC,MAAAA,QAAQ,EAAG,oBAAW;AACpB,aAAKD,QAAL,GAAgB,IAAhB;AACD,OALH;AAOEE,MAAAA,UAAU,EAAG,sBACb;AACE,aAAKF,QAAL,GAAgBX,EAAE,CAACc,GAAH,CAAOC,MAAP,CAAcC,MAAd,EAAhB;;AACA,aAAKC,gBAAL,CAAsBjB,EAAE,CAACc,GAAH,CAAOC,MAAP,CAAcG,kBAApC;AACD,OAXH;AAaEC,MAAAA,wBAAwB,EAAG,oCAC3B;AACE,YAAIC,UAAU,GAAGpB,EAAE,CAACqB,IAAH,CAAQC,MAAR,CAAeC,KAAf,CAAqBvB,EAAE,CAACc,GAAH,CAAOC,MAAP,CAAcG,kBAAnC,CAAjB;AACAE,QAAAA,UAAU,CAACI,iBAAX,GAA+B,KAA/B;AAEA,aAAKb,QAAL,GAAgBX,EAAE,CAACc,GAAH,CAAOC,MAAP,CAAcC,MAAd,CAAqBI,UAArB,CAAhB;;AAEA,aAAKH,gBAAL,CAAsBG,UAAtB;AACD,OArBH;AAuBEH,MAAAA,gBAAgB,EAAG,0BAASG,UAAT,EACnB;AACE;AACA;AACA,YAAGpB,EAAE,CAACyB,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA7C,EAAuD;AACrD,iBAAOP,UAAU,CAAC,QAAD,CAAjB;AACD;;AAED,aAAI,IAAIQ,GAAR,IAAeR,UAAf,EAA2B;AACzB,eAAKS,YAAL,CAAkBT,UAAU,CAACQ,GAAD,CAA5B,EACE5B,EAAE,CAACc,GAAH,CAAOgB,OAAP,CAAeC,SAAf,CAAyBJ,GAAzB,CAA6B,KAAKhB,QAAlC,EAA4CiB,GAA5C,CADF,EAEE,+BAA+BA,GAA/B,GAAqC,GAFvC;AAGD;AACF,OApCH;AAsCEI,MAAAA,aAAa,EAAG,yBAChB;AACE,aAAKrB,QAAL,GAAgBX,EAAE,CAACc,GAAH,CAAOC,MAAP,CAAcC,MAAd,EAAhB;AACAhB,QAAAA,EAAE,CAACiC,GAAH,CAAOC,OAAP,CAAeC,WAAf,CAA2B,KAAKxB,QAAhC,EAA0CyB,QAAQ,CAACC,IAAnD;AAEA,aAAKC,aAAL,CAAmBtC,EAAE,CAACc,GAAH,CAAOC,MAAP,CAAcwB,SAAd,CAAwB,KAAK5B,QAA7B,CAAnB;AAEAX,QAAAA,EAAE,CAACiC,GAAH,CAAOC,OAAP,CAAeM,MAAf,CAAsB,KAAK7B,QAA3B;AACD;AA9CH;AAJF,GADA;AAlBAX,EAAAA,EAAE,CAACyC,IAAH,CAAQ3B,GAAR,CAAYC,MAAZ,CAAmBZ,aAAnB,GAAmCA,aAAnC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.Iframe\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    __iframe: null,\n\n    tearDown : function() {\n      this.__iframe = null;\n    },\n\n    testCreate : function()\n    {\n      this.__iframe = qx.bom.Iframe.create();\n      this.__testAttributes(qx.bom.Iframe.DEFAULT_ATTRIBUTES);\n    },\n\n    testCreateWithAttributes : function()\n    {\n      var attributes = qx.lang.Object.clone(qx.bom.Iframe.DEFAULT_ATTRIBUTES);\n      attributes.allowTransparency = false;\n\n      this.__iframe = qx.bom.Iframe.create(attributes);\n\n      this.__testAttributes(attributes);\n    },\n\n    __testAttributes : function(attributes)\n    {\n      // do not test 'onload' on IE, this returns always 'undefined'\n      // http://tobielangel.com/2007/1/11/attribute-nightmare-in-ie/\n      if(qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n        delete attributes[\"onload\"];\n      }\n\n      for(var key in attributes) {\n        this.assertEquals(attributes[key],\n          qx.bom.element.Attribute.get(this.__iframe, key),\n          \"Wrong value on attribute '\" + key + \"'\");\n      }\n    },\n\n    testGetWindow : function()\n    {\n      this.__iframe = qx.bom.Iframe.create();\n      qx.dom.Element.insertBegin(this.__iframe, document.body);\n\n      this.assertNotNull(qx.bom.Iframe.getWindow(this.__iframe));\n\n      qx.dom.Element.remove(this.__iframe);\n    }\n  }\n});\n"
  ]
}