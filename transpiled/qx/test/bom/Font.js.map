{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/Font.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "ui",
    "LayoutTestCase",
    "include",
    "dev",
    "unit",
    "MRequirements",
    "members",
    "hasNoIe",
    "core",
    "Environment",
    "get",
    "setUp",
    "__font",
    "bom",
    "Font",
    "tearDown",
    "dispose",
    "testBold",
    "setBold",
    "styles",
    "getStyles",
    "assertEquals",
    "fontWeight",
    "testWeight",
    "setWeight",
    "testItalic",
    "setItalic",
    "fontStyle",
    "testDecorationUnderline",
    "setDecoration",
    "textDecoration",
    "testDecorationLineThrough",
    "testDecorationOverline",
    "testFontFamily",
    "setFamily",
    "fontFamily",
    "testFontFamilyMultipleWords",
    "testLineHeight",
    "setLineHeight",
    "lineHeight",
    "testSize",
    "setSize",
    "fontSize",
    "testColor",
    "setColor",
    "color",
    "testTextShadow",
    "require",
    "setTextShadow",
    "textShadow",
    "testColorAtWidget",
    "label",
    "basic",
    "Label",
    "setFont",
    "getRoot",
    "add",
    "flush",
    "useRgbValue",
    "checkValue",
    "getContentElement",
    "getDomElement",
    "style",
    "destroy",
    "testGetStyles",
    "keys",
    "Object",
    "assertMap",
    "lang",
    "getLength",
    "assertNotUndefined",
    "testGetSomeStyles",
    "testFromConfig",
    "config",
    "bold",
    "italic",
    "decoration",
    "size",
    "family",
    "font",
    "fromConfig",
    "expected",
    "found",
    "textColor",
    "testFromString",
    "fromString"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Jonathan Wei√ü (jonathan_rass)\n     * Mustafa Sak (msak)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.Font\",\n{\n  extend : qx.test.ui.LayoutTestCase,\n\n  include : [qx.dev.unit.MRequirements],\n\n  members :\n  {\n    hasNoIe : function()\n    {\n      return qx.core.Environment.get(\"engine.name\") !== \"mshtml\";\n    },\n\n\n    setUp : function() {\n      this.__font = new qx.bom.Font;\n    },\n\n\n    tearDown : function() {\n      this.base(arguments);\n      this.__font.dispose();\n    },\n\n\n    testBold : function()\n    {\n      this.__font.setBold(true);\n\n      var styles = this.__font.getStyles();\n      this.assertEquals(\"bold\", styles.fontWeight, \"Wrong style value for 'bold' property!\");\n    },\n    \n    testWeight : function()\n    {\n      this.__font.setWeight(\"400\");\n      var styles = this.__font.getStyles();\n      this.assertEquals(\"400\", styles.fontWeight, \"something went wrong settng the 'font weight'\");\n    },\n\n\n    testItalic : function()\n    {\n      this.__font.setItalic(true);\n\n      var styles = this.__font.getStyles();\n      this.assertEquals(\"italic\", styles.fontStyle, \"Wrong style value for 'italic' property!\");\n    },\n\n\n    testDecorationUnderline : function()\n    {\n      this.__font.setDecoration(\"underline\");\n\n      var styles = this.__font.getStyles();\n      this.assertEquals(\"underline\", styles.textDecoration, \"Wrong style value for 'decoration' property!\");\n    },\n\n\n    testDecorationLineThrough : function()\n    {\n      this.__font.setDecoration(\"line-through\");\n\n      var styles = this.__font.getStyles();\n      this.assertEquals(\"line-through\", styles.textDecoration, \"Wrong style value for 'decoration' property!\");\n    },\n\n\n    testDecorationOverline : function()\n    {\n      this.__font.setDecoration(\"overline\");\n\n      var styles = this.__font.getStyles();\n      this.assertEquals(\"overline\", styles.textDecoration, \"Wrong style value for 'decoration' property!\");\n    },\n\n\n    testFontFamily : function()\n    {\n      this.__font.setFamily( [\"Arial\"] );\n\n      var styles = this.__font.getStyles();\n      this.assertEquals(\"Arial\", styles.fontFamily, \"Wrong style value for 'family' property!\");\n    },\n\n\n    testFontFamilyMultipleWords : function()\n    {\n      this.__font.setFamily( ['Times New Roman'] );\n\n      var styles = this.__font.getStyles();\n      this.assertEquals('\"Times New Roman\"', styles.fontFamily, \"Wrong style value for 'family' property!\");\n    },\n\n\n    testLineHeight : function()\n    {\n      this.__font.setLineHeight(1.5);\n\n      var styles = this.__font.getStyles();\n      this.assertEquals(1.5, styles.lineHeight, \"Wrong style value for 'lineHeight' property!\");\n    },\n\n\n    testSize : function()\n    {\n      this.__font.setSize(20);\n\n      var styles = this.__font.getStyles();\n      this.assertEquals(\"20px\", styles.fontSize, \"Wrong style value for 'size' property!\");\n    },\n\n\n    testColor : function()\n    {\n      this.__font.setColor(\"red\");\n\n      var styles = this.__font.getStyles();\n      this.assertEquals(\"red\", styles.color, \"Wrong style value for 'color' property!\");\n    },\n\n\n    testTextShadow : function()\n    {\n      this.require([\"noIe\"]);\n\n      this.__font.setTextShadow(\"red 1px 1px 3px, green -1px -1px 3px, white -1px 1px 3px, white 1px -1px 3px\");\n\n      var styles = this.__font.getStyles();\n      this.assertEquals(\"red 1px 1px 3px, green -1px -1px 3px, white -1px 1px 3px, white 1px -1px 3px\", styles.textShadow, \"Wrong style value for 'textShadow' property!\");\n    },\n\n\n    testColorAtWidget : function()\n    {\n      this.__font.setColor(\"#ff0000\");\n\n      var label= new qx.ui.basic.Label(\"myLabel\");\n      label.setFont(this.__font);\n\n      this.getRoot().add(label);\n      this.flush();\n\n      var useRgbValue = true;\n\n      if (qx.core.Environment.get(\"browser.name\") == \"ie\" &&\n          qx.core.Environment.get(\"browser.documentmode\") < 9) {\n        useRgbValue = false;\n      }\n\n      var checkValue = useRgbValue ? \"rgb(26, 26, 26)\" : \"#1a1a1a\";\n      var color = label.getContentElement().getDomElement().style[\"color\"];\n\n      // the current implementation has a higher priority for the color which is\n      // set using the color theme. So this default color should show up and not\n      // the defined color of the font.\n      this.assertEquals(checkValue, color, \"Wrong style applied for 'color' property!\");\n      label.destroy();\n    },\n\n\n    testGetStyles : function()\n    {\n      var styles = this.__font.getStyles();\n\n      // we expect a map with only 'fontFamily' set, otherwise the null values\n      // which are returned are overwriting styles. Only return styles which are set.\n      var keys = Object.keys(styles);\n\n      this.assertMap(styles, \"Method 'getStyles' should return a map!\");\n      this.assertEquals(8, qx.lang.Object.getLength(styles), \"Map should contain 8 key!\");\n      this.assertNotUndefined(styles.fontFamily, \"Key 'fontFamily' has to be present!\");\n      this.assertNotUndefined(styles.fontStyle, \"Key 'fontStyle' has to be present!\");\n      this.assertNotUndefined(styles.fontWeight, \"Key 'fontWeight' has to be present!\");\n      this.assertNotUndefined(styles.fontSize, \"Key 'fontSize' has to be present!\");\n      this.assertNotUndefined(styles.lineHeight, \"Key 'lineHeight' has to be present!\");\n      this.assertNotUndefined(styles.textDecoration, \"Key 'textDecoration' has to be present!\");\n      this.assertNotUndefined(styles.color, \"Key 'color' has to be present!\");\n      this.assertNotUndefined(styles.textShadow, \"Key 'textShadow' has to be present!\");\n    },\n\n\n    testGetSomeStyles : function()\n    {\n      this.__font.setBold(true);\n      this.__font.setItalic(true);\n      this.__font.setColor(\"#3f3f3f\");\n      this.__font.setDecoration(\"underline\");\n\n      var styles = this.__font.getStyles();\n      var keys = Object.keys(styles);\n\n      this.assertMap(styles, \"Method 'getStyles' should return a map!\");\n      this.assertEquals(\"fontFamily\", keys[0], \"Key 'fontFamily' has to be present!\");\n      this.assertEquals(\"\", styles.fontFamily, \"'fontFamily' has to have the value ''!\");\n      this.assertEquals(\"italic\", styles.fontStyle, \"Wrong value for 'fontStyle'!\");\n      this.assertEquals(\"bold\", styles.fontWeight, \"Wrong value for 'fontWeight'!\");\n      this.assertEquals(\"#3f3f3f\", styles.color, \"Wrong value for 'color'!\");\n      this.assertEquals(\"underline\", styles.textDecoration, \"Wrong value for 'textDecoration'!\");\n    },\n\n\n    testFromConfig : function()\n    {\n      var config =\n      {\n        bold: true,\n        italic: false,\n        decoration: \"underline\",\n        lineHeight: 1.2,\n        size: 20,\n        family: [ \"Arial\" ],\n        color: \"red\"\n      };\n      var font = qx.bom.Font.fromConfig(config);\n\n      var expected =\n      {\n        fontWeight: \"bold\",\n        fontStyle: \"normal\",\n        textDecoration: \"underline\",\n        lineHeight: 1.2,\n        fontSize: \"20px\",\n        fontFamily: \"Arial\",\n        color: \"red\"\n      };\n      var found = font.getStyles();\n\n      this.assertEquals(expected.fontWeight, found.fontWeight, \"Wrong value for 'fontWeight'\");\n      this.assertEquals(expected.fontStyle, found.fontStyle, \"Wrong value for 'fontStyle'\");\n      this.assertEquals(expected.fontSize, found.fontSize, \"Wrong value for 'fontSize'\");\n      this.assertEquals(expected.lineHeight, found.lineHeight, \"Wrong value for 'lineHeight'\");\n      this.assertEquals(expected.textDecoration, found.textDecoration, \"Wrong value for 'textDecoration'\");\n      this.assertEquals(expected.fontFamily, found.fontFamily, \"Wrong value for 'fontFamily'\");\n      this.assertEquals(expected.textColor, found.textColor, \"Wrong value for 'textColor'\");\n\n      font.dispose();\n    },\n\n\n    testFromString : function()\n    {\n      var config = \"bold italic underline 20px Arial\";\n      var font = qx.bom.Font.fromString(config);\n\n      var expected =\n      {\n        fontWeight: \"bold\",\n        fontStyle: \"italic\",\n        textDecoration: \"underline\",\n        fontSize: \"20px\",\n        fontFamily: \"Arial\"\n      };\n      var found = font.getStyles();\n\n      this.assertEquals(expected.fontWeight, found.fontWeight, \"Wrong value for 'fontWeight'\");\n      this.assertEquals(expected.fontStyle, found.fontStyle, \"Wrong value for 'fontStyle'\");\n      this.assertEquals(expected.fontSize, found.fontSize, \"Wrong value for 'fontSize'\");\n      this.assertEquals(expected.textDecoration, found.textDecoration, \"Wrong value for 'textDecoration'\");\n      this.assertEquals(expected.fontFamily, found.fontFamily, \"Wrong value for 'fontFamily'\");\n\n      font.dispose();\n    }\n  }\n});\n"
  ]
}