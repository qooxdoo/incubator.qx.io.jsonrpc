{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/GeoLocation.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "MRequirements",
    "members",
    "_geo",
    "_position",
    "hasGeolocation",
    "core",
    "Environment",
    "get",
    "setUp",
    "timestamp",
    "Date",
    "getTime",
    "coords",
    "latitude",
    "longitude",
    "altitude",
    "accuracy",
    "altitudeAccuracy",
    "heading",
    "speed",
    "require",
    "bom",
    "GeoLocation",
    "getInstance",
    "tearDown",
    "$$instance",
    "undefined",
    "dispose",
    "testGetCurrentPosition",
    "that",
    "getCurrentPositionStub",
    "stub",
    "_geolocation",
    "succ",
    "err",
    "config",
    "assertEventFired",
    "getCurrentPosition",
    "assert",
    "called",
    "e",
    "assertEquals",
    "getTimestamp",
    "getLatitude",
    "getLongitude",
    "getAltitude",
    "getAccuracy",
    "getAltitudeAccuracy",
    "getHeading",
    "getSpeed",
    "restore",
    "code",
    "message",
    "getData",
    "testWatchPosition",
    "watchStub",
    "clearWatchStub",
    "startWatchPosition",
    "_watchId",
    "stopWatchPosition",
    "assertNull",
    "test"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,yBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAEEC,IAAAA,OAAO,EAAE,CACPV,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYG,KADL,EAEPX,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYI,aAFL,CAFX;AAOEC,IAAAA,OAAO,EACP;AACEC,MAAAA,IAAI,EAAE,IADR;AAEEC,MAAAA,SAAS,EAAE,IAFb;AAIEC,MAAAA,cAAc,EAAE,0BAAW;AACzB,eAAOhB,EAAE,CAACiB,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAP;AACD,OANH;AAQEC,MAAAA,KAAK,EAAE,iBAAW;AAChB,aAAKL,SAAL,GAAiB;AACfM,UAAAA,SAAS,EAAG,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EADI;AAEfC,UAAAA,MAAM,EAAE;AACNC,YAAAA,QAAQ,EAAE,CADJ;AAENC,YAAAA,SAAS,EAAE,CAFL;AAGNC,YAAAA,QAAQ,EAAE,CAHJ;AAINC,YAAAA,QAAQ,EAAE,CAJJ;AAKNC,YAAAA,gBAAgB,EAAE,CALZ;AAMNC,YAAAA,OAAO,EAAE,CANH;AAONC,YAAAA,KAAK,EAAE;AAPD;AAFO,SAAjB;;AAYA,aAAKC,OAAL,CAAa,CAAC,aAAD,CAAb;;AACA,aAAKlB,IAAL,GAAYd,EAAE,CAACiC,GAAH,CAAOC,WAAP,CAAmBC,WAAnB,EAAZ;AACD,OAvBH;AAyBEC,MAAAA,QAAQ,EAAE,oBAAW;AACnBpC,QAAAA,EAAE,CAACiC,GAAH,CAAOC,WAAP,CAAmBG,UAAnB,GAAgCC,SAAhC;;AACA,aAAKxB,IAAL,CAAUyB,OAAV;;AACA,aAAKzB,IAAL,GAAY,IAAZ;AACA,aAAKC,SAAL,GAAiB,IAAjB;AACD,OA9BH;AAgCEyB,MAAAA,sBAAsB,EAAE,kCAAW;AACjC,YAAIC,IAAI,GAAG,IAAX,CADiC,CAGjC;;AACA,YAAIC,sBAAsB,GAAG,KAAKC,IAAL,CAC3B,KAAK7B,IAAL,CAAU8B,YADiB,EAE3B,oBAF2B,EAG3B,UAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4B;AAC1BF,UAAAA,IAAI,CAACJ,IAAI,CAAC1B,SAAN,CAAJ;AACH,SAL4B,CAA7B;AAOA,aAAKiC,gBAAL,CAAsB,KAAKlC,IAA3B,EAAiC,UAAjC,EAA6C,YAAW;AACtD2B,UAAAA,IAAI,CAAC3B,IAAL,CAAUmC,kBAAV,CAA6B,KAA7B,EAAoC,IAApC,EAA0C,IAA1C;;AACAR,UAAAA,IAAI,CAACS,MAAL,CAAYR,sBAAsB,CAACS,MAAnC;AAED,SAJD,EAIG,UAASC,CAAT,EAAY;AACbX,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeM,SAAjC,EAA4C+B,CAAC,CAACE,YAAF,EAA5C;AACAb,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBC,QAAxC,EAAkD2B,CAAC,CAACG,WAAF,EAAlD;AACAd,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBE,SAAxC,EAAmD0B,CAAC,CAACI,YAAF,EAAnD;AACAf,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBG,QAAxC,EAAkDyB,CAAC,CAACK,WAAF,EAAlD;AACAhB,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBI,QAAxC,EAAkDwB,CAAC,CAACM,WAAF,EAAlD;AACAjB,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBK,gBAAxC,EAA0DuB,CAAC,CAACO,mBAAF,EAA1D;AACAlB,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBM,OAAxC,EAAiDsB,CAAC,CAACQ,UAAF,EAAjD;AACAnB,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBO,KAAxC,EAA+CqB,CAAC,CAACS,QAAF,EAA/C;AACD,SAbD;AAeAnB,QAAAA,sBAAsB,CAACoB,OAAvB,GA1BiC,CA4BjC;;AACA,YAAIpB,sBAAsB,GAAG,KAAKC,IAAL,CAC3B,KAAK7B,IAAL,CAAU8B,YADiB,EAE3B,oBAF2B,EAG3B,UAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4B;AAC1BD,UAAAA,GAAG,CAAC;AAACiB,YAAAA,IAAI,EAAE,CAAP;AAAUC,YAAAA,OAAO,EAAE;AAAnB,WAAD,CAAH;AACH,SAL4B,CAA7B;AAOA,aAAKhB,gBAAL,CAAsB,KAAKlC,IAA3B,EAAiC,OAAjC,EAA0C,YAAW;AACnD2B,UAAAA,IAAI,CAAC3B,IAAL,CAAUmC,kBAAV,CAA6B,KAA7B,EAAoC,IAApC,EAA0C,IAA1C;;AACAR,UAAAA,IAAI,CAACS,MAAL,CAAYR,sBAAsB,CAACS,MAAnC;AAED,SAJD,EAIG,UAASC,CAAT,EAAY;AACbX,UAAAA,IAAI,CAACY,YAAL,CAAkB,CAAlB,EAAqBD,CAAC,CAACa,OAAF,GAAYF,IAAjC;AACAtB,UAAAA,IAAI,CAACY,YAAL,CAAkB,OAAlB,EAA2BD,CAAC,CAACa,OAAF,GAAYD,OAAvC;AACD,SAPD;AASAtB,QAAAA,sBAAsB,CAACoB,OAAvB;AAED,OA/EH;AAiFEI,MAAAA,iBAAiB,EAAE,6BAAW;AAC5B,YAAIzB,IAAI,GAAG,IAAX;AACA,YAAI0B,SAAS,GAAG,KAAKxB,IAAL,CACd,KAAK7B,IAAL,CAAU8B,YADI,EAEd,eAFc,EAGd,UAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4B;AAC1BF,UAAAA,IAAI,CAACJ,IAAI,CAAC1B,SAAN,CAAJ;AACA,iBAAO,GAAP;AACH,SANe,CAAhB;AAOA,YAAIqD,cAAc,GAAG,KAAKzB,IAAL,CAAU,KAAK7B,IAAL,CAAU8B,YAApB,EAAkC,YAAlC,CAArB;AAEA,aAAKI,gBAAL,CAAsB,KAAKlC,IAA3B,EAAiC,UAAjC,EAA6C,YAAW;AACtD2B,UAAAA,IAAI,CAAC3B,IAAL,CAAUuD,kBAAV,CAA6B,KAA7B,EAAoC,IAApC,EAA0C,IAA1C;;AACA5B,UAAAA,IAAI,CAACS,MAAL,CAAYiB,SAAS,CAAChB,MAAtB;AACAV,UAAAA,IAAI,CAACY,YAAL,CAAkB,GAAlB,EAAuBZ,IAAI,CAAC3B,IAAL,CAAUwD,QAAjC;AAED,SALD,EAKG,UAASlB,CAAT,EAAY;AACbX,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeM,SAAjC,EAA4C+B,CAAC,CAACE,YAAF,EAA5C;AACAb,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBC,QAAxC,EAAkD2B,CAAC,CAACG,WAAF,EAAlD;AACAd,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBE,SAAxC,EAAmD0B,CAAC,CAACI,YAAF,EAAnD;AACAf,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBG,QAAxC,EAAkDyB,CAAC,CAACK,WAAF,EAAlD;AACAhB,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBI,QAAxC,EAAkDwB,CAAC,CAACM,WAAF,EAAlD;AACAjB,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBK,gBAAxC,EAA0DuB,CAAC,CAACO,mBAAF,EAA1D;AACAlB,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBM,OAAxC,EAAiDsB,CAAC,CAACQ,UAAF,EAAjD;AACAnB,UAAAA,IAAI,CAACY,YAAL,CAAkBZ,IAAI,CAAC1B,SAAL,CAAeS,MAAf,CAAsBO,KAAxC,EAA+CqB,CAAC,CAACS,QAAF,EAA/C;AACD,SAdD;;AAiBA,aAAK/C,IAAL,CAAUyD,iBAAV;;AACA,aAAKrB,MAAL,CAAYkB,cAAc,CAACjB,MAA3B;AACAV,QAAAA,IAAI,CAAC+B,UAAL,CAAgB/B,IAAI,CAAC3B,IAAL,CAAUwD,QAA1B;AAEAH,QAAAA,SAAS,CAACL,OAAV;AACAM,QAAAA,cAAc,CAACN,OAAf;AACD;AAnHH;AARF,GADA;AAlBA9D,EAAAA,EAAE,CAACyE,IAAH,CAAQxC,GAAR,CAAYC,WAAZ,CAAwB/B,aAAxB,GAAwCA,aAAxC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.GeoLocation\",\n{\n  extend : qx.dev.unit.TestCase,\n  include: [\n    qx.dev.unit.MMock,\n    qx.dev.unit.MRequirements\n  ],\n\n  members :\n  {\n    _geo: null,\n    _position: null,\n\n    hasGeolocation: function() {\n      return qx.core.Environment.get(\"html.geolocation\");\n    },\n\n    setUp: function() {\n      this._position = {\n        timestamp: (new Date()).getTime(),\n        coords: {\n          latitude: 1,\n          longitude: 2,\n          altitude: 3,\n          accuracy: 4,\n          altitudeAccuracy: 5,\n          heading: 6,\n          speed: 7\n        }\n      };\n      this.require([\"geolocation\"]);\n      this._geo = qx.bom.GeoLocation.getInstance();\n    },\n\n    tearDown: function() {\n      qx.bom.GeoLocation.$$instance = undefined;\n      this._geo.dispose();\n      this._geo = null;\n      this._position = null;\n    },\n\n    testGetCurrentPosition: function() {\n      var that = this;\n\n      //test the position event\n      var getCurrentPositionStub = this.stub(\n        this._geo._geolocation,\n        \"getCurrentPosition\",\n        function(succ, err, config) {\n          succ(that._position);\n      });\n\n      this.assertEventFired(this._geo, \"position\", function() {\n        that._geo.getCurrentPosition(false, 1000, 1000);\n        that.assert(getCurrentPositionStub.called);\n\n      }, function(e) {\n        that.assertEquals(that._position.timestamp, e.getTimestamp());\n        that.assertEquals(that._position.coords.latitude, e.getLatitude());\n        that.assertEquals(that._position.coords.longitude, e.getLongitude());\n        that.assertEquals(that._position.coords.altitude, e.getAltitude());\n        that.assertEquals(that._position.coords.accuracy, e.getAccuracy());\n        that.assertEquals(that._position.coords.altitudeAccuracy, e.getAltitudeAccuracy());\n        that.assertEquals(that._position.coords.heading, e.getHeading());\n        that.assertEquals(that._position.coords.speed, e.getSpeed());\n      });\n\n      getCurrentPositionStub.restore();\n\n      //test the error event\n      var getCurrentPositionStub = this.stub(\n        this._geo._geolocation,\n        \"getCurrentPosition\",\n        function(succ, err, config) {\n          err({code: 1, message: \"Error\"});\n      });\n\n      this.assertEventFired(this._geo, \"error\", function() {\n        that._geo.getCurrentPosition(false, 1000, 1000);\n        that.assert(getCurrentPositionStub.called);\n\n      }, function(e) {\n        that.assertEquals(1, e.getData().code);\n        that.assertEquals(\"Error\", e.getData().message);\n      });\n\n      getCurrentPositionStub.restore();\n\n    },\n\n    testWatchPosition: function() {\n      var that = this;\n      var watchStub = this.stub(\n        this._geo._geolocation,\n        \"watchPosition\",\n        function(succ, err, config) {\n          succ(that._position);\n          return 200;\n      });\n      var clearWatchStub = this.stub(this._geo._geolocation, \"clearWatch\");\n\n      this.assertEventFired(this._geo, \"position\", function() {\n        that._geo.startWatchPosition(false, 1000, 1000);\n        that.assert(watchStub.called);\n        that.assertEquals(200, that._geo._watchId);\n\n      }, function(e) {\n        that.assertEquals(that._position.timestamp, e.getTimestamp());\n        that.assertEquals(that._position.coords.latitude, e.getLatitude());\n        that.assertEquals(that._position.coords.longitude, e.getLongitude());\n        that.assertEquals(that._position.coords.altitude, e.getAltitude());\n        that.assertEquals(that._position.coords.accuracy, e.getAccuracy());\n        that.assertEquals(that._position.coords.altitudeAccuracy, e.getAltitudeAccuracy());\n        that.assertEquals(that._position.coords.heading, e.getHeading());\n        that.assertEquals(that._position.coords.speed, e.getSpeed());\n      });\n\n\n      this._geo.stopWatchPosition();\n      this.assert(clearWatchStub.called);\n      that.assertNull(that._geo._watchId);\n\n      watchStub.restore();\n      clearWatchStub.restore();\n    }\n  }\n});\n"
  ]
}