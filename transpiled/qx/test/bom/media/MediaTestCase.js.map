{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/media/MediaTestCase.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "_media",
    "_src",
    "_getSrc",
    "_createMedia",
    "_checkFeature",
    "setUp",
    "tearDown",
    "dispose",
    "testId",
    "id",
    "setId",
    "assertEquals",
    "getId",
    "testVolume",
    "exReg",
    "that",
    "setVolume",
    "getVolume",
    "assertException",
    "DOMException",
    "testMute",
    "assertFalse",
    "isMuted",
    "setMuted",
    "assertTrue",
    "testCurrentTime",
    "getCurrentTime",
    "testSource",
    "bom",
    "media",
    "Audio",
    "setSource",
    "_ref",
    "split",
    "expectedFile",
    "length",
    "getSource",
    "foundFile",
    "testControls",
    "hasControls",
    "showControls",
    "hideControls",
    "testAutoplay",
    "getAutoplay",
    "setAutoplay",
    "testGetMediaObject",
    "assertElement",
    "getMediaObject",
    "testPreload",
    "getPreload",
    "setPreload",
    "testLoop",
    "isLoop",
    "setLoop",
    "testVolumeChangeEvent",
    "addListener",
    "e",
    "resume",
    "wait",
    "core",
    "Environment",
    "get",
    "skip",
    "isPaused",
    "play",
    "test",
    "MediaTestCase"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * @ignore(DOMException)\n */\n\nqx.Class.define(\"qx.test.bom.media.MediaTestCase\",\n{\n  type : \"abstract\",\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    _media: null,\n    _src: null,\n\n    _getSrc: function() {\n    },\n\n    _createMedia: function() {\n    },\n\n    _checkFeature: function() {\n    },\n\n\n    setUp : function()\n    {\n      this._checkFeature();\n\n      this._src = this._getSrc();\n      this._media = this._createMedia();\n    },\n\n    tearDown : function()\n    {\n      this._media.dispose();\n      this._media = null;\n      this._src = null;\n    },\n\n    testId: function()\n    {\n      var id = \"mediaid\";\n      this._media.setId(id);\n      this.assertEquals(id, this._media.getId());\n    },\n\n    testVolume: function()\n    {\n      var exReg = /index.*?size.*?err/i;\n      var that = this;\n\n      this._media.setVolume(1);\n      this.assertEquals(1, this._media.getVolume());\n\n      this._media.setVolume(0);\n      this.assertEquals(0, this._media.getVolume());\n\n      this.assertException(function() {\n        that._media.setVolume(-1);\n      }, DOMException, exReg);\n\n      this.assertException(function() {\n        that._media.setVolume(2);\n      }, DOMException, exReg);\n    },\n\n\n    testMute: function()\n    {\n      this.assertFalse(this._media.isMuted());\n\n      this._media.setMuted(true);\n      this.assertTrue(this._media.isMuted());\n\n      this._media.setMuted(false);\n      this.assertFalse(this._media.isMuted());\n    },\n\n    testCurrentTime: function()\n    {\n      var that = this;\n      this.assertEquals(0, this._media.getCurrentTime());\n    },\n\n    testSource: function()\n    {\n      this._media.dispose();\n      this._media = new qx.bom.media.Audio();\n\n      this._media.setSource(this._src);\n\n      var _ref = this._src.split(\"/\");\n      var expectedFile = _ref[_ref.length-1];\n\n      _ref = this._media.getSource().split(\"/\");\n      var foundFile = _ref[_ref.length-1];\n\n      this.assertEquals(expectedFile, foundFile);\n    },\n\n\n    testControls: function()\n    {\n      this.assertFalse(this._media.hasControls());\n\n      this._media.showControls();\n      this.assertTrue(this._media.hasControls());\n\n      this._media.hideControls();\n      this.assertFalse(this._media.hasControls());\n    },\n\n\n    testAutoplay: function()\n    {\n      this.assertFalse(this._media.getAutoplay());\n      this._media.setAutoplay(true);\n      this.assertTrue(this._media.getAutoplay());\n\n      this._media.setAutoplay(false);\n      this.assertFalse(this._media.getAutoplay());\n    },\n\n    testGetMediaObject: function() {\n      this.assertElement(this._media.getMediaObject());\n    },\n\n    testPreload: function()\n    {\n      //default\n      this.assertEquals(\"auto\", this._media.getPreload(), \"a\");\n\n      this._media.setPreload(\"none\");\n      this.assertEquals(\"none\", this._media.getPreload());\n\n      this._media.setPreload(\"metadata\");\n      this.assertEquals(\"metadata\", this._media.getPreload(), \"12\");\n\n      this._media.setPreload(\"auto\");\n      this.assertEquals(\"auto\", this._media.getPreload(), \"b\");\n\n      //the preload default is auto\n      this._media.setPreload(\"none\");\n      this._media.setPreload(\"affe\");\n      this.assertEquals(\"auto\", this._media.getPreload(), \"c\");\n    },\n\n    testLoop: function()\n    {\n      this.assertFalse(this._media.isLoop());\n\n      this._media.setLoop(true);\n      this.assertTrue(this._media.isLoop());\n\n      this._media.setLoop(false);\n      this.assertFalse(this._media.isLoop());\n    },\n\n\n    testVolumeChangeEvent: function()\n    {\n      this._media.addListener(\"volumechange\", function(e)\n      {\n        this.resume(function() {\n          this.assertEquals(0.5, this._media.getVolume());\n        }, this);\n      }, this);\n\n      this._media.setVolume(0.5);\n\n      this.wait();\n    },\n\n    // On safari this test fails, if we are running the\n    // complete testsuite and the test is not the first\n    // test in qx.test.bom.media.MediaTestCase. By naming\n    // it with a blank behind test it is enqueued as the first\n    // test and the test run succeeds.\n    //\n    // Note that the tests in qx.test.bom.media.MediaTestCase\n    // are started seperately or this test is restarted after \n    // it failed, then it succeeds.\n    // This is some weird timing or caching issue which could\n    // not be solved otherwise.\n    //\n    \"test Play Event\": function()\n    {\n      // Disabled on travis because of events not being fired reliable\n      if (qx.core.Environment.get(\"qx.test.travis\") == \"true\") {\n        this.skip(\"HTML5 audio/video play event test disabled on travis\");\n      }\n      // BUG #8778\n      if (qx.core.Environment.get(\"browser.name\") == \"mobile chrome\") {\n        this.skip(\"HTML5 audio/video playback must be triggered by user interaction in Chrome on Android.\");\n      }\n      this.assertTrue(this._media.isPaused());\n\n      this._media.addListener(\"play\", function(e)\n      {\n        this.resume(function() {\n          this.assertFalse(this._media.isPaused());\n        }, this);\n      }, this);\n\n      this._media.play();\n\n      this.wait();\n    }\n  }\n});\n"
  ]
}