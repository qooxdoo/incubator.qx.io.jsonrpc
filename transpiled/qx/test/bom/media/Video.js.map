{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/media/Video.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "test",
    "bom",
    "media",
    "MediaTestCase",
    "include",
    "dev",
    "unit",
    "MRequirements",
    "members",
    "_getSrc",
    "core",
    "Environment",
    "get",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "_createMedia",
    "Video",
    "_src",
    "_checkFeature",
    "require",
    "hasVideo",
    "testWidth",
    "_media",
    "setWidth",
    "assertEquals",
    "getWidth",
    "testHeight",
    "testVideoWidthAndHeight",
    "e",
    "getVideoWidth",
    "getVideoHeight",
    "addListener",
    "v",
    "_target"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n *\n * @asset(qx/test/media/*)\n */\n\nqx.Class.define(\"qx.test.bom.media.Video\",\n{\n  extend : qx.test.bom.media.MediaTestCase,\n  include: [qx.dev.unit.MRequirements],\n\n  members :\n  {\n    _getSrc: function() {\n      if (qx.core.Environment.get(\"html.video.h264\")) {\n        return qx.util.ResourceManager.getInstance().toUri(\"qx/test/media/qx.mp4\");\n      } else if(qx.core.Environment.get(\"html.video.ogg\")) {\n        return qx.util.ResourceManager.getInstance().toUri(\"qx/test/media/qx.ogv\");\n      } else if(qx.core.Environment.get(\"html.video.webm\")) {\n        return qx.util.ResourceManager.getInstance().toUri(\"qx/test/media/qx.webm\");\n      }\n    },\n\n    _createMedia: function() {\n      return new qx.bom.media.Video(this._src);\n    },\n\n    _checkFeature: function() {\n      this.require([\"video\"]);\n    },\n\n    hasVideo: function() {\n      return qx.core.Environment.get(\"html.video\");\n    },\n\n\n    testWidth: function() {\n      this._media.setWidth(200);\n      this.assertEquals(200, this._media.getWidth());\n    },\n\n    testHeight: function() {\n      this._media.setWidth(200);\n      this.assertEquals(200, this._media.getWidth());\n    },\n\n    testVideoWidthAndHeight: function(e) {\n      this.assertEquals(0, this._media.getVideoWidth());\n      this.assertEquals(0, this._media.getVideoHeight());\n\n      //we know the video width and hight when meta data is loaded\n      this._media.addListener(\"loadedmetadata\", function(e) {\n        var v = e._target;\n        this.assertEquals(720, v.getVideoWidth());\n        this.assertEquals(704, v.getVideoHeight());\n      }, this);\n\n      //or when the entire video is loaded\n      this._media.addListener(\"loadeddata\", function(e) {\n        var v = e._target;\n        this.assertEquals(720, v.getVideoWidth());\n        this.assertEquals(704, v.getVideoHeight());\n      }, this);\n    }\n  }\n});\n"
  ]
}