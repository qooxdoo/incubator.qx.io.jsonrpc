{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/client/Css.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testBorderImageSyntax",
    "styleName",
    "core",
    "Environment",
    "get",
    "RequirementError",
    "standardSyntax",
    "assertBoolean",
    "assertTrue",
    "assertFalse",
    "test",
    "bom",
    "client",
    "Css"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,wBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,qBAAqB,EAAG,iCACxB;AACE,YAAIC,SAAS,GAAGZ,EAAE,CAACa,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,iBAAxB,CAAhB;;AACA,YAAI,OAAOH,SAAP,KAAoB,QAAxB,EAAkC;AAChC,gBAAM,IAAIZ,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYQ,gBAAhB,CAAiC,iBAAjC,CAAN;AACD;;AAED,YAAIC,cAAc,GAAGjB,EAAE,CAACa,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,gCAAxB,CAArB;AACA,aAAKG,aAAL,CAAmBD,cAAnB;;AAGA,YAAIL,SAAS,IAAI,aAAjB,EAAgC;AAC9B,eAAKO,UAAL,CAAgBF,cAAhB;AAED,SAHD,MAIK;AACH,eAAKG,WAAL,CAAiBH,cAAjB;AAED;AACF;AApBH;AAJF,GADA;AAlBAjB,EAAAA,EAAE,CAACqB,IAAH,CAAQC,GAAR,CAAYC,MAAZ,CAAmBC,GAAnB,CAAuBrB,aAAvB,GAAuCA,aAAvC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.client.Css\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    testBorderImageSyntax : function()\n    {\n      var styleName = qx.core.Environment.get(\"css.borderimage\");\n      if (typeof styleName!== \"string\") {\n        throw new qx.dev.unit.RequirementError(\"css.borderimage\");\n      }\n\n      var standardSyntax = qx.core.Environment.get(\"css.borderimage.standardsyntax\");\n      this.assertBoolean(standardSyntax, \"Browser supports borderImage but \" +\n        \"syntax type was not detected!\");\n\n      if (styleName == \"borderImage\") {\n        this.assertTrue(standardSyntax, \"Browser supports unprefixed borderImage \" +\n          \"but syntax type detected as non-standard!\");\n      }\n      else {\n        this.assertFalse(standardSyntax, \"Browser supports prefixed borderImage \" +\n          \"but syntax type detected as standard!\");\n      }\n    }\n  }\n});"
  ]
}