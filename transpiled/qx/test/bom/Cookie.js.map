{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/Cookie.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testSaveSimpleData",
    "key",
    "dataToSave",
    "result",
    "bom",
    "Cookie",
    "get",
    "assertNull",
    "set",
    "assertEquals",
    "del",
    "testSaveData",
    "key1",
    "key2",
    "dataToSave1",
    "dataToSave2",
    "result1",
    "result2",
    "testEncoding",
    "special",
    "utf",
    "escapedSpecial",
    "escape",
    "escapedUtf",
    "expectedSpecial",
    "unescape",
    "resultSpecial",
    "expectedUtf",
    "resultUtf",
    "escapedCookie",
    "document",
    "cookie",
    "join",
    "assertTrue",
    "decodeURIComponent",
    "test"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,oBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EACP;AAEEC,MAAAA,kBAAkB,EAAG,8BACrB;AACE,YAAIC,GAAG,GAAG,uCAAV;AACA,YAAIC,UAAU,GAAG,SAAjB,CAFF,CAIE;;AACA,YAAIC,MAAM,GAAGd,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkBL,GAAlB,CAAb;AACA,aAAKM,UAAL,CAAgBJ,MAAhB,EAAwB,0BAAxB,EANF,CAQE;;AACAd,QAAAA,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcG,GAAd,CAAkBP,GAAlB,EAAuBC,UAAvB;AACAC,QAAAA,MAAM,GAAGd,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkBL,GAAlB,CAAT;AACA,aAAKQ,YAAL,CAAkBP,UAAlB,EAA8BC,MAA9B,uGAXF,CAcE;;AACAd,QAAAA,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcK,GAAd,CAAkBT,GAAlB;AACAE,QAAAA,MAAM,GAAGd,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkBL,GAAlB,CAAT;AACA,aAAKM,UAAL,CAAgBJ,MAAhB,EAAwB,cAAxB;AACD,OArBH;AAuBEQ,MAAAA,YAAY,EAAG,wBACf;AACE,YAAIC,IAAI,GAAG,kCAAX;AACA,YAAIC,IAAI,GAAG,kCAAX;AACA,YAAIC,WAAW,GAAG,WAAlB;AACA,YAAIC,WAAW,GAAG,WAAlB,CAJF,CAME;;AACA,YAAIC,OAAO,GAAG3B,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkBM,IAAlB,CAAd;AACA,YAAIK,OAAO,GAAG5B,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkBO,IAAlB,CAAd;AACA,aAAKN,UAAL,CAAgBS,OAAhB,EAAyB,gCAAzB;AACA,aAAKT,UAAL,CAAgBU,OAAhB,EAAyB,gCAAzB,EAVF,CAYE;;AACA5B,QAAAA,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcG,GAAd,CAAkBI,IAAlB,EAAwBE,WAAxB;AACAzB,QAAAA,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcG,GAAd,CAAkBK,IAAlB,EAAwBE,WAAxB;AACAC,QAAAA,OAAO,GAAG3B,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkBM,IAAlB,CAAV;AACAK,QAAAA,OAAO,GAAG5B,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkBO,IAAlB,CAAV;AACA,aAAKJ,YAAL,CAAkBK,WAAlB,EAA+BE,OAA/B;AAEA,aAAKP,YAAL,CAAkBM,WAAlB,EAA+BE,OAA/B,uGAnBF,CAsBE;;AACA5B,QAAAA,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcK,GAAd,CAAkBE,IAAlB;AACAvB,QAAAA,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcK,GAAd,CAAkBG,IAAlB;AACAG,QAAAA,OAAO,GAAG3B,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkBM,IAAlB,CAAV;AACAK,QAAAA,OAAO,GAAG5B,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkBO,IAAlB,CAAV;AACA,aAAKN,UAAL,CAAgBS,OAAhB,EAAyB,oBAAzB;AACA,aAAKT,UAAL,CAAgBU,OAAhB,EAAyB,oBAAzB;AACD,OArDH;AAuDEC,MAAAA,YAAY,EAAG,wBAAW;AACxB,YAAIC,OAAO,GAAG,6BAAd;AACA,YAAIC,GAAG,GAAG,OAAV;AAEA/B,QAAAA,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcG,GAAd,CAAkB,SAAlB,EAA6BW,OAA7B;AACA9B,QAAAA,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcG,GAAd,CAAkB,KAAlB,EAAyBY,GAAzB;AAEA,YAAIC,cAAc,GAAGC,MAAM,CAACH,OAAD,CAA3B;AACA,YAAII,UAAU,GAAGD,MAAM,CAACF,GAAD,CAAvB;AAEA,YAAII,eAAe,GAAGC,QAAQ,CAACJ,cAAD,CAA9B;AACA,YAAIK,aAAa,GAAGrC,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkB,SAAlB,CAApB;AAEA,YAAIqB,WAAW,GAAGF,QAAQ,CAACF,UAAD,CAA1B;AACA,YAAIK,SAAS,GAAGvC,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkB,KAAlB,CAAhB;AAEA,YAAIuB,aAAa,GAAG,CAAE,eAAF,EAAmB,GAAnB,EAAwBN,UAAxB,CAApB;AACAO,QAAAA,QAAQ,CAACC,MAAT,GAAkBF,aAAa,CAACG,IAAd,CAAmB,EAAnB,CAAlB;AAEA,aAAKzB,UAAL,CAAgBlB,EAAE,CAACe,GAAH,CAAOC,MAAP,CAAcC,GAAd,CAAkB,eAAlB,CAAhB;AAEA,aAAK2B,UAAL,CAAiBC,kBAAkB,CAACb,cAAD,CAAlB,IAAsCI,QAAQ,CAACJ,cAAD,CAA/D,EAAkF,wCAAlF,EArBwB,CAsBxB;;AAEA,aAAKZ,YAAL,CAAkBe,eAAlB,EAAmCE,aAAnC,EAAkD,wCAAlD;AACA,aAAKjB,YAAL,CAAkBkB,WAAlB,EAA+BC,SAA/B,EAA0C,wCAA1C;AACD;AAjFH;AAJF,GADA;AAlBAvC,EAAAA,EAAE,CAAC8C,IAAH,CAAQ/B,GAAR,CAAYC,MAAZ,CAAmBb,aAAnB,GAAmCA,aAAnC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.Cookie\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n\n    testSaveSimpleData : function()\n    {\n      var key = \"qx.test.bom.Cookie.testSaveSimpleData\";\n      var dataToSave = \"Qooxdoo\";\n\n      // Check that no value exists\n      var result = qx.bom.Cookie.get(key);\n      this.assertNull(result, \"Empty check before start\");\n\n      // Set and restore value\n      qx.bom.Cookie.set(key, dataToSave);\n      result = qx.bom.Cookie.get(key);\n      this.assertEquals(dataToSave, result, \"It is expected that this test fails\" +\n          \" if you start this test from a file system with Google Chrome.\");\n\n      // remove value\n      qx.bom.Cookie.del(key);\n      result = qx.bom.Cookie.get(key);\n      this.assertNull(result, \"Remove value\");\n    },\n\n    testSaveData : function()\n    {\n      var key1 = \"qx.test.bom.Cookie.testSaveData2\";\n      var key2 = \"qx.test.bom.Cookie.testSaveData1\";\n      var dataToSave1 = \"Qooxdoo 1\";\n      var dataToSave2 = \"Qooxdoo 2\";\n\n      // Check that no values exist\n      var result1 = qx.bom.Cookie.get(key1);\n      var result2 = qx.bom.Cookie.get(key2);\n      this.assertNull(result1, \"Empty check before start (one)\");\n      this.assertNull(result2, \"Empty check before start (tow)\");\n\n      // Set and restore values\n      qx.bom.Cookie.set(key1, dataToSave1);\n      qx.bom.Cookie.set(key2, dataToSave2);\n      result1 = qx.bom.Cookie.get(key1);\n      result2 = qx.bom.Cookie.get(key2);\n      this.assertEquals(dataToSave1, result1, \"It is expected that this test fails\" +\n          \" if you start this test from a file system with Google Chrome.\");\n      this.assertEquals(dataToSave2, result2, \"It is expected that this test fails\" +\n          \" if you start this test from a file system with Google Chrome.\");\n\n      // remove values\n      qx.bom.Cookie.del(key1);\n      qx.bom.Cookie.del(key2);\n      result1 = qx.bom.Cookie.get(key1);\n      result2 = qx.bom.Cookie.get(key2);\n      this.assertNull(result1, \"Remove value (one)\");\n      this.assertNull(result2, \"Remove value (tow)\");\n    },\n\n    testEncoding : function() {\n      var special = '~!@#$%^&*(){}[]=:/,;?+\\'\"\\\\';\n      var utf = 'äëíöü';\n\n      qx.bom.Cookie.set('special', special);\n      qx.bom.Cookie.set('utf', utf);\n\n      var escapedSpecial = escape(special);\n      var escapedUtf = escape(utf);\n\n      var expectedSpecial = unescape(escapedSpecial);\n      var resultSpecial = qx.bom.Cookie.get('special');\n\n      var expectedUtf = unescape(escapedUtf);\n      var resultUtf = qx.bom.Cookie.get('utf');\n\n      var escapedCookie = [ 'manualEscaped', \"=\", escapedUtf ];\n      document.cookie = escapedCookie.join(\"\");\n\n      this.assertNull(qx.bom.Cookie.get('manualEscaped'));\n\n      this.assertTrue((decodeURIComponent(escapedSpecial) == unescape(escapedSpecial)), 'There is some incompatible characters.');\n      // this.assertTrue((decodeURIComponent(escapedUtf) == unescape(escapedUtf)), 'There is some incompatible characters.');\n\n      this.assertEquals(expectedSpecial, resultSpecial, 'There is some incompatible characters.');\n      this.assertEquals(expectedUtf, resultUtf, 'There is some incompatible characters.');\n    }\n  }\n});\n"
  ]
}