{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/element/Dimension.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "__inlineElement",
    "document",
    "createElement",
    "body",
    "appendChild",
    "__inlineElementWithPadding",
    "style",
    "padding",
    "__blockElement",
    "width",
    "__blockElementWithPadding",
    "tearDown",
    "removeChild",
    "testContentWidthOfInlineElement",
    "assertEquals",
    "bom",
    "element",
    "Dimension",
    "getContentWidth",
    "testContentWidthOfInlineElementWithPadding",
    "testContentWidthOfBlockElement",
    "testContentWidthOfBlockElementWithPadding",
    "testRoundingErrorInWidthAndHeightGetters",
    "mockElement1",
    "getBoundingClientRect",
    "right",
    "left",
    "bottom",
    "top",
    "mockElement2",
    "getWidth",
    "getHeight",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.element.Dimension\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    setUp : function()\n    {\n      this.__inlineElement = document.createElement(\"span\");\n      document.body.appendChild(this.__inlineElement);\n\n      this.__inlineElementWithPadding = document.createElement(\"span\");\n      this.__inlineElementWithPadding.style.padding = \"2px\";\n      document.body.appendChild(this.__inlineElementWithPadding);\n\n      this.__blockElement = document.createElement(\"div\");\n      this.__blockElement.style.width = \"200px\";\n      document.body.appendChild(this.__blockElement);\n\n      this.__blockElementWithPadding = document.createElement(\"div\");\n      this.__blockElementWithPadding.style.padding = \"2px\";\n      this.__blockElementWithPadding.style.width = \"200px\";\n      document.body.appendChild(this.__blockElementWithPadding);\n    },\n\n\n    tearDown : function()\n    {\n      document.body.removeChild(this.__inlineElement);\n      this.__inlineElement = null;\n\n      document.body.removeChild(this.__inlineElementWithPadding);\n      this.__inlineElementWithPadding = null;\n\n      document.body.removeChild(this.__blockElement);\n      this.__blockElement = null;\n\n      document.body.removeChild(this.__blockElementWithPadding);\n      this.__blockElementWithPadding = null;\n    },\n\n\n    testContentWidthOfInlineElement : function() {\n      this.assertEquals(0, qx.bom.element.Dimension.getContentWidth(this.__inlineElement));\n    },\n\n\n    testContentWidthOfInlineElementWithPadding : function() {\n      this.assertEquals(0, qx.bom.element.Dimension.getContentWidth(this.__inlineElementWithPadding));\n    },\n\n\n    testContentWidthOfBlockElement : function() {\n      this.assertEquals(200, qx.bom.element.Dimension.getContentWidth(this.__blockElement));\n    },\n\n\n    testContentWidthOfBlockElementWithPadding : function() {\n      this.assertEquals(200, qx.bom.element.Dimension.getContentWidth(this.__blockElementWithPadding));\n    },\n\n    testRoundingErrorInWidthAndHeightGetters : function() {\n      // width = left - right = height = bottom - top = 38.416656494140625\n      var mockElement1 =\n      {\n        getBoundingClientRect : function() {\n          return {\n            right: 91.58332824707031,\n            left: 53.16667175292969,\n            bottom: 91.58332824707031,\n            top: 53.16667175292969\n          };\n        }\n      };\n      // exactly same width and height as mockElement1\n      var mockElement2 =\n      {\n        getBoundingClientRect : function() {\n          return {\n            right: 91.58332824707031,\n            left: 53.16667175292969,\n            bottom: 91.58332824707031,\n            top: 53.16667175292969\n          };\n        }\n      };\n      // make sure both mock objects have the same width\n      this.assertEquals(mockElement1.getBoundingClientRect().right - mockElement1.getBoundingClientRect().left,\n       mockElement2.getBoundingClientRect().right - mockElement2.getBoundingClientRect().left);\n      // ... and the same height\n      this.assertEquals(mockElement1.getBoundingClientRect().bottom - mockElement1.getBoundingClientRect().top,\n       mockElement2.getBoundingClientRect().bottom - mockElement2.getBoundingClientRect().top);\n\n      // the width and height calculation for both objects should return the same\n      this.assertEquals(qx.bom.element.Dimension.getWidth(mockElement1), qx.bom.element.Dimension.getWidth(mockElement2));\n      this.assertEquals(qx.bom.element.Dimension.getHeight(mockElement1), qx.bom.element.Dimension.getHeight(mockElement2));\n    }\n  }\n});"
  ]
}