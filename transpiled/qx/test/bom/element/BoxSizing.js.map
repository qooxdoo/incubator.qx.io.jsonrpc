{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/element/BoxSizing.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MRequirements",
    "members",
    "__support",
    "mshtml",
    "opera",
    "gecko",
    "webkit",
    "__el",
    "setUp",
    "document",
    "createElement",
    "body",
    "appendChild",
    "tearDown",
    "removeChild",
    "hasBoxsizing",
    "core",
    "Environment",
    "get",
    "testGet",
    "require",
    "supported",
    "assertInArray",
    "bom",
    "element",
    "BoxSizing",
    "testSet",
    "allValues",
    "i",
    "l",
    "length",
    "set",
    "includes",
    "assertEquals",
    "assertNotEquals",
    "testCompile",
    "css",
    "compile",
    "assertMatch",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.element.BoxSizing\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  include : [qx.dev.unit.MRequirements],\n\n  members :\n  {\n    __support :\n    {\n      mshtml : [\"border-box\", \"content-box\"],\n      opera : [\"border-box\", \"content-box\"],\n      gecko : [\"border-box\", \"content-box\"],\n      webkit : [\"border-box\", \"content-box\"]\n    },\n\n    __el : null,\n\n    setUp : function()\n    {\n      this.__el = document.createElement(\"div\");\n      document.body.appendChild(this.__el);\n    },\n\n    tearDown : function()\n    {\n      document.body.removeChild(this.__el);\n      delete this.__el;\n    },\n\n    hasBoxsizing : function()\n    {\n      return !!qx.core.Environment.get(\"css.boxsizing\");\n    },\n\n    testGet : function()\n    {\n      this.require([\"boxsizing\"]);\n\n      var supported = this.__support[qx.core.Environment.get(\"engine.name\")] || [];\n      this.assertInArray(qx.bom.element.BoxSizing.get(this.__el), supported);\n    },\n\n    testSet : function()\n    {\n      this.require([\"boxsizing\"]);\n\n      var allValues = this.__support[\"gecko\"];\n      var supported = this.__support[qx.core.Environment.get(\"engine.name\")] || [];\n      for (var i=0, l=allValues.length; i<l; i++) {\n        qx.bom.element.BoxSizing.set(this.__el, allValues[i]);\n        if (supported.includes(allValues[i])) {\n          this.assertEquals(supported[i], qx.bom.element.BoxSizing.get(this.__el),\n            \"supported boxSizing value was not applied!\");\n        }\n        else {\n          this.assertNotEquals(supported[i], qx.bom.element.BoxSizing.get(this.__el),\n            \"boxSizing value was unexpectedly applied, maybe browser support has changed?\");\n        }\n      }\n    },\n\n    testCompile : function()\n    {\n      this.require([\"boxsizing\"]);\n\n      var css = qx.bom.element.BoxSizing.compile(\"border-box\");\n      this.assertMatch(css, /box-sizing/);\n    }\n  }\n});\n"
  ]
}