{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/Label.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "__boldStyle",
    "fontWeight",
    "__italicStyle",
    "fontStyle",
    "__boldItalicStyle",
    "__familyStyle",
    "fontFamily",
    "__fontSizeStyle",
    "fontSize",
    "__paddingStyle",
    "padding",
    "__marginStyle",
    "margin",
    "__allTogetherStyle",
    "lang",
    "Object",
    "mergeWith",
    "tearDown",
    "testMeasureSizeTextNormal",
    "core",
    "Environment",
    "get",
    "text",
    "size",
    "bom",
    "Label",
    "getTextSize",
    "assertEquals",
    "width",
    "height",
    "skip",
    "testMeasureSizeTextBold",
    "assertTrue",
    "testMeasureSizeTextItalic",
    "testMeasureSizeTextBoldItalic",
    "testMeasureSizeTextFontSize",
    "__fontSize",
    "testMeasureSizeTextFontFamily",
    "testMeasureSizeTextPadding",
    "testMeasureSizeTextMargin",
    "testMeasureSizeTextAllTogether",
    "testSanitizer",
    "element",
    "document",
    "createElement",
    "useHtml",
    "setSanitizer",
    "html",
    "indexOf",
    "value",
    "setValue",
    "getValue",
    "toLowerCase",
    "test"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,mBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EACP;AACEC,MAAAA,KAAK,EAAG,iBACR;AACE,aAAKC,oBAAL,GAAmB;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAnB;AACA,aAAKC,sBAAL,GAAqB;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAArB;AACA,aAAKC,0BAAL,GAAyB;AAAEH,UAAAA,UAAU,EAAE,MAAd;AAAsBE,UAAAA,SAAS,EAAE;AAAjC,SAAzB;AACA,aAAKE,sBAAL,GAAqB;AAAEC,UAAAA,UAAU,EAAE,CAAE,SAAF;AAAd,SAArB;AACA,aAAKC,wBAAL,GAAuB;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAvB;AACA,aAAKC,uBAAL,GAAsB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAtB;AACA,aAAKC,sBAAL,GAAqB;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAArB;AAEA,aAAKC,2BAAL,GAA0B,EAA1B;AACAzB,QAAAA,EAAE,CAAC0B,IAAH,CAAQC,MAAR,CAAeC,SAAf,CAAyB,KAAKH,2BAA9B,EAAkD,KAAKb,oBAAvD;AACAZ,QAAAA,EAAE,CAAC0B,IAAH,CAAQC,MAAR,CAAeC,SAAf,CAAyB,KAAKH,2BAA9B,EAAkD,KAAKX,sBAAvD;AACAd,QAAAA,EAAE,CAAC0B,IAAH,CAAQC,MAAR,CAAeC,SAAf,CAAyB,KAAKH,2BAA9B,EAAkD,KAAKT,0BAAvD;AACAhB,QAAAA,EAAE,CAAC0B,IAAH,CAAQC,MAAR,CAAeC,SAAf,CAAyB,KAAKH,2BAA9B,EAAkD,KAAKR,sBAAvD;AACAjB,QAAAA,EAAE,CAAC0B,IAAH,CAAQC,MAAR,CAAeC,SAAf,CAAyB,KAAKH,2BAA9B,EAAkD,KAAKN,wBAAvD;AACAnB,QAAAA,EAAE,CAAC0B,IAAH,CAAQC,MAAR,CAAeC,SAAf,CAAyB,KAAKH,2BAA9B,EAAkD,KAAKJ,uBAAvD;AACArB,QAAAA,EAAE,CAAC0B,IAAH,CAAQC,MAAR,CAAeC,SAAf,CAAyB,KAAKH,2BAA9B,EAAkD,KAAKF,sBAAvD;AACD,OAnBH;AAqBEM,MAAAA,QAAQ,EAAG,oBACX;AACE,aAAKjB,oBAAL,GAAmB,IAAnB;AACA,aAAKE,sBAAL,GAAqB,IAArB;AACA,aAAKG,sBAAL,GAAqB,IAArB;AACA,aAAKE,wBAAL,GAAuB,IAAvB;AACA,aAAKE,uBAAL,GAAsB,IAAtB;AACA,aAAKE,sBAAL,GAAqB,IAArB;AACA,aAAKE,2BAAL,GAA0B,IAA1B;AACD,OA9BH;AAgCE;AACA;AAEAK,MAAAA,yBAAyB,EAAG,qCAC5B;AACE,YAAI,CAAC9B,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAD,IACAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CADA,IAEAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAF1C,EAGA;AACE,cAAIC,IAAI,GAAG,aAAX;AACA,cAAIC,IAAI,GAAG,IAAX;AAEAA,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,CAAP;AACA,eAAKK,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AAEAN,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKf,wBAApC,CAAP;AACA,eAAKoB,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AAEAN,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKjB,sBAApC,CAAP;AACA,eAAKsB,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AAEAN,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKb,uBAApC,CAAP;AACA,eAAKkB,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AAEAN,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKX,sBAApC,CAAP;AACA,eAAKgB,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AAEAN,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKT,2BAApC,CAAP;AACA,eAAKc,YAAL,CAAkB,GAAlB,EAAuBJ,IAAI,CAACK,KAA5B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AACD,SA9BD,MAgCA;AACE,eAAKC,IAAL;AACD;AACF,OAxEH;AA0EEC,MAAAA,uBAAuB,EAAG,mCAC1B;AACE,YAAI,CAAC3C,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAD,IACAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CADA,IAEAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAF1C,EAGA;AACE,cAAIC,IAAI,GAAG,aAAX;AACA,cAAIC,IAAI,GAAG,IAAX;AAEAA,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKtB,oBAApC,CAAP;AACA,eAAK2B,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AACD,SAVD,MAYA;AACE,eAAKG,UAAL,CAAgB,IAAhB;AACD;AACF,OA3FH;AA8FEC,MAAAA,yBAAyB,EAAG,qCAC5B;AACE,YAAI,CAAC7C,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAD,IACAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CADA,IAEAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAF1C,EAGA;AACE,cAAIC,IAAI,GAAG,aAAX;AACA,cAAIC,IAAI,GAAG,IAAX;AAEAA,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKpB,sBAApC,CAAP;AACA,eAAKyB,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AACD,SAVD,MAYA;AACE,eAAKG,UAAL,CAAgB,IAAhB;AACD;AACF,OA/GH;AAkHEE,MAAAA,6BAA6B,EAAG,yCAChC;AACE,YAAI,CAAC9C,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAD,IACAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CADA,IAEAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAF1C,EAGA;AACE,cAAIC,IAAI,GAAG,aAAX;AACA,cAAIC,IAAI,GAAG,IAAX;AAEAA,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKlB,0BAApC,CAAP;AACA,eAAKuB,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AACD,SAVD,MAYA;AACE,eAAKG,UAAL,CAAgB,IAAhB;AACD;AACF,OAnIH;AAsIEG,MAAAA,2BAA2B,EAAG,uCAC9B;AACE,YAAI,CAAC/C,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAD,IACAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CADA,IAEAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAF1C,EAGA;AACE,cAAIC,IAAI,GAAG,aAAX;AACA,cAAIC,IAAI,GAAG,IAAX;AAEAA,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKc,mBAApC,CAAP;AACA,eAAKT,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AACD,SAVD,MAYA;AACE,eAAKG,UAAL,CAAgB,IAAhB;AACD;AACF,OAvJH;AA0JEK,MAAAA,6BAA6B,EAAG,yCAChC;AACE,YAAI,CAACjD,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAD,IACAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CADA,IAEAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAF1C,EAGA;AACE,cAAIC,IAAI,GAAG,aAAX;AACA,cAAIC,IAAI,GAAG,IAAX;AAEAA,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKjB,sBAApC,CAAP;AACA,eAAKsB,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AACD,SAVD,MAYA;AACE,eAAKG,UAAL,CAAgB,IAAhB;AACD;AACF,OA3KH;AA8KEM,MAAAA,0BAA0B,EAAG,sCAC7B;AACE,YAAI,CAAClD,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAD,IACAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CADA,IAEAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAF1C,EAGA;AACE,cAAIC,IAAI,GAAG,aAAX;AACA,cAAIC,IAAI,GAAG,IAAX;AAEAA,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKb,uBAApC,CAAP;AACA,eAAKkB,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AACD,SAVD,MAYA;AACE,eAAKG,UAAL,CAAgB,IAAhB;AACD;AACF,OA/LH;AAkMEO,MAAAA,yBAAyB,EAAG,qCAC5B;AACE,YAAI,CAACnD,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAD,IACAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CADA,IAEAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAF1C,EAGA;AACE,cAAIC,IAAI,GAAG,aAAX;AACA,cAAIC,IAAI,GAAG,IAAX;AAEAA,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKX,sBAApC,CAAP;AACA,eAAKgB,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACK,KAA3B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AACD,SAVD,MAYA;AACE,eAAKG,UAAL,CAAgB,IAAhB;AACD;AACF,OAnNH;AAsNEQ,MAAAA,8BAA8B,EAAG,0CACjC;AACE,YAAI,CAACpD,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,kBAAxB,CAAD,IACAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CADA,IAEAjC,EAAE,CAAC+B,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,SAAxB,KAAsC,KAF1C,EAGA;AACE,cAAIC,IAAI,GAAG,aAAX;AACA,cAAIC,IAAI,GAAG,IAAX;AAEAA,UAAAA,IAAI,GAAGnC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaC,WAAb,CAAyBJ,IAAzB,EAA+B,KAAKT,2BAApC,CAAP;AACA,eAAKc,YAAL,CAAkB,GAAlB,EAAuBJ,IAAI,CAACK,KAA5B;AACA,eAAKD,YAAL,CAAkB,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B;AACD,SAVD,MAYA;AACE,eAAKG,UAAL,CAAgB,IAAhB;AACD;AACF,OAvOH;AA0OES,MAAAA,aAAa,EAAG,yBAChB;AACE,YAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAF,QAAAA,OAAO,CAACG,OAAR,GAAkB,IAAlB,CAFF,CAIE;;AACAzD,QAAAA,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaqB,YAAb,CAA0B,UAASC,IAAT,EAAe;AACvC,cAAIA,IAAI,CAACC,OAAL,CAAa,SAAb,IAA0B,CAAC,CAA/B,EAAkC;AAChC,mBAAO,EAAP;AACD;;AAED,iBAAOD,IAAP;AACD,SAND,EALF,CAaE;;AACA,YAAIE,KAAK,GAAG,YAAZ;AACA7D,QAAAA,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAayB,QAAb,CAAsBR,OAAtB,EAA+BO,KAA/B;AACA,aAAKtB,YAAL,CAAkBvC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAa0B,QAAb,CAAsBT,OAAtB,EAA+BU,WAA/B,EAAlB,EAAgEH,KAAhE,EAhBF,CAkBE;;AACAA,QAAAA,KAAK,GAAG,sBAAR;AACA7D,QAAAA,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAayB,QAAb,CAAsBR,OAAtB,EAA+BO,KAA/B;AACA,aAAKtB,YAAL,CAAkBvC,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAa0B,QAAb,CAAsBT,OAAtB,CAAlB,EAAkD,EAAlD,EArBF,CAuBE;;AACAtD,QAAAA,EAAE,CAACoC,GAAH,CAAOC,KAAP,CAAaqB,YAAb,CAA0B,IAA1B;AACD;AApQH;AAJF,GADA;AAlBA1D,EAAAA,EAAE,CAACiE,IAAH,CAAQ7B,GAAR,CAAYC,KAAZ,CAAkBlC,aAAlB,GAAkCA,aAAlC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.Label\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    setUp : function()\n    {\n      this.__boldStyle = { fontWeight: \"bold\" };\n      this.__italicStyle = { fontStyle: \"italic\" };\n      this.__boldItalicStyle = { fontWeight: \"bold\", fontStyle: \"italic\" };\n      this.__familyStyle = { fontFamily: [ \"Verdana\" ] };\n      this.__fontSizeStyle = { fontSize: \"20px\" };\n      this.__paddingStyle = { padding: \"10px\" };\n      this.__marginStyle = { margin: \"10px\" };\n\n      this.__allTogetherStyle = {};\n      qx.lang.Object.mergeWith(this.__allTogetherStyle, this.__boldStyle);\n      qx.lang.Object.mergeWith(this.__allTogetherStyle, this.__italicStyle);\n      qx.lang.Object.mergeWith(this.__allTogetherStyle, this.__boldItalicStyle);\n      qx.lang.Object.mergeWith(this.__allTogetherStyle, this.__familyStyle);\n      qx.lang.Object.mergeWith(this.__allTogetherStyle, this.__fontSizeStyle);\n      qx.lang.Object.mergeWith(this.__allTogetherStyle, this.__paddingStyle);\n      qx.lang.Object.mergeWith(this.__allTogetherStyle, this.__marginStyle);\n    },\n\n    tearDown : function()\n    {\n      this.__boldStyle = null;\n      this.__italicStyle = null;\n      this.__familyStyle = null;\n      this.__fontSizeStyle = null;\n      this.__paddingStyle = null;\n      this.__marginStyle = null;\n      this.__allTogetherStyle = null;\n    },\n\n    // test only XUL labels under windows to get comparable results\n    // to ensure the change of bug #5011 does not break anything\n\n    testMeasureSizeTextNormal : function()\n    {\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\") &&\n          qx.core.Environment.get(\"os.name\") == \"win\")\n      {\n        var text = \"vanillebaer\";\n        var size = null;\n\n        size = qx.bom.Label.getTextSize(text);\n        this.assertEquals(53, size.width);\n        this.assertEquals(14, size.height);\n\n        size = qx.bom.Label.getTextSize(text, this.__fontSizeStyle);\n        this.assertEquals(94, size.width);\n        this.assertEquals(24, size.height);\n\n        size = qx.bom.Label.getTextSize(text, this.__familyStyle);\n        this.assertEquals(64, size.width);\n        this.assertEquals(13, size.height);\n\n        size = qx.bom.Label.getTextSize(text, this.__paddingStyle);\n        this.assertEquals(53, size.width);\n        this.assertEquals(14, size.height);\n\n        size = qx.bom.Label.getTextSize(text, this.__marginStyle);\n        this.assertEquals(53, size.width);\n        this.assertEquals(14, size.height);\n\n        size = qx.bom.Label.getTextSize(text, this.__allTogetherStyle);\n        this.assertEquals(125, size.width);\n        this.assertEquals(25, size.height);\n      }\n      else\n      {\n        this.skip();\n      }\n    },\n\n    testMeasureSizeTextBold : function()\n    {\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\") &&\n          qx.core.Environment.get(\"os.name\") == \"win\")\n      {\n        var text = \"vanillebaer\";\n        var size = null;\n\n        size = qx.bom.Label.getTextSize(text, this.__boldStyle);\n        this.assertEquals(61, size.width);\n        this.assertEquals(14, size.height);\n      }\n      else\n      {\n        this.assertTrue(true);\n      }\n    },\n\n\n    testMeasureSizeTextItalic : function()\n    {\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\") &&\n          qx.core.Environment.get(\"os.name\") == \"win\")\n      {\n        var text = \"vanillebaer\";\n        var size = null;\n\n        size = qx.bom.Label.getTextSize(text, this.__italicStyle);\n        this.assertEquals(56, size.width);\n        this.assertEquals(14, size.height);\n      }\n      else\n      {\n        this.assertTrue(true);\n      }\n    },\n\n\n    testMeasureSizeTextBoldItalic : function()\n    {\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\") &&\n          qx.core.Environment.get(\"os.name\") == \"win\")\n      {\n        var text = \"vanillebaer\";\n        var size = null;\n\n        size = qx.bom.Label.getTextSize(text, this.__boldItalicStyle);\n        this.assertEquals(64, size.width);\n        this.assertEquals(13, size.height);\n      }\n      else\n      {\n        this.assertTrue(true);\n      }\n    },\n\n\n    testMeasureSizeTextFontSize : function()\n    {\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\") &&\n          qx.core.Environment.get(\"os.name\") == \"win\")\n      {\n        var text = \"vanillebaer\";\n        var size = null;\n\n        size = qx.bom.Label.getTextSize(text, this.__fontSize);\n        this.assertEquals(53, size.width);\n        this.assertEquals(14, size.height);\n      }\n      else\n      {\n        this.assertTrue(true);\n      }\n    },\n\n\n    testMeasureSizeTextFontFamily : function()\n    {\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\") &&\n          qx.core.Environment.get(\"os.name\") == \"win\")\n      {\n        var text = \"vanillebaer\";\n        var size = null;\n\n        size = qx.bom.Label.getTextSize(text, this.__familyStyle);\n        this.assertEquals(64, size.width);\n        this.assertEquals(13, size.height);\n      }\n      else\n      {\n        this.assertTrue(true);\n      }\n    },\n\n\n    testMeasureSizeTextPadding : function()\n    {\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\") &&\n          qx.core.Environment.get(\"os.name\") == \"win\")\n      {\n        var text = \"vanillebaer\";\n        var size = null;\n\n        size = qx.bom.Label.getTextSize(text, this.__paddingStyle);\n        this.assertEquals(53, size.width);\n        this.assertEquals(14, size.height);\n      }\n      else\n      {\n        this.assertTrue(true);\n      }\n    },\n\n\n    testMeasureSizeTextMargin : function()\n    {\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\") &&\n          qx.core.Environment.get(\"os.name\") == \"win\")\n      {\n        var text = \"vanillebaer\";\n        var size = null;\n\n        size = qx.bom.Label.getTextSize(text, this.__marginStyle);\n        this.assertEquals(53, size.width);\n        this.assertEquals(14, size.height);\n      }\n      else\n      {\n        this.assertTrue(true);\n      }\n    },\n\n\n    testMeasureSizeTextAllTogether : function()\n    {\n      if (!qx.core.Environment.get(\"css.textoverflow\") &&\n          qx.core.Environment.get(\"html.xul\") &&\n          qx.core.Environment.get(\"os.name\") == \"win\")\n      {\n        var text = \"vanillebaer\";\n        var size = null;\n\n        size = qx.bom.Label.getTextSize(text, this.__allTogetherStyle);\n        this.assertEquals(125, size.width);\n        this.assertEquals(25, size.height);\n      }\n      else\n      {\n        this.assertTrue(true);\n      }\n    },\n\n\n    testSanitizer : function()\n    {\n      var element = document.createElement(\"div\");\n      element.useHtml = true;\n\n      // function to sanitize string\n      qx.bom.Label.setSanitizer(function(html) {\n        if (html.indexOf(\"<script\") > -1) {\n          return '';\n        }\n\n        return html;\n      });\n\n      // test clean string\n      var value = \"foo<b></b>\";\n      qx.bom.Label.setValue(element, value);\n      this.assertEquals(qx.bom.Label.getValue(element).toLowerCase(), value);\n\n      // test dirty string\n      value = \"foo<script></script>\";\n      qx.bom.Label.setValue(element, value);\n      this.assertEquals(qx.bom.Label.getValue(element), '');\n\n      // reset function to sanitize string\n      qx.bom.Label.setSanitizer(null);\n    }\n  }\n});\n"
  ]
}