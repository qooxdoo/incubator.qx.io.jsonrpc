{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/Blocker.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "__blocker",
    "bom",
    "Blocker",
    "setBlockerZIndex",
    "__blockedElement",
    "dom",
    "Element",
    "create",
    "element",
    "Style",
    "setStyles",
    "position",
    "top",
    "left",
    "width",
    "height",
    "zIndex",
    "insertBegin",
    "document",
    "body",
    "tearDown",
    "unblock",
    "dispose",
    "remove",
    "testBlockWholeDocument",
    "block",
    "blockerElement",
    "getBlockerElement",
    "assertNotNull",
    "assertEquals",
    "Document",
    "getWidth",
    "Dimension",
    "getHeight",
    "core",
    "Environment",
    "get",
    "childElements",
    "Hierarchy",
    "getChildElements",
    "blockerIframeElement",
    "length",
    "testUnblockWholeDocument",
    "assertFalse",
    "isInDom",
    "window",
    "testBlockElement",
    "event",
    "Timer",
    "once",
    "self",
    "resume",
    "Location",
    "getLeft",
    "getTop",
    "wait",
    "testBlockerColor",
    "setBlockerColor",
    "color",
    "util",
    "ColorUtil",
    "isRgbString",
    "testBlockerOpacity",
    "setBlockerOpacity",
    "value",
    "Opacity",
    "Math",
    "round",
    "testDoubleBlocking",
    "before",
    "getDescendants",
    "after",
    "testDoubleUnBlocking",
    "assertNotEquals",
    "parentNode",
    "test"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;AAkBAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qBAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,GAAH,CAAOC,IAAP,CAAYC,QADvB;AAGEC,IAAAA,OAAO,EACP;AAEEC,MAAAA,KAAK,EAAG,iBAAW;AACjB,aAAKC,kBAAL,GAAiB,IAAIZ,EAAE,CAACa,GAAH,CAAOC,OAAX,EAAjB;;AACA,aAAKF,kBAAL,CAAeG,gBAAf,CAAgC,GAAhC;;AAEA,aAAKC,yBAAL,GAAwBhB,EAAE,CAACiB,GAAH,CAAOC,OAAP,CAAeC,MAAf,CAAsB,KAAtB,CAAxB;AACAnB,QAAAA,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAeC,KAAf,CAAqBC,SAArB,CAA+B,KAAKN,yBAApC,EAAsD;AACpDO,UAAAA,QAAQ,EAAE,UAD0C;AAEpDC,UAAAA,GAAG,EAAE,OAF+C;AAGpDC,UAAAA,IAAI,EAAE,OAH8C;AAIpDC,UAAAA,KAAK,EAAE,OAJ6C;AAKpDC,UAAAA,MAAM,EAAE,OAL4C;AAMpDC,UAAAA,MAAM,EAAE;AAN4C,SAAtD;AASA5B,QAAAA,EAAE,CAACiB,GAAH,CAAOC,OAAP,CAAeW,WAAf,CAA2B,KAAKb,yBAAhC,EAAkDc,QAAQ,CAACC,IAA3D;AACD,OAjBH;AAoBEC,MAAAA,QAAQ,EAAG,oBACX;AACE,aAAKpB,kBAAL,CAAeqB,OAAf;;AACA,aAAKrB,kBAAL,CAAesB,OAAf;;AACA,aAAKtB,kBAAL,GAAiB,IAAjB;AACAZ,QAAAA,EAAE,CAACiB,GAAH,CAAOC,OAAP,CAAeiB,MAAf,CAAsB,KAAKnB,yBAA3B;AACD,OA1BH;AA4BEoB,MAAAA,sBAAsB,EAAG,kCACzB;AACE,aAAKxB,kBAAL,CAAeyB,KAAf;;AAEA,YAAIC,cAAc,GAAG,KAAK1B,kBAAL,CAAe2B,iBAAf,EAArB;;AAEA,aAAKC,aAAL,CAAmBF,cAAnB,EAAmC,+BAAnC;AACA,aAAKG,YAAL,CAAkBzC,EAAE,CAACa,GAAH,CAAO6B,QAAP,CAAgBC,QAAhB,EAAlB,EAA8C3C,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAewB,SAAf,CAAyBD,QAAzB,CAAkCL,cAAlC,CAA9C;AACA,aAAKG,YAAL,CAAkBzC,EAAE,CAACa,GAAH,CAAO6B,QAAP,CAAgBG,SAAhB,EAAlB,EAA+C7C,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAewB,SAAf,CAAyBC,SAAzB,CAAmCP,cAAnC,CAA/C;;AAEA,YAAKtC,EAAE,CAAC8C,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA/C,EACA;AACE,cAAIC,aAAa,GAAGjD,EAAE,CAACiB,GAAH,CAAOiC,SAAP,CAAiBC,gBAAjB,CAAkCrB,QAAQ,CAACC,IAA3C,CAApB;AACA,cAAIqB,oBAAoB,GAAGH,aAAa,CAACA,aAAa,CAACI,MAAd,GAAuB,CAAxB,CAAxC;AAEA,eAAKb,aAAL,CAAmBY,oBAAnB,EAAyC,qCAAzC;AACA,eAAKX,YAAL,CAAkBzC,EAAE,CAACa,GAAH,CAAO6B,QAAP,CAAgBC,QAAhB,EAAlB,EAA8C3C,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAewB,SAAf,CAAyBD,QAAzB,CAAkCS,oBAAlC,CAA9C;AACA,eAAKX,YAAL,CAAkBzC,EAAE,CAACa,GAAH,CAAO6B,QAAP,CAAgBG,SAAhB,EAAlB,EAA+C7C,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAewB,SAAf,CAAyBC,SAAzB,CAAmCO,oBAAnC,CAA/C;AACD;;AAED,aAAKxC,kBAAL,CAAeqB,OAAf;AACD,OAjDH;AAoDEqB,MAAAA,wBAAwB,EAAG,oCAC3B;AACE,aAAK1C,kBAAL,CAAeyB,KAAf;;AAEA,YAAKrC,EAAE,CAAC8C,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA/C,EACA;AACE,cAAIC,aAAa,GAAGjD,EAAE,CAACiB,GAAH,CAAOiC,SAAP,CAAiBC,gBAAjB,CAAkCrB,QAAQ,CAACC,IAA3C,CAApB;AACA,cAAIqB,oBAAoB,GAAGH,aAAa,CAACA,aAAa,CAACI,MAAd,GAAuB,CAAxB,CAAxC;AACD;;AAED,aAAKzC,kBAAL,CAAeqB,OAAf;;AAEA,YAAIK,cAAc,GAAG,KAAK1B,kBAAL,CAAe2B,iBAAf,EAArB;;AACA,aAAKgB,WAAL,CAAiBvD,EAAE,CAACiB,GAAH,CAAOC,OAAP,CAAesC,OAAf,CAAuBlB,cAAvB,EAAuCmB,MAAvC,CAAjB,EAAiE,uCAAjE;;AAEA,YAAKzD,EAAE,CAAC8C,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA/C,EAA0D;AACxD,eAAKO,WAAL,CAAiBvD,EAAE,CAACiB,GAAH,CAAOC,OAAP,CAAesC,OAAf,CAAuBJ,oBAAvB,EAA6CK,MAA7C,CAAjB,EAAuE,8CAAvE;AACD;AACF,OAtEH;AAyEEC,MAAAA,gBAAgB,EAAG,4BACnB;AACE,aAAK9C,kBAAL,CAAeyB,KAAf,CAAqB,KAAKrB,yBAA1B,EADF,CAGE;AACA;;;AACAhB,QAAAA,EAAE,CAAC2D,KAAH,CAASC,KAAT,CAAeC,IAAf,CAAoB,YAAW;AAC7B,cAAIC,IAAI,GAAG,IAAX;AACA,eAAKC,MAAL,CAAY,YAAW;AACrB,gBAAIzB,cAAc,GAAGwB,IAAI,CAAClD,kBAAL,CAAe2B,iBAAf,EAArB;;AAEAuB,YAAAA,IAAI,CAACtB,aAAL,CAAmBF,cAAnB,EAAmC,+BAAnC;AAEAwB,YAAAA,IAAI,CAACrB,YAAL,CAAkBzC,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAewB,SAAf,CAAyBD,QAAzB,CAAkCmB,IAAI,CAAC9C,yBAAvC,CAAlB,EAA4EhB,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAewB,SAAf,CAAyBD,QAAzB,CAAkCL,cAAlC,CAA5E;AACAwB,YAAAA,IAAI,CAACrB,YAAL,CAAkBzC,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAewB,SAAf,CAAyBC,SAAzB,CAAmCiB,IAAI,CAAC9C,yBAAxC,CAAlB,EAA6EhB,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAewB,SAAf,CAAyBC,SAAzB,CAAmCP,cAAnC,CAA7E;AAEAwB,YAAAA,IAAI,CAACrB,YAAL,CAAkBzC,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAe4C,QAAf,CAAwBC,OAAxB,CAAgCH,IAAI,CAAC9C,yBAArC,CAAlB,EAA0EhB,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAe4C,QAAf,CAAwBC,OAAxB,CAAgC3B,cAAhC,CAA1E;AACAwB,YAAAA,IAAI,CAACrB,YAAL,CAAkBzC,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAe4C,QAAf,CAAwBE,MAAxB,CAA+BJ,IAAI,CAAC9C,yBAApC,CAAlB,EAAyEhB,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAe4C,QAAf,CAAwBE,MAAxB,CAA+B5B,cAA/B,CAAzE;AAEAwB,YAAAA,IAAI,CAACrB,YAAL,CAAkBzC,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAeC,KAAf,CAAqB2B,GAArB,CAAyBc,IAAI,CAAC9C,yBAA9B,EAAgD,QAAhD,IAA4D,CAA9E,EAAiFhB,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAeC,KAAf,CAAqB2B,GAArB,CAAyBV,cAAzB,EAAyC,QAAzC,CAAjF;;AAEA,gBAAKtC,EAAE,CAAC8C,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA/C,EACA;AACE,kBAAIC,aAAa,GAAGjD,EAAE,CAACiB,GAAH,CAAOiC,SAAP,CAAiBC,gBAAjB,CAAkCrB,QAAQ,CAACC,IAA3C,CAApB;AACA,kBAAIqB,oBAAoB,GAAGH,aAAa,CAACA,aAAa,CAACI,MAAd,GAAuB,CAAxB,CAAxC;AACAS,cAAAA,IAAI,CAACrB,YAAL,CAAkBzC,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAeC,KAAf,CAAqB2B,GAArB,CAAyBc,IAAI,CAAC9C,yBAA9B,EAAgD,QAAhD,IAA4D,CAA9E,EAAiFhB,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAeC,KAAf,CAAqB2B,GAArB,CAAyBI,oBAAzB,EAA+C,QAA/C,CAAjF;AACD;;AAEDU,YAAAA,IAAI,CAAClD,kBAAL,CAAeqB,OAAf;AACD,WArBD,EAqBG6B,IArBH;AAsBD,SAxBD,EAwBG,IAxBH,EAwBS,IAxBT;AA2BA,aAAKK,IAAL;AACD,OA3GH;AA8GEC,MAAAA,gBAAgB,EAAG,4BACnB;AACE,aAAKxD,kBAAL,CAAeyD,eAAf,CAA+B,SAA/B;;AACA,aAAKzD,kBAAL,CAAeyB,KAAf;;AAEA,YAAIC,cAAc,GAAG,KAAK1B,kBAAL,CAAe2B,iBAAf,EAArB;;AAEA,YAAI+B,KAAK,GAAGtE,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAeC,KAAf,CAAqB2B,GAArB,CAAyBV,cAAzB,EAAyC,iBAAzC,CAAZ;;AACA,YAAItC,EAAE,CAACuE,IAAH,CAAQC,SAAR,CAAkBC,WAAlB,CAA8BH,KAA9B,CAAJ,EAA0C;AACxC,eAAK7B,YAAL,CAAkB,gBAAlB,EAAoC6B,KAApC;AACD,SAFD,MAEO;AACL,eAAK7B,YAAL,CAAkB,SAAlB,EAA6B6B,KAA7B;AACD;;AAED,aAAK1D,kBAAL,CAAeqB,OAAf;AACD,OA7HH;AAgIEyC,MAAAA,kBAAkB,EAAG,8BACrB;AACE,aAAK9D,kBAAL,CAAe+D,iBAAf,CAAiC,GAAjC;;AACA,aAAK/D,kBAAL,CAAeyB,KAAf;;AAEA,YAAIC,cAAc,GAAG,KAAK1B,kBAAL,CAAe2B,iBAAf,EAArB;;AACA,YAAIqC,KAAK,GAAG5E,EAAE,CAACa,GAAH,CAAOO,OAAP,CAAeyD,OAAf,CAAuB7B,GAAvB,CAA2BV,cAA3B,CAAZ;;AACA,YAAItC,EAAE,CAAC8C,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA9C,EAAwD;AACtD4B,UAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,EAAnB,IAAyB,EAAjC;AACD;;AACD,aAAKnC,YAAL,CAAkB,GAAlB,EAAuBmC,KAAvB;;AAEA,aAAKhE,kBAAL,CAAeqB,OAAf;AACD,OA7IH;AAgJE+C,MAAAA,kBAAkB,EAAG,8BACrB;AACE,YAAIC,MAAM,GAAGjF,EAAE,CAACiB,GAAH,CAAOiC,SAAP,CAAiBgC,cAAjB,CAAgCpD,QAAQ,CAACC,IAAzC,CAAb;;AAEA,aAAKnB,kBAAL,CAAeyB,KAAf,CAAqB,KAAKrB,yBAA1B;;AACA,aAAKJ,kBAAL,CAAeyB,KAAf,CAAqB,KAAKrB,yBAA1B;;AAEA,YAAImE,KAAK,GAAGnF,EAAE,CAACiB,GAAH,CAAOiC,SAAP,CAAiBgC,cAAjB,CAAgCpD,QAAQ,CAACC,IAAzC,CAAZ;;AAEA,YAAK/B,EAAE,CAAC8C,IAAH,CAAQC,WAAR,CAAoBC,GAApB,CAAwB,aAAxB,KAA0C,QAA/C,EAA0D;AACxD,eAAKP,YAAL,CAAkB0C,KAAK,CAAC9B,MAAxB,EAAgC4B,MAAM,CAAC5B,MAAP,GAAgB,CAAhD;AACD,SAFD,MAEO;AACL,eAAKZ,YAAL,CAAkB0C,KAAK,CAAC9B,MAAxB,EAAgC4B,MAAM,CAAC5B,MAAP,GAAgB,CAAhD;AACD;;AAED,aAAKzC,kBAAL,CAAeqB,OAAf;AACD,OAhKH;AAmKEmD,MAAAA,oBAAoB,EAAG,gCACvB;AACE,aAAKxE,kBAAL,CAAeyB,KAAf,CAAqB,KAAKrB,yBAA1B;;AACA,aAAKJ,kBAAL,CAAeqB,OAAf;;AACA,aAAKrB,kBAAL,CAAeqB,OAAf;;AAEA,YAAIK,cAAc,GAAG,KAAK1B,kBAAL,CAAe2B,iBAAf,EAArB;;AACA,aAAK8C,eAAL,CAAqB/C,cAAc,CAACgD,UAApC,EAAgD,KAAKtE,yBAArD;AACD;AA3KH;AAJF,GADA;AAlBAhB,EAAAA,EAAE,CAACuF,IAAH,CAAQ1E,GAAR,CAAYC,OAAZ,CAAoBX,aAApB,GAAoCA,aAApC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Alexander Steitz (aback)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.Blocker\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n\n    setUp : function() {\n      this.__blocker = new qx.bom.Blocker();\n      this.__blocker.setBlockerZIndex(199);\n\n      this.__blockedElement = qx.dom.Element.create(\"div\");\n      qx.bom.element.Style.setStyles(this.__blockedElement, {\n        position: \"absolute\",\n        top: \"100px\",\n        left: \"100px\",\n        width: \"500px\",\n        height: \"400px\",\n        zIndex: 200\n      });\n\n      qx.dom.Element.insertBegin(this.__blockedElement, document.body);\n    },\n\n\n    tearDown : function()\n    {\n      this.__blocker.unblock();\n      this.__blocker.dispose();\n      this.__blocker = null;\n      qx.dom.Element.remove(this.__blockedElement);\n    },\n\n    testBlockWholeDocument : function()\n    {\n      this.__blocker.block();\n\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      this.assertNotNull(blockerElement, \"Blocker element not inserted.\");\n      this.assertEquals(qx.bom.Document.getWidth(), qx.bom.element.Dimension.getWidth(blockerElement));\n      this.assertEquals(qx.bom.Document.getHeight(), qx.bom.element.Dimension.getHeight(blockerElement));\n\n      if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n      {\n        var childElements = qx.dom.Hierarchy.getChildElements(document.body);\n        var blockerIframeElement = childElements[childElements.length - 1];\n\n        this.assertNotNull(blockerIframeElement, \"Blocker iframe element not inserted\");\n        this.assertEquals(qx.bom.Document.getWidth(), qx.bom.element.Dimension.getWidth(blockerIframeElement));\n        this.assertEquals(qx.bom.Document.getHeight(), qx.bom.element.Dimension.getHeight(blockerIframeElement));\n      }\n\n      this.__blocker.unblock();\n    },\n\n\n    testUnblockWholeDocument : function()\n    {\n      this.__blocker.block();\n\n      if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n      {\n        var childElements = qx.dom.Hierarchy.getChildElements(document.body);\n        var blockerIframeElement = childElements[childElements.length - 1];\n      }\n\n      this.__blocker.unblock();\n\n      var blockerElement = this.__blocker.getBlockerElement();\n      this.assertFalse(qx.dom.Element.isInDom(blockerElement, window), \"Blocker element not correctly removed\");\n\n      if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\")) {\n        this.assertFalse(qx.dom.Element.isInDom(blockerIframeElement, window), \"Blocker iframe element not correctly removed\");\n      }\n    },\n\n\n    testBlockElement : function()\n    {\n      this.__blocker.block(this.__blockedElement);\n\n      // Timer is needed for IE6, otherwise the test will fail because IE6\n      // is not able to resize the blockerElement fast enough\n      qx.event.Timer.once(function() {\n        var self = this;\n        this.resume(function() {\n          var blockerElement = self.__blocker.getBlockerElement();\n\n          self.assertNotNull(blockerElement, \"Blocker element not inserted.\");\n\n          self.assertEquals(qx.bom.element.Dimension.getWidth(self.__blockedElement), qx.bom.element.Dimension.getWidth(blockerElement));\n          self.assertEquals(qx.bom.element.Dimension.getHeight(self.__blockedElement), qx.bom.element.Dimension.getHeight(blockerElement));\n\n          self.assertEquals(qx.bom.element.Location.getLeft(self.__blockedElement), qx.bom.element.Location.getLeft(blockerElement));\n          self.assertEquals(qx.bom.element.Location.getTop(self.__blockedElement), qx.bom.element.Location.getTop(blockerElement));\n\n          self.assertEquals(qx.bom.element.Style.get(self.__blockedElement, \"zIndex\") - 1, qx.bom.element.Style.get(blockerElement, \"zIndex\"));\n\n          if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\"))\n          {\n            var childElements = qx.dom.Hierarchy.getChildElements(document.body);\n            var blockerIframeElement = childElements[childElements.length - 1];\n            self.assertEquals(qx.bom.element.Style.get(self.__blockedElement, \"zIndex\") - 2, qx.bom.element.Style.get(blockerIframeElement, \"zIndex\"));\n          }\n\n          self.__blocker.unblock();\n        }, self);\n      }, this, 1000);\n\n\n      this.wait();\n    },\n\n\n    testBlockerColor : function()\n    {\n      this.__blocker.setBlockerColor(\"#FF0000\");\n      this.__blocker.block();\n\n      var blockerElement = this.__blocker.getBlockerElement();\n\n      var color = qx.bom.element.Style.get(blockerElement, \"backgroundColor\");\n      if (qx.util.ColorUtil.isRgbString(color)) {\n        this.assertEquals(\"rgb(255, 0, 0)\", color);\n      } else {\n        this.assertEquals(\"#ff0000\", color);\n      }\n\n      this.__blocker.unblock();\n    },\n\n\n    testBlockerOpacity : function()\n    {\n      this.__blocker.setBlockerOpacity(0.7);\n      this.__blocker.block();\n\n      var blockerElement = this.__blocker.getBlockerElement();\n      var value = qx.bom.element.Opacity.get(blockerElement);\n      if (qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n        value = Math.round(value * 10) / 10;\n      }\n      this.assertEquals(0.7, value);\n\n      this.__blocker.unblock();\n    },\n\n\n    testDoubleBlocking : function()\n    {\n      var before = qx.dom.Hierarchy.getDescendants(document.body);\n\n      this.__blocker.block(this.__blockedElement);\n      this.__blocker.block(this.__blockedElement);\n\n      var after = qx.dom.Hierarchy.getDescendants(document.body);\n\n      if ((qx.core.Environment.get(\"engine.name\") == \"mshtml\")) {\n        this.assertEquals(after.length, before.length + 2);\n      } else {\n        this.assertEquals(after.length, before.length + 1);\n      }\n\n      this.__blocker.unblock();\n    },\n\n\n    testDoubleUnBlocking : function()\n    {\n      this.__blocker.block(this.__blockedElement);\n      this.__blocker.unblock();\n      this.__blocker.unblock();\n\n      var blockerElement = this.__blocker.getBlockerElement();\n      this.assertNotEquals(blockerElement.parentNode, this.__blockedElement);\n    }\n  }\n});\n"
  ]
}