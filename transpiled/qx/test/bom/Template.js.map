{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/Template.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "__tmpl",
    "tearDown",
    "dom",
    "Element",
    "removeChild",
    "document",
    "body",
    "testReplace",
    "template",
    "view",
    "name",
    "result",
    "bom",
    "Template",
    "render",
    "expected",
    "assertEquals",
    "testFunc",
    "testList",
    "l",
    "conditional",
    "b",
    "testObject",
    "o",
    "a",
    "testWrapper",
    "text",
    "testInvertedSelection",
    "testEscaping",
    "testRenderToNode",
    "el",
    "renderToNode",
    "tagName",
    "innerHTML",
    "testRenderToNodePlainText",
    "tmpl",
    "data",
    "testRenderToNodeMixed",
    "toLowerCase",
    "testCreateNodeFromTemplateTextNode",
    "_createNodeFromTemplate",
    "nodeType",
    "testCreateNodeFromTemplateElementNode",
    "testGet",
    "create",
    "element",
    "Attribute",
    "set",
    "Style",
    "insertEnd",
    "get",
    "testPlainText",
    "testGetMixed",
    "testHtmlEscaping",
    "foo",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\nqx.Class.define(\"qx.test.bom.Template\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    __tmpl: null,\n\n    tearDown : function() {\n      if (this.__tmpl) {\n        qx.dom.Element.removeChild(this.__tmpl, document.body);\n      }\n    },\n\n    /**\n     * render()\n     */\n\n    testReplace : function() {\n      var template = \"{{name}} xyz\";\n      var view = {name: \"abc\"};\n      var result = qx.bom.Template.render(template, view);\n      var expected = \"abc xyz\";\n\n      this.assertEquals(expected, result);\n    },\n\n\n    testFunc : function() {\n      var template = \"{{name}} xyz\";\n      var view = {name: function() {return \"abc\";}};\n      var result = qx.bom.Template.render(template, view);\n      var expected = \"abc xyz\";\n\n      this.assertEquals(expected, result);\n    },\n\n\n    testList : function() {\n      var template = \"{{#l}}{{.}}{{/l}}\";\n      var view = {l : [\"a\", \"b\", \"c\"]};\n      var result = qx.bom.Template.render(template, view);\n      var expected = \"abc\";\n\n      this.assertEquals(expected, result);\n    },\n\n\n    conditional : function() {\n      var template = \"{{#b}}yo{{/b}}\";\n      var view = {b: true};\n      var result = qx.bom.Template.render(template, view);\n      var expected = \"yo\";\n\n      this.assertEquals(expected, result);\n\n      template = \"{{#b}}yo{{/b}}\";\n      view = {b: false};\n      result = qx.bom.Template.render(template, view);\n      expected = \"\";\n\n      this.assertEquals(expected, result);\n    },\n\n\n    testObject : function() {\n      var template = \"{{#o}}{{b}}{{a}}{{/o}}\";\n      var view = {o: {a: 1, b: 2}};\n      var result = qx.bom.Template.render(template, view);\n      var expected = \"21\";\n\n      this.assertEquals(expected, result);\n    },\n\n\n    testWrapper : function() {\n      var template = \"{{#b}}yo{{/b}}\";\n      var view = {\n        b: function() {\n          return function(text, render) {\n            return \"!\" + render(text) + \"!\";\n          };\n        }\n      };\n      var result = qx.bom.Template.render(template, view);\n      var expected = \"!yo!\";\n\n      this.assertEquals(expected, result);\n    },\n\n\n    testInvertedSelection : function() {\n      var template = \"{{^a}}yo{{/a}}\";\n      var view = {a: []};\n      var result = qx.bom.Template.render(template, view);\n      var expected = \"yo\";\n\n      this.assertEquals(expected, result);\n    },\n\n\n    testEscaping : function() {\n      var template = \"{{a}}\";\n      var view = {a: \"<a>\"};\n      var result = qx.bom.Template.render(template, view);\n      var expected = \"&lt;a&gt;\";\n\n      this.assertEquals(expected, result);\n\n      var template = \"{{{a}}}\";\n      var view = {a: \"<a>\"};\n      var result = qx.bom.Template.render(template, view);\n      var expected = \"<a>\";\n\n      this.assertEquals(expected, result);\n    },\n\n\n    /**\n     * renderToNode()\n     */\n\n    testRenderToNode : function() {\n      var el = qx.bom.Template.renderToNode(\"<div>{{a}}</div>\", {a: 123});\n\n      this.assertEquals(\"DIV\", el.tagName);\n      this.assertEquals(\"123\", el.innerHTML);\n    },\n\n\n    testRenderToNodePlainText : function() {\n      var tmpl = \"{{a}}.{{b}}\";\n      var el = qx.bom.Template.renderToNode(tmpl, {a: 123, b: 234});\n\n      this.assertEquals(\"123.234\", el.data);\n    },\n\n\n    testRenderToNodeMixed : function() {\n      var tmpl = \"<div>{{a}}<span>{{b}}</span></div>\";\n      var el = qx.bom.Template.renderToNode(tmpl, {a: 123, b: 234});\n\n      this.assertEquals(\"123<span>234</span>\", el.innerHTML.toLowerCase());\n    },\n\n    /**\n     * _createNodeFromTemplate()\n     */\n\n    testCreateNodeFromTemplateTextNode : function() {\n      var tmpl = \"{{a}}.{{b}}\";\n      var el = qx.bom.Template._createNodeFromTemplate(tmpl);\n\n      // Node.TEXT_NODE === 3 (IE <= 8 doesn't know 'Node')\n      this.assertEquals(3, el.nodeType);\n    },\n\n    testCreateNodeFromTemplateElementNode : function() {\n      var tmpl = \"<div>{{a}}</div>\";\n      var el = qx.bom.Template._createNodeFromTemplate(tmpl);\n\n      // Node.ELEMENT_NODE === 1 (IE <= 8 doesn't know 'Node')\n      this.assertEquals(1, el.nodeType);\n    },\n\n    /**\n     * get()\n     */\n\n    testGet : function() {\n      // add template\n      this.__tmpl = qx.dom.Element.create(\"div\");\n      qx.bom.element.Attribute.set(this.__tmpl, \"id\", \"qx-test-template\");\n      qx.bom.element.Style.set(this.__tmpl, \"display\", \"none\");\n      this.__tmpl.innerHTML = \"<div>{{a}}</div>\";\n      qx.dom.Element.insertEnd(this.__tmpl, document.body);\n\n      // test the get method\n      var el = qx.bom.Template.get(\"qx-test-template\", {a: 123});\n\n      this.assertEquals(\"DIV\", el.tagName);\n      this.assertEquals(\"123\", el.innerHTML);\n    },\n\n\n    testPlainText : function() {\n      // add template\n      this.__tmpl = qx.dom.Element.create(\"div\");\n      qx.bom.element.Attribute.set(this.__tmpl, \"id\", \"qx-test-template\");\n      qx.bom.element.Style.set(this.__tmpl, \"display\", \"none\");\n      this.__tmpl.innerHTML = \"{{a}}.{{b}}\";\n      qx.dom.Element.insertEnd(this.__tmpl, document.body);\n\n      // test the get method\n      var el = qx.bom.Template.get(\"qx-test-template\", {a: 123, b: 234});\n      this.assertEquals(\"123.234\", el.data);\n    },\n\n\n    testGetMixed : function() {\n      // add template\n      this.__tmpl = qx.dom.Element.create(\"div\");\n      qx.bom.element.Attribute.set(this.__tmpl, \"id\", \"qx-test-template\");\n      qx.bom.element.Style.set(this.__tmpl, \"display\", \"none\");\n      this.__tmpl.innerHTML = \"<div>{{a}}<span>{{b}}</span></div>\";\n      qx.dom.Element.insertEnd(this.__tmpl, document.body);\n\n      // test the get method\n      var el = qx.bom.Template.get(\"qx-test-template\", {a: 123, b: 234});\n\n      // IE uses uppercase tag names\n      this.assertEquals(\"123<span>234</span>\", el.innerHTML.toLowerCase());\n    },\n\n    // test a potential exploit https://nodesecurity.io/advisories/62\n    testHtmlEscaping : function() {\n        var template = \"<a href={{foo}}/>\";\n        var view = {foo: 'test.com onload=alert(1)'};\n        var result = qx.bom.Template.render(template, view);\n        var expected = \"<a href=test.com onload&#x3D;alert(1)/>\";\n\n        this.assertEquals(expected, result);\n    }\n  }\n});\n"
  ]
}