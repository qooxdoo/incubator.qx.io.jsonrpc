{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/request/Xhr.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "MRequirements",
    "statics",
    "UNSENT",
    "OPENED",
    "HEADERS_RECEIVED",
    "LOADING",
    "DONE",
    "members",
    "fakedXhr",
    "fakeReqs",
    "req",
    "setUp",
    "fakeNativeXhr",
    "bom",
    "request",
    "Xhr",
    "tearDown",
    "getSandbox",
    "restore",
    "assertObject",
    "nativeXhr",
    "getRequest",
    "assertNotNull",
    "readyState",
    "fakeReq",
    "getFakeReq",
    "spy",
    "url",
    "method",
    "open",
    "assertCalledWith",
    "msg",
    "assertException",
    "Error",
    "assertTrue",
    "args",
    "assertFalse",
    "assertEquals",
    "setRequestHeader",
    "data",
    "send",
    "abort",
    "assertCalled",
    "constructor",
    "onevent",
    "_emit",
    "event",
    "on",
    "that",
    "onreadystatechange",
    "responseText",
    "responseHeaders",
    "stub",
    "respond",
    "assertCalledOnce",
    "assertUndefined",
    "_emitter",
    "emit",
    "callCount",
    "withArgs",
    "loadend",
    "assertCallOrder",
    "timeout",
    "wait",
    "core",
    "Environment",
    "get",
    "skip",
    "error",
    "assertNotCalled",
    "ontimeout",
    "e",
    "assertIdentical",
    "success",
    "state",
    "isIEBelow",
    "trap",
    "assertNotEquals",
    "assertNull",
    "responseXML",
    "headers",
    "body",
    "status",
    "require",
    "statusText",
    "returns",
    "_getProtocol",
    "assertMatch",
    "setResponseHeaders",
    "responseHeader",
    "getResponseHeader",
    "getAllResponseHeaders",
    "dispose",
    "isDisposed",
    "assertDisposedException",
    "lang",
    "Function",
    "bind",
    "callback",
    "useFakeXMLHttpRequest",
    "getRequests",
    "slice",
    "targetVersion",
    "name",
    "version",
    "isFFBelow",
    "parseFloat",
    "hasIEBelow9",
    "RequirementError",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.request.Xhr\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  include : [qx.dev.unit.MMock,\n             qx.dev.unit.MRequirements],\n\n  statics :\n  {\n    UNSENT: 0,\n    OPENED: 1,\n    HEADERS_RECEIVED: 2,\n    LOADING: 3,\n    DONE: 4\n  },\n\n  members :\n  {\n    /**\n     * The faked XMLHttpRequest.\n     */\n    fakedXhr: null,\n\n    /**\n     * Holds instances created by the faked XMLHttpRequest.\n     */\n    fakeReqs: null,\n\n    /**\n     * The request to test.\n     */\n    req: null,\n\n    setUp : function()\n    {\n      this.fakeNativeXhr();\n      this.req = new qx.bom.request.Xhr();\n    },\n\n    tearDown : function()\n    {\n      this.req = null;\n      this.getSandbox().restore();\n    },\n\n    //\n    // General\n    //\n\n    \"test: create instance\": function() {\n      this.assertObject(this.req);\n    },\n\n    \"test: detect native XHR\": function() {\n      var nativeXhr = this.req.getRequest();\n\n      this.assertObject(nativeXhr);\n      this.assertNotNull(nativeXhr.readyState);\n    },\n\n    //\n    // open()\n    //\n\n    \"test: open request\": function() {\n      var fakeReq = this.getFakeReq();\n      this.spy(fakeReq, \"open\");\n\n      var url = \"/foo\";\n      var method = \"GET\";\n      this.req.open(method, url);\n\n      this.assertCalledWith(fakeReq.open, method, url);\n    },\n\n    \"test: open request throws when missing arguments\": function() {\n      var req = this.req;\n      var msg = /Not enough arguments/;\n      this.assertException(function() { req.open(); }, Error, msg);\n      this.assertException(function() { req.open(\"GET\"); }, Error, msg);\n    },\n\n    \"test: open async request on default\": function() {\n      var fakeReq = this.getFakeReq();\n      this.spy(fakeReq, \"open\");\n\n      this.req.open(null, null);\n      this.assertTrue(fakeReq.open.args[0][2], \"async must be true\");\n    },\n\n    \"test: open sync request\": function() {\n      var fakeReq = this.getFakeReq();\n      this.spy(fakeReq, \"open\");\n\n      this.req.open(null, null, false);\n      this.assertFalse(fakeReq.open.args[0][2], \"async must be false\");\n    },\n\n    \"test: open request with username and password\": function() {\n      var fakeReq = this.getFakeReq();\n      this.spy(fakeReq, \"open\");\n\n      this.req.open(null, null, null, \"affe\", \"geheim\");\n      this.assertEquals(\"affe\", fakeReq.open.args[0][3], \"Unexpected user\");\n      this.assertEquals(\"geheim\", fakeReq.open.args[0][4], \"Unexpected password\");\n    },\n\n    //\n    // setRequestHeader()\n    //\n\n    \"test: set request header\": function() {\n      var fakeReq = this.getFakeReq();\n      this.spy(fakeReq, \"setRequestHeader\");\n\n      // Request must be opened before request headers can be set\n      this.req.open(\"GET\", \"/\");\n\n      this.req.setRequestHeader(\"header\", \"value\");\n      this.assertCalledWith(fakeReq.setRequestHeader, \"header\", \"value\");\n    },\n\n    //\n    // send()\n    //\n\n    \"test: send() with data\": function() {\n      var fakeReq = this.getFakeReq();\n      this.spy(fakeReq, \"send\");\n\n      var data = \"AFFE\";\n      this.req.open(\"GET\", \"/affe\");\n      this.req.send(data);\n\n      this.assertCalledWith(fakeReq.send, data);\n    },\n\n    // BUGFIXES\n\n    \"test: send() without data\": function() {\n      var fakeReq = this.getFakeReq();\n      this.spy(fakeReq, \"send\");\n\n      this.req.open(\"GET\", \"/affe\");\n      this.req.send();\n\n      this.assertCalledWith(fakeReq.send, null);\n    },\n\n    //\n    // abort()\n    //\n\n    \"test: abort() aborts native Xhr\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n      this.spy(fakeReq, \"abort\");\n\n      req.abort();\n      this.assertCalled(fakeReq.abort);\n    },\n\n    \"test: abort() resets readyState\": function() {\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n      req.abort();\n\n      this.assertEquals(this.constructor.UNSENT, req.readyState, \"Must be UNSENT\");\n    },\n\n    //\n    // Event helper\n    //\n\n    \"test: call event handler\": function() {\n      var req = this.req;\n      req.onevent = this.spy();\n      req._emit(\"event\");\n      this.assertCalled(req.onevent);\n    },\n\n    \"test: fire event\": function(){\n      var req = this.req;\n      var event = this.spy();\n      req.onevent = this.spy();\n      req.on(\"event\", event);\n      req._emit(\"event\");\n      this.assertCalled(event);\n    },\n\n    //\n    //\n    // onreadystatechange()\n    //\n\n    \"test: responseText set before onreadystatechange is called\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n\n      var that = this;\n      req.onreadystatechange = function() {\n        that.assertEquals(\"Affe\", req.responseText);\n      };\n      fakeReq.responseText = \"Affe\";\n      fakeReq.readyState = 4;\n      fakeReq.responseHeaders = {};\n      fakeReq.onreadystatechange();\n    },\n\n    \"test: emit readystatechange when reopened\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n      this.stub(req, \"_emit\");\n\n      // Send and respond\n      req.open(\"GET\", \"/\");\n      req.send();\n      fakeReq.respond();\n\n      // Reopen\n      req.open(\"GET\", \"/\");\n\n      this.assertCalledWith(req._emit, \"readystatechange\");\n    },\n\n    // BUGFIXES\n\n    \"test: ignore onreadystatechange when readyState is unchanged\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n      this.spy(req, \"onreadystatechange\");\n\n      req.readyState = this.constructor.OPENED;\n      fakeReq.onreadystatechange();\n      fakeReq.onreadystatechange();\n\n      this.assertCalledOnce(req.onreadystatechange);\n    },\n\n    \"test: native onreadystatechange is disposed once DONE\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n\n      req.onreadystatechange = function() { return \"OP\"; };\n      req.open(\"GET\", \"/\");\n      req.send();\n\n      fakeReq.respond();\n      this.assertUndefined(req.getRequest().onreadystatechange());\n    },\n\n    //\n    // onload()\n    //\n\n    \"test: emit load on successful request\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n\n      this.stub(req._emitter, \"emit\");\n      req.open(\"GET\", \"/\");\n      req.send();\n\n      // Status does not matter. Set a non-empty response for file:// workaround.\n      fakeReq.respond(200, {}, \"RESPONSE\");\n\n      this.assertCalledWith(req._emitter.emit, \"load\");\n      this.assertEquals(6, req._emitter.emit.callCount);\n    },\n\n    //\n    // onerror()\n    //\n    // See XhrWithBackend\n    //\n\n    //\n    // onabort()\n    //\n\n    \"test: emit abort\": function() {\n      var req = this.req;\n\n      this.spy(req, \"_emit\");\n\n      req.open(\"GET\", \"/\");\n      req.send();\n      req.abort();\n\n      this.assertCalledWith(req._emit, \"abort\");\n    },\n\n    \"test: emit abort before loadend\": function() {\n      var req = this.req;\n\n      var emit = this.stub(req, \"_emit\");\n      var abort = emit.withArgs(\"abort\");\n      var loadend = emit.withArgs(\"loadend\");\n\n      req.open(\"GET\", \"/\");\n      req.send();\n      req.abort();\n\n      this.assertCallOrder(abort, loadend);\n    },\n\n    //\n    // ontimeout()\n    //\n\n    \"test: emit timeout\": function() {\n      var req = this.req,\n          that = this;\n\n      var timeout = this.stub(req, \"_emit\").withArgs(\"timeout\");\n\n      req.timeout = 10;\n      req.open(\"GET\", \"/\");\n      req.send();\n\n      this.wait(20, function() {\n        this.assertCalledOnce(timeout);\n      }, this);\n    },\n\n    \"test: not emit error when timeout\": function() {\n\n      // Since Opera does not fire \"error\" on network error, fire additional\n      // \"error\" on timeout (may well be related to network error)\n      if (qx.core.Environment.get(\"engine.name\") === \"opera\") {\n        this.skip();\n      }\n\n      var req = this.req;\n\n      var error = this.stub(req, \"_emit\").withArgs(\"error\");\n\n      req.timeout = 10;\n      req.open(\"GET\", \"/\");\n      req.send();\n\n      this.wait(20, function() {\n        this.assertNotCalled(error);\n      }, this);\n    },\n\n    \"test: not emit error when aborted immediately\": function() {\n      var req = this.req;\n\n      var error = this.stub(req, \"_emit\").withArgs(\"error\");\n\n      req.open(\"GET\", \"/\");\n      req.send();\n      req.abort();\n\n      this.assertNotCalled(error);\n    },\n\n    \"test: cancel timeout when DONE\": function() {\n      var fakeReq = this.getFakeReq(),\n          req = this.req;\n\n      this.spy(req, \"ontimeout\");\n\n      req.timeout = 10;\n      req.open(\"GET\", \"/\");\n      req.send();\n      fakeReq.respond();\n\n      this.wait(20, function() {\n        this.assertNotCalled(req.ontimeout);\n      }, this);\n    },\n\n    \"test: cancel timeout when handler throws\": function() {\n      var fakeReq = this.getFakeReq(),\n          req = this.req;\n\n      this.spy(req, \"ontimeout\");\n\n      req.timeout = 10;\n      req.open(\"GET\", \"/\");\n      req.send();\n\n      // Simulate error in handler for readyState DONE\n      req.onreadystatechange = function() {\n        if (req.readyState === 4) {\n          // Throw only once\n          req.onreadystatechange = function() {};\n          throw new Error();\n        }\n      };\n\n      try {\n        fakeReq.respond();\n      } catch(e) {\n\n      } finally {\n        this.wait(20, function() {\n          this.assertNotCalled(req.ontimeout);\n        }, this);\n      }\n    },\n\n    //\n    // onloadend()\n    //\n\n    \"test: fire loadend when request complete\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n\n      var loadend = this.stub(req, \"_emit\").withArgs(\"loadend\");\n      req.open(\"GET\", \"/\");\n      req.send();\n\n      // Status does not matter\n      fakeReq.respond();\n\n      this.assertCalled(loadend);\n    },\n\n    //\n    // Events\n    //\n\n\n    //\n    // readyState\n    //\n\n    \"test: set readyState appropriate to native readyState\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n\n      // Created\n      this.assertEquals(this.constructor.UNSENT, req.readyState);\n\n      // Open\n      req.open(\"GET\", \"/affe\");\n      this.assertEquals(this.constructor.OPENED, req.readyState);\n\n      // Send (and receive)\n      req.send();\n      fakeReq.respond(this.constructor.DONE);\n      this.assertEquals(this.constructor.DONE, req.readyState);\n    },\n\n    //\n    // responseText\n    //\n\n    \"test: responseText is empty string when OPEN\": function() {\n      this.req.open(\"GET\", \"/affe\");\n      this.assertIdentical(\"\", this.req.responseText);\n    },\n\n    \"test: responseText is empty string when reopened\": function() {\n      var fakeReq = this.getFakeReq();\n\n      // Send and respond\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n      req.send();\n      fakeReq.respond(200, {\"Content-Type\": \"text/html\"}, \"Affe\");\n\n      // Reopen\n      req.open(\"GET\", \"/elefant\");\n      this.assertIdentical(\"\", req.responseText);\n    },\n\n    \"test: responseText is set when DONE\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n\n      req.open(\"GET\", \"/\");\n      req.send();\n      fakeReq.respond(200, {\"Content-Type\": \"text/html\"}, \"Affe\");\n\n      this.assertEquals(\"Affe\", req.responseText);\n    },\n\n    // BUGFIXES\n\n    \"test: query responseText when available\": function() {\n      var that = this;\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n\n      function success(state) {\n\n        // Stub and prepare success\n        fakeReq.readyState = state;\n        fakeReq.responseText = \"YIPPIE\";\n        fakeReq.responseHeaders = {};\n\n        // Trigger readystatechange handler\n        fakeReq.onreadystatechange();\n\n        that.assertEquals(\"YIPPIE\", req.responseText,\n                          \"When readyState is \" + state);\n      }\n\n      success(this.constructor.DONE);\n\n      // Assert responseText to be set when in progress\n      // in browsers other than IE < 9\n      if (!this.isIEBelow(9)) {\n        success(this.constructor.HEADERS_RECEIVED);\n        success(this.constructor.LOADING);\n      }\n\n    },\n\n    \"test: not query responseText if unavailable\": function() {\n      var that = this;\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n\n      function trap(state) {\n\n        // Stub and set trap\n        fakeReq.readyState = state;\n        fakeReq.responseText = \"BOGUS\";\n\n        // Trigger readystatechange handler\n        fakeReq.onreadystatechange();\n\n        that.assertNotEquals(\"BOGUS\", req.responseText,\n                             \"When readyState is \" + state);\n      }\n\n      if (this.isIEBelow(9)) {\n        trap(this.constructor.UNSENT);\n        trap(this.constructor.OPENED);\n        trap(this.constructor.HEADERS_RECEIVED);\n        trap(this.constructor.LOADING);\n      }\n\n    },\n\n    //\n    // responseXML\n    //\n\n    \"test: responseXML is null when not DONE\": function() {\n      this.assertNull(this.req.responseXML);\n    },\n\n    \"test: responseXML is null when reopened\": function() {\n      var fakeReq = this.getFakeReq();\n\n      // Send and respond\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n      req.send();\n      fakeReq.respond(200, { \"Content-Type\": \"application/xml\" }, \"<affe></affe>\");\n\n      // Reopen\n      req.open(\"GET\", \"/\");\n      this.assertNull(req.responseXML);\n    },\n\n    \"test: responseXML is parsed document with XML response\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n\n      req.open(\"GET\", \"/\");\n      req.send();\n\n      var headers = { \"Content-Type\": \"application/xml\" };\n      var body = \"<animals><monkey/><mouse/></animals>\";\n      fakeReq.respond(200, headers, body);\n\n      this.assertObject(req.responseXML);\n    },\n\n    //\n    // status and statusText\n    //\n\n    \"test: http status is 0 when UNSENT\": function() {\n      this.assertIdentical(0, this.req.status);\n    },\n\n    \"test: http status is 0 when OPENED\": function() {\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n\n      this.assertIdentical(0, req.status);\n    },\n\n    \"test: http status is 0 when aborted immediately\": function() {\n      this.require([\"http\"]);\n\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n      req.send();\n      req.abort();\n\n      this.assertIdentical(0, req.status);\n    },\n\n    \"test: http status when DONE\": function() {\n      var req = this.req;\n      var fakeReq = this.getFakeReq();\n      req.open(\"GET\", \"/\");\n      fakeReq.respond(200);\n\n      this.assertIdentical(200, req.status);\n    },\n\n    \"test: statusText is empty string when UNSENT\": function() {\n      this.assertIdentical(\"\", this.req.statusText);\n    },\n\n    \"test: statusText is set when DONE\": function() {\n      var fakeReq = this.getFakeReq();\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n      fakeReq.respond(200);\n\n      this.assertIdentical(\"OK\", req.statusText);\n    },\n\n    \"test: status is set when LOADING\": function() {\n      var fakeReq = this.getFakeReq();\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n      fakeReq.readyState = this.constructor.LOADING;\n      fakeReq.status = 200;\n      fakeReq.responseHeaders = {};\n      fakeReq.onreadystatechange();\n\n      this.assertIdentical(200, req.status);\n    },\n\n    \"test: reset status when reopened\": function() {\n      var fakeReq = this.getFakeReq();\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n      fakeReq.respond(200);\n      req.open(\"GET\", \"/\");\n\n      this.assertIdentical(0, req.status);\n      this.assertIdentical(\"\", req.statusText);\n    },\n\n    // BUGFIXES\n\n    \"test: normalize status 1223 to 204\": function() {\n      var fakeReq = this.getFakeReq();\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n      req.send();\n      fakeReq.respond(1223);\n\n      this.assertIdentical(204, req.status);\n    },\n\n    \"test: normalize status 0 to 200 when DONE and file protocol\": function() {\n      var fakeReq = this.getFakeReq();\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n      req.send();\n\n      this.stub(req, \"_getProtocol\").returns(\"file:\");\n      fakeReq.respond(0, {}, \"Response\");\n\n      this.assertEquals(200, req.status);\n    },\n\n    \"test: keep status 0 when not yet DONE and file protocol\": function() {\n      var fakeReq = this.getFakeReq();\n      var req = this.req;\n      this.stub(req, \"_getProtocol\").returns(\"file:\");\n      req.open(\"GET\", \"/\");\n\n      fakeReq.readyState = 3;\n      fakeReq.onreadystatechange();\n\n      this.assertEquals(0, req.status);\n    },\n\n    \"test: keep status 0 when DONE with network error and file protocol\": function() {\n      var fakeReq = this.getFakeReq();\n      var req = this.req;\n      req.open(\"GET\", \"/\");\n      req.send();\n\n      this.stub(req, \"_getProtocol\").returns(\"file:\");\n\n      // Indicate network error\n      fakeReq.readyState = 4;\n      fakeReq.responseText = \"\";\n      fakeReq.onreadystatechange();\n\n      this.assertEquals(0, req.status);\n    },\n\n    //\n    // _getProtocol()\n    //\n\n    \"test: read protocol from requested URL when it contains protocol\": function() {\n      var req = this.req;\n      req.open(\"GET\", \"http://example.org/index.html\");\n\n      this.assertEquals(\"http:\", req._getProtocol());\n    },\n\n    \"test: read protocol from window if requested URL is without protocol\": function() {\n      this.require([\"http\"]);\n\n      var req = this.req;\n      req.open(\"GET\", \"index.html\");\n\n      this.assertMatch(req._getProtocol(), (/https?:/));\n    },\n\n    //\n    // getResponseHeader()\n    //\n\n    \"test: getResponseHeader()\": function() {\n      var fakeReq = this.getFakeReq();\n      fakeReq.open();\n      fakeReq.setResponseHeaders({\n        \"key\": \"value\"\n      });\n\n      var responseHeader = this.req.getResponseHeader(\"key\");\n      this.assertEquals(\"value\", responseHeader);\n    },\n\n    //\n    // getAllResponseHeaders()\n    //\n\n    \"test: getAllResponseHeaders()\": function() {\n      var fakeReq = this.getFakeReq();\n      fakeReq.open();\n      fakeReq.setResponseHeaders({\n        \"key1\": \"value1\",\n        \"key2\": \"value2\"\n      });\n\n      var responseHeaders = this.req.getAllResponseHeaders();\n      this.assertMatch(responseHeaders, /key1: value1/);\n      this.assertMatch(responseHeaders, /key2: value2/);\n    },\n\n    //\n    // dispose()\n    //\n\n    \"test: dispose() deletes native Xhr\": function() {\n      this.req.dispose();\n\n      this.assertNull(this.req.getRequest());\n    },\n\n    \"test: dispose() aborts\": function() {\n      var req = this.req;\n\n      this.spy(req, \"abort\");\n      this.req.dispose();\n\n      this.assertCalled(req.abort);\n    },\n\n\n    \"test: isDisposed()\": function() {\n      this.assertFalse(this.req.isDisposed());\n      this.req.dispose();\n      this.assertTrue(this.req.isDisposed());\n    },\n\n\n    \"test: invoking public method throws when disposed\": function() {\n      var req = this.req;\n      var assertDisposedException = qx.lang.Function.bind(function(callback) {\n        this.assertException(qx.lang.Function.bind(callback, this),\n          Error, /Already disposed/);\n      }, this);\n\n      this.req.dispose();\n      assertDisposedException(function() { req.open(\"GET\", \"/\"); });\n      assertDisposedException(function() { req.setRequestHeader(); });\n      assertDisposedException(function() { req.send(); });\n      assertDisposedException(function() { req.abort(); });\n      assertDisposedException(function() { req.getResponseHeader(); });\n      assertDisposedException(function() { req.getAllResponseHeaders(); });\n\n    },\n\n    fakeNativeXhr: function() {\n      this.fakedXhr = this.useFakeXMLHttpRequest();\n\n      // Reset pre-existing request so that it uses the faked XHR\n      if (this.req) {\n        this.req = new qx.bom.request.Xhr();\n      }\n    },\n\n    getFakeReq: function() {\n      return this.getRequests().slice(-1)[0];\n    },\n\n    isIEBelow: function(targetVersion) {\n      var name = qx.core.Environment.get(\"engine.name\");\n      var version = qx.core.Environment.get(\"engine.version\");\n\n      return name == \"mshtml\" && version < targetVersion;\n    },\n\n    isFFBelow: function(targetVersion) {\n      var name = qx.core.Environment.get(\"engine.name\");\n      var version = qx.core.Environment.get(\"browser.version\");\n\n      return name == \"gecko\" && parseFloat(version) < targetVersion;\n    },\n\n    hasIEBelow9: function() {\n      return this.isIEBelow(9);\n    },\n\n    skip: function(msg) {\n      throw new qx.dev.unit.RequirementError(null, msg);\n    }\n\n  }\n});\n"
  ]
}