{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/request/SimpleXhr.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "members",
    "setUp",
    "req",
    "bom",
    "request",
    "SimpleXhr",
    "tearDown",
    "getSandbox",
    "restore",
    "key",
    "value",
    "assertEquals",
    "setRequestHeader",
    "getRequestHeader",
    "url",
    "setUrl",
    "getUrl",
    "method",
    "setMethod",
    "getMethod",
    "data",
    "setRequestData",
    "getRequestData",
    "json",
    "xml",
    "obj",
    "a",
    "_transport",
    "responseText",
    "getResponse",
    "responseXML",
    "_setResponse",
    "setTimeout",
    "getTimeout",
    "assertTrue",
    "useCaching",
    "isCaching",
    "assertFalse",
    "acceptedParser",
    "customParser",
    "setParser",
    "contentType",
    "assertNull",
    "_serializeData",
    "stubTransportMethods",
    "methods",
    "stubbedTransport",
    "_createTransport",
    "l",
    "length",
    "stub",
    "send",
    "assertCalledWith",
    "open",
    "timeout",
    "expectedUrl",
    "RegExp",
    "assertCalledWithMatch",
    "lang",
    "Json",
    "stringify",
    "window",
    "FormData",
    "skip",
    "formData",
    "append",
    "Blob",
    "blob",
    "type",
    "ArrayBuffer",
    "arrayBuffer",
    "abort",
    "assertCalled",
    "dispose",
    "name",
    "listener",
    "ctx",
    "addListenerOnce",
    "once",
    "animals",
    "returns",
    "_registerTransportListener",
    "readyState",
    "Xhr",
    "DONE",
    "status",
    "onreadystatechange",
    "assertArrayEquals",
    "emit",
    "onloadend",
    "onabort",
    "ontimeout",
    "callCount",
    "onerror",
    "testGetResponseHeaders",
    "useFakeServer",
    "getServer",
    "autoRespond",
    "respondWith",
    "on",
    "resume",
    "getResponseHeader",
    "headers",
    "getAllResponseHeaders",
    "assertMatch",
    "bind",
    "wait",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2013 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Richard Sternagel (rsternagel)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.bom.request.SimpleXhr\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  include : [qx.dev.unit.MMock],\n\n  members :\n  {\n    setUp : function()\n    {\n      this.req = new qx.bom.request.SimpleXhr();\n    },\n\n    tearDown : function()\n    {\n      this.req = null;\n      this.getSandbox().restore();\n    },\n\n    //\n    // setRequestHeader()\n    // getRequestHeader()\n    //\n\n    \"test: set/get request header\": function() {\n      var key = \"Accept\",\n          value = \"application/json\";\n\n      this.assertEquals(value, this.req.setRequestHeader(key, value).getRequestHeader(key));\n    },\n\n    //\n    // setUrl()\n    // getUrl()\n    //\n\n    \"test: set/get url\": function() {\n      var url = \"http://example.org\";\n\n      this.assertEquals(url, this.req.setUrl(url).getUrl());\n    },\n\n    //\n    // setMethod()\n    // getMethod()\n    //\n\n    \"test: set/get method\": function() {\n      var method = \"GET\";\n\n      this.assertEquals(method, this.req.setMethod(method).getMethod());\n    },\n\n    //\n    // setRequestData()\n    // getRequestData()\n    //\n\n    \"test: set/get request data\": function() {\n      var data = {\"abc\": \"def\", \"uvw\": \"xyz\"};\n\n      this.assertEquals(data, this.req.setRequestData(data).getRequestData());\n    },\n\n    //\n    // _setResponse()\n    // getResponse()\n    //\n\n    \"test: set/get response\": function() {\n      var req = this.req,\n          json = '{\"animals\": [\"monkey\", \"mouse\"]}',\n          xml = \"<animals><monkey/><mouse/></animals>\",\n          obj = {a:\"b\"};\n\n      req._transport.responseText = json;\n      this.assertEquals(json, req.getResponse());\n\n      req._transport.responseXML = xml;\n      this.assertEquals(xml, req.getResponse());\n\n      req._setResponse(obj);\n      this.assertEquals(obj, req.getResponse());\n    },\n\n    //\n    // setTimeout()\n    // getTimeout()\n    //\n\n    \"test: set/get timeout in millis\": function() {\n      this.assertEquals(150, this.req.setTimeout(150).getTimeout());\n    },\n\n    //\n    //  useCaching\n    //  isCaching\n    //\n\n    \"test: use/is caching\": function() {\n      this.assertTrue(this.req.useCaching(true).isCaching());\n      this.assertFalse(this.req.useCaching(false).isCaching());\n    },\n\n    //\n    // setParser()\n    //\n\n    \"test: set (custom) parser\": function() {\n      var req = this.req,\n          acceptedParser = null,\n          customParser = function() {};\n\n      acceptedParser = req.setParser(customParser);\n      this.assertEquals(customParser, acceptedParser);\n    },\n\n    //\n    // _serializeData()\n    //\n\n    \"test: serialize data\": function() {\n      var data = {\"abc\": \"def\", \"uvw\": \"xyz\"},\n          contentType = \"application/json\";\n\n      this.assertNull(this.req._serializeData(null));\n      this.assertEquals(\"leaveMeIntact\", this.req._serializeData(\"leaveMeIntact\"));\n      this.assertEquals(\"abc=def&uvw=xyz\", this.req._serializeData(data));\n      this.assertEquals(\"abc=def&uvw=xyz\", this.req._serializeData(data, \"arbitrary/contentType\"));\n      this.assertEquals('{\"abc\":\"def\",\"uvw\":\"xyz\"}', this.req._serializeData(data, contentType));\n      this.assertEquals('[1,2,3]', this.req._serializeData([1,2,3], contentType));\n    },\n\n    //\n    // send()\n    //\n\n    stubTransportMethods : function(methods) {\n      var stubbedTransport = this.req._createTransport(),\n          l = methods.length;\n\n      while (l--) {\n        this.stub(stubbedTransport, methods[l]);\n      }\n      this.req._transport = stubbedTransport;\n      return stubbedTransport;\n    },\n\n    \"test: send() w/ timeout\": function() {\n      var req = this.req,\n          method = \"GET\",\n          url = \"http://example.org\",\n          stubbedTransport = {};\n\n      req.setUrl(url);\n      req.setTimeout(150);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url, true);\n      this.assertCalledWith(stubbedTransport.send);\n      this.assertEquals(stubbedTransport.timeout, req.getTimeout());\n    },\n\n    \"test: send() w/o data and w/o headers\": function() {\n      var req = this.req,\n          method = \"GET\",\n          url = \"http://example.org\",\n          stubbedTransport = {};\n\n      req.setUrl(url);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url, true);\n      this.assertCalledWith(stubbedTransport.send);\n    },\n\n    \"test: send() GET w/ data and w/ headers\": function() {\n      var req = this.req,\n          method = \"GET\",\n          url = \"http://example.org\",\n          obj = {a:\"b\"},\n          stubbedTransport = {};\n\n      req.setUrl(url);\n      req.setRequestHeader(\"Accept\", \"application/json\");\n      req.setRequestData(obj);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"setRequestHeader\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url+\"?a=b\", true);\n      this.assertCalledWith(stubbedTransport.setRequestHeader, \"Accept\", \"application/json\");\n      this.assertCalledWith(stubbedTransport.send);\n    },\n\n    \"test: send() GET w/ enabled caching sets nocache param\": function() {\n      var req = this.req,\n          method = \"GET\",\n          url = \"http://example.org\",\n          expectedUrl = new RegExp(url+\"\\\\?nocache=[0-9]{13,}\"),\n          stubbedTransport = {};\n\n      req.setUrl(url);\n      req.useCaching(false);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"send\"]);\n      req.send();\n\n      this.assertCalledWithMatch(stubbedTransport.open, method, expectedUrl, true);\n      this.assertCalledWith(stubbedTransport.send);\n    },\n\n    \"test: send() GET w/ caching header overrides cache prevention\": function() {\n      var req = this.req,\n          method = \"GET\",\n          url = \"http://example.org\",\n          stubbedTransport = {};\n\n      req.setUrl(url);\n      req.setRequestHeader(\"Cache-Control\", \"no-cache\");\n      stubbedTransport = this.stubTransportMethods([\"open\", \"setRequestHeader\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url, true);\n      this.assertCalledWith(stubbedTransport.setRequestHeader, \"Cache-Control\", \"no-cache\");\n      this.assertCalledWith(stubbedTransport.send);\n    },\n\n    \"test: send() POST w/ data (default content-type)\": function() {\n      var req = this.req,\n          method = \"POST\",\n          url = \"http://example.org\",\n          obj = {a:\"b\"},\n          stubbedTransport = {};\n\n      req.setUrl(url);\n      req.setMethod(method);\n      req.setRequestData(obj);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"setRequestHeader\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url, true);\n      this.assertCalledWith(stubbedTransport.setRequestHeader, \"Content-Type\", \"application/x-www-form-urlencoded\");\n      this.assertCalledWith(stubbedTransport.send, \"a=b\");\n    },\n\n    \"test: send() POST w/ data (application/json)\": function() {\n      var req = this.req,\n          method = \"POST\",\n          url = \"http://example.org\",\n          obj = {a:\"b\"},\n          stubbedTransport = {};\n\n      req.setUrl(url);\n      req.setMethod(method);\n      req.setRequestData(obj);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      stubbedTransport = this.stubTransportMethods([\"open\", \"setRequestHeader\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.open, method, url, true);\n      this.assertCalledWith(stubbedTransport.send, qx.lang.Json.stringify(obj));\n    },\n\n    \"test: send() POST w/ FormData\": function() {\n      var req = this.req,\n        method = \"POST\",\n        url = \"http://example.org\",\n        stubbedTransport = {};\n\n      if (!window.FormData) {\n        this.skip(\"FormData API not supported\");\n      }\n\n      if (!req.setMethod) {\n        this.skip(\"POST requests not supported by this transport\");\n      }\n\n      var formData = new FormData();\n      formData.append(\"foo\", \"bar\");\n      formData.append(\"baz\", \"qux\");\n\n      req.setUrl(url);\n      req.setMethod(method);\n      req.setRequestData(formData);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"setRequestHeader\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.send, formData);\n    },\n\n\n    \"test: send() POST w/ Blob\": function() {\n      var req = this.req,\n        method = \"POST\",\n        url = \"http://example.org\",\n        stubbedTransport = {};\n\n      if (!window.Blob) {\n        this.skip(\"Blob API not supported\");\n      }\n\n      if (!req.setMethod) {\n        this.skip(\"POST requests not supported by this transport\");\n      }\n\n      var blob = new window.Blob(['abc123'], {type: 'text/plain'});\n\n      req.setUrl(url);\n      req.setMethod(method);\n      req.setRequestData(blob);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"setRequestHeader\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.send, blob);\n    },\n\n    \"test: send() POST w/ ArrayBuffer\": function() {\n      var req = this.req,\n        method = \"POST\",\n        url = \"http://example.org\",\n        stubbedTransport = {};\n\n      if (!window.ArrayBuffer) {\n        this.skip(\"ArrayBuffer API not supported\");\n      }\n\n      if (!req.setMethod) {\n        this.skip(\"POST requests not supported by this transport\");\n      }\n\n      var arrayBuffer = new window.ArrayBuffer(512);\n\n      req.setUrl(url);\n      req.setMethod(method);\n      req.setRequestData(arrayBuffer);\n      stubbedTransport = this.stubTransportMethods([\"open\", \"setRequestHeader\", \"send\"]);\n      req.send();\n\n      this.assertCalledWith(stubbedTransport.send, arrayBuffer);\n    },\n\n    //\n    // abort()\n    //\n\n    \"test: abort() aborts transport\": function() {\n      var stubbedTransport = this.stubTransportMethods([\"abort\"]);\n      this.req.abort();\n\n      this.assertCalled(stubbedTransport.abort);\n    },\n\n    //\n    // dispose()\n    //\n\n    \"test: dispose() disposes transport\": function() {\n      this.assertTrue(this.req.dispose());\n    },\n\n\n    //\n    // addListenerOnce()\n    //\n\n    \"test: addListenerOnce() event handler\": function() {\n      var req = this.req,\n          stubbedTransport = this.req._createTransport(),\n          name = \"test-success\",\n          listener = function() {},\n          ctx = this;\n\n      this.stub(req, \"once\");\n      req._transport = stubbedTransport;\n\n      req.addListenerOnce(name, listener, ctx);\n      this.assertCalledWith(req.once, name, listener, ctx);\n    },\n\n    //\n    // _onReadyStateChange()\n    // __onReadyStateDone()\n    //\n\n    \"test: _onReadyStateDone() success\": function() {\n      var req = this.req,\n          json = '{\"animals\": [\"monkey\", \"mouse\"]}',\n          obj = {animals: [\"monkey\", \"mouse\"]},\n          contentType = \"application/json\",\n          stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      this.stub(stubbedTransport, \"getResponseHeader\").returns(contentType);\n      req._transport = req._registerTransportListener(stubbedTransport);\n      req._transport.readyState = qx.bom.request.Xhr.DONE;\n      req._transport.responseText = json;\n      req._transport.status = 200;\n\n      req._transport.onreadystatechange();\n\n      this.assertArrayEquals(obj.animals, req.getResponse().animals);\n      this.assertCalledWith(req.emit, \"success\");\n    },\n\n    \"test: _onReadyStateDone() fail w/ response\": function() {\n      var req = this.req,\n          json = '{\"animals\": [\"monkey\", \"mouse\"]}',\n          obj = {animals: [\"monkey\", \"mouse\"]},\n          contentType = \"application/json\",\n          stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      this.stub(stubbedTransport, \"getResponseHeader\").returns(contentType);\n      req._transport = req._registerTransportListener(stubbedTransport);\n      req._transport.readyState = qx.bom.request.Xhr.DONE;\n      req._transport.responseText = json;\n      req._transport.status = 404;\n\n      req._transport.onreadystatechange();\n\n      this.assertArrayEquals(obj.animals, req.getResponse().animals);\n      this.assertCalledWith(req.emit, \"fail\");\n    },\n\n    \"test: _onReadyStateDone() fail w/o response\": function() {\n      var req = this.req,\n          contentType = \"hasToExist/ButContentDoesntMatter\",\n          stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      this.stub(stubbedTransport, \"getResponseHeader\").returns(contentType);\n      req._transport = req._registerTransportListener(stubbedTransport);\n      req._transport.readyState = qx.bom.request.Xhr.DONE;\n      req._transport.status = 404;\n\n      req._transport.onreadystatechange();\n\n      this.assertEquals(\"\", req.getResponse());\n      this.assertCalledWith(req.emit, \"fail\");\n    },\n\n    //\n    // onLoadEnd()\n    //\n\n    \"test: onLoadEnd()\": function() {\n      var req = this.req,\n          stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      req._transport = req._registerTransportListener(stubbedTransport);\n\n      req._transport.onloadend();\n\n      this.assertCalledWith(req.emit, \"loadEnd\");\n    },\n\n    //\n    // onAbort()\n    //\n\n    \"test: onAbort()\": function() {\n      var req = this.req,\n          stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      req._transport = req._registerTransportListener(stubbedTransport);\n\n      req._transport.onabort();\n\n      this.assertCalledWith(req.emit, \"abort\");\n    },\n\n    //\n    // onTimeout()\n    //\n\n    \"test: onTimeout()\": function() {\n      var req = this.req,\n          stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      req._transport = req._registerTransportListener(stubbedTransport);\n\n      req._transport.ontimeout();\n\n      this.assertCalledWith(req.emit, \"timeout\");\n      this.assertEquals(2, req.emit.callCount); // + emit(\"fail\")\n    },\n\n    //\n    // onError()\n    //\n\n    \"test: onError()\": function() {\n      var req = this.req,\n          stubbedTransport = req._createTransport();\n\n      // prep transport\n      this.stub(req, \"emit\");\n      req._transport = req._registerTransportListener(stubbedTransport);\n\n      req._transport.onerror();\n\n      this.assertCalledWith(req.emit, \"error\");\n      this.assertEquals(2, req.emit.callCount); // + emit(\"fail\")\n    },\n\n\n    testGetResponseHeaders: function() {\n      this.useFakeServer();\n      this.getServer().autoRespond = true;\n      this.getServer().respondWith(\"GET\", \"/foo\",\n        [\n          200,\n          {\n            \"x-affe\": \"AFFE\"\n          },\n          \"Response Body\"\n        ]);\n\n      var req = new qx.bom.request.SimpleXhr('/foo', 'GET');\n      req.on(\"success\", function() {\n        this.resume(function() {\n          this.assertEquals(\"AFFE\", req.getResponseHeader(\"x-affe\"));\n          var headers = req.getAllResponseHeaders();\n          this.assertMatch(headers, /x-affe.*?AFFE/);\n        }.bind(this));\n      }.bind(this));\n\n      window.setTimeout(function() {\n        req.send();\n      }, 100);\n\n      this.wait(200);\n    }\n  }\n});\n"
  ]
}