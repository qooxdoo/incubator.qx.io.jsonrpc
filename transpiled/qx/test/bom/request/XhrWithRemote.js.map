{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/request/XhrWithRemote.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "MRemoteTest",
    "MMock",
    "MRequirements",
    "construct",
    "members",
    "req",
    "setUp",
    "bom",
    "request",
    "Xhr",
    "tearDown",
    "dispose",
    "url",
    "getUrl",
    "open",
    "noCache",
    "that",
    "onreadystatechange",
    "readyState",
    "resume",
    "assertEquals",
    "responseText",
    "send",
    "wait",
    "on",
    "assertObject",
    "responseXML",
    "documentElement",
    "require",
    "setRequestHeader",
    "assertIdentical",
    "abort",
    "assertNotEquals",
    "status",
    "count",
    "results",
    "onload",
    "push",
    "assertException",
    "e",
    "Error",
    "onloadAssertContentTypeUnchanged",
    "getResponseHeader",
    "query",
    "encodeURIComponent",
    "onloadAssertContentTypeOverride",
    "overrideMimeType",
    "states",
    "assertArrayEquals",
    "primeReq",
    "spy",
    "assertNotCalled",
    "window",
    "setTimeout",
    "onloadend",
    "onerror",
    "event",
    "Timer",
    "once",
    "timeout",
    "ontimeout",
    "assertCallOrder",
    "onabort",
    "Date",
    "valueOf",
    "hasNoIe",
    "core",
    "Environment",
    "get",
    "hasNoIe9",
    "hasFile",
    "location",
    "protocol",
    "XhrWithRemote"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n *\n * @asset(qx/test/xmlhttp/*)\n */\n\nqx.Class.define(\"qx.test.bom.request.XhrWithRemote\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  include : [qx.test.io.MRemoteTest,\n             qx.dev.unit.MMock,\n             qx.dev.unit.MRequirements],\n\n  construct : function()\n  {\n    this.base(arguments);\n  },\n\n  members :\n  {\n\n    req : null,\n\n    setUp: function() {\n      this.req = new qx.bom.request.Xhr();\n    },\n\n    tearDown: function() {\n      this.req.dispose();\n    },\n\n    //\n    // Basic\n    //\n\n    \"test: GET with event attribute handler\": function() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume(function() {\n            that.assertEquals(req.responseText, \"SAMPLE\");\n          });\n        }\n      };\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: GET with event\": function() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      var onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume(function() {\n            that.assertEquals(req.responseText, \"SAMPLE\");\n          });\n        }\n      };\n      req.on(\"readystatechange\", onreadystatechange);\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: GET XML\": function() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.xml\");\n\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume(function() {\n            that.assertObject(req.responseXML.documentElement, \"Must be XML object\");\n          });\n        }\n      };\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: handle arbitrary XML\": function() {\n      this.require([\"php\"]);\n\n      // Content-Type: foo/bar+xml\n      var url = this.getUrl(\"qx/test/xmlhttp/xml.php\");\n\n      var req = this.req;\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume(function() {\n            that.assertObject(req.responseXML.documentElement, \"Must be XML object\");\n          });\n        }\n      };\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: handle invalid XML\": function() {\n      var url = this.getUrl(\"qx/test/xmlhttp/invalid.xml\"),\n          req = this.req,\n          that = this;\n\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume(function() {\n            req.responseXML;\n          });\n        }\n      };\n\n      req.open(\"GET\", url);\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: POST\": function() {\n      this.require([\"php\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_post_request.php\");\n      req.open(\"POST\", this.noCache(url));\n      req.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n      var that = this;\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume(function() {\n            that.assertEquals('{\"affe\":\"true\"}', req.responseText);\n          });\n        }\n      };\n      req.send(\"affe=true\");\n\n      this.wait();\n    },\n\n    \"test: have readyState UNSENT\": function() {\n      var req = this.req;\n      this.assertIdentical(0, req.readyState);\n    },\n\n    \"test: have readyState OPENED\": function() {\n      this.require([\"php\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_post_request.php\");\n      req.open(\"GET\", this.noCache(url));\n\n      this.assertIdentical(1, req.readyState);\n    },\n\n    \"test: abort pending request\": function() {\n      this.require([\"php\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_get_request.php\");\n\n      req.open(\"GET\", this.noCache(url));\n      req.abort();\n\n      this.assertNotEquals(4, req.readyState, \"Request must not complete\");\n    },\n\n    \"test: have status 200 when modified\": function() {\n      this.require([\"php\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/echo_get_request.php\");\n\n      // Make sure resource is not served from cache\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume(function() {\n            that.assertEquals(200, req.status);\n          });\n        }\n      };\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: validate freshness\": function() {\n      this.require([\"php\", \"noIe\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/time.php\");\n\n      var send = function() {\n        req.open(\"GET\", url);\n        req.send();\n      };\n\n      var that = this;\n      var count = 0;\n      var results = [];\n      req.onload = function() {\n        count += 1;\n        results.push(req.responseText);\n        if (count < 2) {\n          send();\n        } else {\n          that.resume(function() {\n            that.assertNotEquals(results[0], results[1], \"Response must differ\");\n          });\n        }\n      };\n\n      send();\n      this.wait();\n    },\n\n    // \"test: GET simultaneously\": function() {\n    //   var count = 1,\n    //       upTo = 20,\n    //       startedAt = new Date(),\n    //       duration = 0,\n    //       that = this;\n    //\n    //   for (var i=0; i<upTo; i++) {\n    //     (function() {\n    //       var req = new qx.bom.request.Xhr(),\n    //           url = that.noCache(that.getUrl(\"qx/test/xmlhttp/loading.php\")) + \"&duration=2\";\n    //\n    //       req.onreadystatechange = function() {\n    //         if (req.readyState != 4) {\n    //           return;\n    //         }\n    //\n    //         that.resume(function() {\n    //\n    //           // In seconds\n    //           duration = (new Date() - startedAt) / 1000;\n    //           that.debug(\"Request #\" + count + \" completed (\" +  duration + \")\");\n    //\n    //           if (count == upTo) {\n    //             return;\n    //           }\n    //\n    //           ++count;\n    //           that.wait();\n    //         });\n    //       }\n    //\n    //       req.open(\"GET\", url);\n    //       req.send();\n    //     })();\n    //   }\n    //\n    //   // Provided two concurrent requests are made (each 6s), 20 requests\n    //   // (i.e. 10 packs of requests) should complete after 60s\n    //   this.wait(15000 + 1000);\n    // },\n\n    \"test: open throws error with insecure method\": function() {\n      var req = this.req,\n          url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n\n      this.assertException(function() {\n        // Type of error is of no interest\n        try {\n          req.open(\"TRACE\", url);\n        } catch(e) {\n          throw Error();\n        }\n      });\n    },\n\n    \"test: overrideMimeType content type unchanged\": function() {\n      this.require([\"php\", \"noIe\"]);\n\n      var req = this.req,\n          that = this;\n\n      var onloadAssertContentTypeUnchanged = function() {\n        that.resume(function() {\n          that.assertEquals(\"text/html;charset=iso-8859-1\", req.getResponseHeader(\"Content-Type\"));\n          that.assertEquals(\"ƒeƒXƒg\", req.responseText);\n        });\n      };\n\n      var query = \"?type=\"+encodeURIComponent(\"text/html;charset=iso-8859-1\")+\"&content=%83%65%83%58%83%67\";\n      var url = this.getUrl(\"qx/test/xmlhttp/get_content.php\") + query;\n\n      req.onload = onloadAssertContentTypeUnchanged;\n      req.open(\"GET\", url);\n      req.send();\n      this.wait();\n    },\n\n\n    \"test: overrideMimeType content type override\": function() {\n      this.require([\"php\", \"noIe\"]);\n\n      var req = this.req,\n          that = this;\n\n      var onloadAssertContentTypeOverride = function() {\n        that.resume(function() {\n          // may or may not work - see API docs of overrideMimeType\n          // that.assertEquals(\"text/plain;charset=Shift-JIS\", req.getResponseHeader(\"Content-Type\"));\n          that.assertEquals(\"テスト\", req.responseText);\n        });\n      };\n\n      var query = \"?type=\"+encodeURIComponent(\"text/html;charset=iso-8859-1\")+\"&content=%83%65%83%58%83%67\";\n      var url = this.getUrl(\"qx/test/xmlhttp/get_content.php\") + query;\n\n      req.onload = onloadAssertContentTypeOverride;\n      req.open(\"GET\", url);\n      req.overrideMimeType(\"text/plain;charset=Shift-JIS\");\n      req.send();\n      this.wait();\n    },\n\n    // BUGFIXES\n\n    \"test: progress to readyState DONE\": function() {\n      // This is a mess, see\n      // http://www.quirksmode.org/blog/archives/2005/09/xmlhttp_notes_r_2.html.\n\n      var req = this.req,\n          states = [],\n          that = this;\n\n      req.onreadystatechange = function() {\n        states.push(req.readyState);\n        if (req.readyState == 4) {\n          that.resume(function() {\n            that.assertArrayEquals([1, 2, 3, 4], states);\n          });\n        }\n      };\n\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url));\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: progress to readyState DONE when sync\": function() {\n      var req = this.req,\n          states = [];\n\n      req.onreadystatechange = function() {\n        states.push(req.readyState);\n      };\n\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url), false);\n      req.send();\n\n      // There is no HEADERS_RECEIVED and LOADING when sync.\n      // See http://www.w3.org/TR/XMLHttpRequest/#the-send-method\n      this.assertArrayEquals([1, 4], states);\n    },\n\n    \"test: progress to readyState DONE when from cache\": function() {\n      var primeReq = this.req,\n          url = this.noCache(this.getUrl(\"qx/test/xmlhttp/sample.txt\")),\n          states = [],\n          count = 0,\n          that = this;\n\n      primeReq.onreadystatechange = function() {\n        if (primeReq.readyState == 4) {\n\n          that.resume(function() {\n            // From cache with new request\n            var req = new qx.bom.request.Xhr();\n\n            req.onreadystatechange = function() {\n              states.push(req.readyState);\n              if (req.readyState == 4) {\n                that.resume(function() {\n                  that.assertArrayEquals([1, 2, 3, 4], states);\n                });\n              }\n            };\n\n            req.open(\"GET\", url);\n            req.send();\n\n            that.wait();\n          });\n        }\n      };\n\n      // Prime cache\n      primeReq.open(\"GET\", url);\n      primeReq.send();\n\n      this.wait();\n    },\n\n    \"test: have status 304 when cache is fresh\": function() {\n      this.require([\"php\"]);\n\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/not_modified.php\");\n\n      var that = this;\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume(function() {\n            that.assertIdentical(304, req.status);\n          });\n        }\n      };\n      req.open(\"GET\", url);\n\n      // Pretend that client has a fresh representation of\n      // this resource in its cache. Please note the ETag given\n      // must be in sync with the current ETag of the file requested.\n      //\n      // XMLHttpRequest states:\n      //\n      // For 304 Not Modified responses that are a result of a user\n      // agent generated conditional request the user agent must act\n      // as if the server gave a 200 OK response with the appropriate\n      // content. The user agent must allow setRequestHeader() to\n      // override automatic cache validation by setting request\n      // headers (e.g. If-None-Match or If-Modified-Since),\n      // in which case 304 Not Modified responses must be passed through.\n      //\n      // Copied from:\n      //\n      // XMLHttpRequest [http://www.w3.org/TR/XMLHttpRequest/]\n      // W3C Candidate Recommendation\n      // Copyright © 2009 W3C® (MIT, ERCIM, Keio), All Rights Reserved.\n      //\n\n      // The actual ETag is not of importance here, since the server\n      // is returning 304 anyway. We're just triggering the behavior\n      // specified above.\n      req.setRequestHeader(\"If-None-Match\", \"\\\"4893a3a-b0-49ea970349b00\\\"\");\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: allow many requests with same object\": function() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      var count = 0;\n\n      var that = this;\n      function request() {\n        req.open(\"GET\", that.noCache(url));\n        req.send();\n      }\n\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume(function() {\n            if (++count < 3) {\n              request();\n              this.wait();\n            } else {\n              that.assertEquals(3, count);\n            }\n          });\n        }\n      };\n      request();\n\n      this.wait();\n    },\n\n    //\n    // onreadystatechange()\n    //\n\n    \"test: call onreadystatechange for OPEN\": function() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n\n      var that = this;\n      var count = 0;\n      req.onreadystatechange = function() {\n        // Count call for state OPENED\n        if (req.readyState == 1) {\n          count = count + 1;\n        }\n\n        // Assert when DONE\n        if (req.readyState == 4) {\n          that.resume(function() {\n            // onreadystatechange should only be called\n            // once for state OPENED\n            that.assertEquals(1, count);\n          });\n        }\n      };\n\n      req.open(\"GET\", this.noCache(url));\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: not call onreadystatechange when aborting OPENED\": function() {\n      var req = this.req;\n\n      // OPENED, without send flag\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url));\n\n      this.spy(req, \"onreadystatechange\");\n      req.abort();\n\n      this.wait(100, function() {\n        this.assertNotCalled(req.onreadystatechange);\n      }, this);\n    },\n\n    \"test: call onreadystatechange when aborting LOADING\": function() {\n      this.require([\"php\", \"noIe9\"]);\n\n      var req = this.req;\n      var that = this;\n\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume();\n        }\n      };\n\n      // Will \"never\" complete\n      // OPENED, finally LOADING\n      var url = this.getUrl(\"qx/test/xmlhttp/loading.php\");\n      req.open(\"GET\", url + \"?duration=100\");\n      req.send();\n\n      window.setTimeout(function() {\n        req.abort();\n      }, 0);\n\n      this.wait();\n    },\n\n    \"test: call onloadend when aborting LOADING\": function() {\n      this.require([\"php\", \"noIe9\"]);\n\n      var req = this.req;\n      var that = this;\n\n      req.onloadend = function() {\n        that.resume();\n      };\n\n      // Will \"never\" complete\n      // OPENED, finally LOADING\n      var url = this.getUrl(\"qx/test/xmlhttp/loading.php\");\n      req.open(\"GET\", url + \"?duration=100\");\n      req.send();\n\n      window.setTimeout(function() {\n        req.abort();\n      }, 0);\n\n      this.wait(15000);\n    },\n\n    //\n    // onerror()\n    //\n\n    \"test: call onerror on network error\": function() {\n      var req = this.req;\n\n      var that = this;\n      req.onerror = function() {\n        that.resume(function() {\n          that.assertEquals(4, req.readyState);\n        });\n      };\n\n      // Network error (async)\n      // Is sync in Opera >= 11.5\n      qx.event.Timer.once(function() {\n        req.open(\"GET\", \"http://fail.tld\");\n        req.send();\n      }, this, 0);\n\n      // May take a while to detect network error\n      this.wait(15000);\n    },\n\n    \"test: call onerror on file error\": function() {\n      this.require([\"file\"]);\n\n      var req = this.req;\n\n      var that = this;\n      req.onerror = function() {\n        that.resume(function() {\n          that.assertEquals(4, req.readyState);\n        });\n      };\n\n      req.open(\"GET\", \"not-found\");\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: throw error on network error when sync\": function() {\n      var req = this.req;\n\n      // Network error (sync)\n      req.open(\"GET\", \"http://fail.tld\", false);\n\n      this.assertException(function() {\n        try {\n          req.send();\n        } catch(e) {\n          throw Error();\n        }\n      });\n    },\n\n    //\n    // ontimeout()\n    //\n\n    \"test: not call ontimeout when DONE and sync\": function() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      this.spy(req, \"ontimeout\");\n\n      // Assume that request completes in given interval\n      req.timeout = 400;\n\n      req.open(\"GET\", url, false);\n      req.send();\n\n      this.wait(function() {\n        this.assertNotCalled(req.ontimeout);\n      }, 500, this);\n    },\n\n    \"test: timeout triggers timeout error\": function() {\n      // \"timeout error\" is specified here\n      // http://www.w3.org/TR/XMLHttpRequest2/#timeout-error\n\n      this.require([\"php\"]);\n\n      var req = this.req,\n          url = this.getUrl(\"qx/test/xmlhttp/loading.php\"),\n          that = this;\n\n      req.onloadend = function() {\n        that.resume(function() {\n          that.assertEquals(4, req.readyState);\n          that.assertIdentical(\"\", req.responseText);\n          that.assertIdentical(null, req.responseXML);\n          that.assertCallOrder(req.onreadystatechange, req.ontimeout, req.onloadend);\n        });\n      };\n\n      req.timeout = 100;\n      req.open(\"GET\", url + \"?duration=100\");\n      req.send();\n\n      this.spy(req, \"onreadystatechange\");\n      this.spy(req, \"onerror\");\n      this.spy(req, \"ontimeout\");\n      this.spy(req, \"onloadend\");\n\n      this.wait();\n    },\n\n    \"test: timeout not call onabort\": function() {\n      this.require([\"php\"]);\n\n      var req = this.req,\n          url = this.getUrl(\"qx/test/xmlhttp/loading.php\"),\n          that = this;\n\n      req.ontimeout = function() {\n        that.resume(function() {\n          that.assertNotCalled(req.onabort);\n        });\n      };\n\n      req.timeout = 100;\n      req.open(\"GET\", url + \"?duration=100\");\n      req.send();\n\n      this.spy(req, \"onabort\");\n\n      this.wait();\n    },\n\n    //\n    // onloadend()\n    //\n\n    \"test: call onloadend on network error\": function() {\n      var req = this.req;\n\n      var that = this;\n      req.onloadend = function() {\n        that.resume();\n      };\n\n      // Network error\n      // Is sync in Opera >= 11.5\n      qx.event.Timer.once(function() {\n        req.open(\"GET\", \"http://fail.tld\");\n        req.send();\n      }, this, 0);\n\n      // May take a while to detect network error\n      this.wait(15000);\n    },\n\n    //\n    // Call order\n    //\n\n    \"test: call handler in order when request successful\": function() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n\n      var that = this;\n      req.onloadend = function() {\n        that.resume(function() {\n          that.assertCallOrder(\n            req.onreadystatechange,\n            req.onload,\n            req.onloadend);\n        });\n      };\n      this.spy(req, \"onreadystatechange\");\n      this.spy(req, \"onload\");\n      this.spy(req, \"onloadend\");\n      req.open(\"GET\", url);\n      req.send();\n\n      this.wait();\n    },\n\n    \"test: call handler in order when request failed\": function() {\n      var req = this.req;\n\n      var that = this;\n      req.onloadend = function() {\n        that.resume(function() {\n          that.assertCallOrder(\n            req.onreadystatechange,\n            req.onerror,\n            req.onloadend);\n        });\n      };\n      this.spy(req, \"onreadystatechange\");\n      this.spy(req, \"onerror\");\n      this.spy(req, \"onloadend\");\n\n      // Is sync in Opera >= 11.5\n      qx.event.Timer.once(function() {\n        req.open(\"GET\", \"http://fail.tld\");\n        req.send();\n      }, this, 0);\n\n      // May take a while to detect network error\n      this.wait(15000);\n    },\n\n    //\n    // Disposing\n    //\n\n    \"test: dispose hard-working\": function() {\n      var req = this.req;\n      var url = this.getUrl(\"qx/test/xmlhttp/sample.txt\");\n      req.open(\"GET\", this.noCache(url));\n\n      var that = this;\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          that.resume(function() {\n            // Must not throw error\n            req.dispose();\n          });\n        }\n      };\n      req.send();\n\n      this.wait();\n    },\n\n    noCache: function(url) {\n      return url + \"?nocache=\" + (new Date()).valueOf();\n    },\n\n    hasNoIe: function() {\n      return qx.core.Environment.get(\"engine.name\") !== \"mshtml\" &&\n        qx.core.Environment.get(\"browser.name\") !== \"edge\";\n    },\n\n    hasNoIe9: function() {\n      return (qx.core.Environment.get(\"engine.name\") !== \"mshtml\" ||\n        qx.core.Environment.get(\"browser.documentmode\") !== 9);\n    },\n\n    hasFile: function() {\n      return location.protocol === \"file:\";\n    }\n  }\n});\n"
  ]
}