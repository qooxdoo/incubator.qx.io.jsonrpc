{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/bom/request/Jsonp.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "test",
    "io",
    "MRemoteTest",
    "MRequirements",
    "MMock",
    "members",
    "setUp",
    "require",
    "req",
    "bom",
    "request",
    "Jsonp",
    "url",
    "getUrl",
    "core",
    "Environment",
    "get",
    "timeout",
    "tearDown",
    "window",
    "SCRIPT_LOADED",
    "undefined",
    "getSandbox",
    "restore",
    "dispose",
    "setCallbackParam",
    "open",
    "send",
    "assertMatch",
    "_getUrl",
    "setCallbackName",
    "regExp",
    "that",
    "myExistingCallback",
    "onload",
    "resume",
    "assertEquals",
    "wait",
    "data",
    "responseJson",
    "assertObject",
    "assertTrue",
    "assertNull",
    "status",
    "count",
    "onerror",
    "onloadend",
    "customUrl",
    "skip",
    "msg",
    "RequirementError"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n *\n * @asset(qx/test/script.js)\n * @asset(qx/test/jsonp_primitive.php)\n *\n * @ignore(myExistingCallback)\n */\n\nqx.Class.define(\"qx.test.bom.request.Jsonp\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  include : [qx.test.io.MRemoteTest,\n             qx.dev.unit.MRequirements,\n             qx.dev.unit.MMock],\n\n  members :\n  {\n    setUp: function() {\n      this.require([\"php\"]);\n\n      var req = this.req = new qx.bom.request.Jsonp();\n      this.url = this.getUrl(\"qx/test/jsonp_primitive.php\");\n\n      // Assume timeout after 1s in Opera (no error!)\n      if (qx.core.Environment.get(\"engine.name\") === \"opera\") {\n        req.timeout = 1000;\n      }\n    },\n\n    tearDown: function() {\n      window.SCRIPT_LOADED = undefined;\n      this.getSandbox().restore();\n      this.req.dispose();\n    },\n\n    //\n    // Callback\n    //\n\n    \"test: setCallbackParam()\": function() {\n      var req = this.req;\n\n      req.setCallbackParam(\"myMethod\");\n      req.open(\"GET\", this.url);\n      req.send();\n\n      this.assertMatch(req._getUrl(), /(myMethod=)/);\n    },\n\n    \"test: setCallbackName()\": function() {\n      var req = this.req;\n\n      req.setCallbackName(\"myCallback\");\n      req.open(\"GET\", this.url);\n      req.send();\n\n      this.assertMatch(req._getUrl(), /(=myCallback)/);\n    },\n\n    \"test: has default callback param and name\": function() {\n      var req = this.req,\n          regExp;\n\n      req.open(\"GET\", this.url);\n      req.send();\n\n      // String is URL encoded\n      regExp = /\\?callback=qx\\.bom\\.request\\.Jsonp.*\\d{16,}.*\\.callback/;\n      this.assertMatch(req._getUrl(), regExp);\n    },\n\n    /**\n     * @ignore(myExistingCallback)\n     */\n    \"test: not overwrite existing callback\": function() {\n      var that = this;\n\n      // User provided callback that must not be overwritten\n      window.myExistingCallback = function() { return \"Affe\"; };\n\n      this.req.setCallbackName(\"myExistingCallback\");\n\n      this.req.onload = function() {\n        that.resume(function() {\n          that.assertEquals(\"Affe\", myExistingCallback());\n          window.myExistingCallback = undefined;\n        });\n      };\n\n      this.request();\n      this.wait();\n    },\n\n    //\n    // Properties\n    //\n\n    \"test: responseJson holds response with default callback\": function() {\n      var that = this;\n\n      this.req.onload = function() {\n        that.resume(function() {\n          var data = this.req.responseJson;\n          that.assertObject(data);\n          that.assertTrue(data[\"boolean\"]);\n        });\n      };\n\n      this.request();\n      this.wait();\n    },\n\n    \"test: reset responseJson when reopened\": function() {\n      var req = this.req,\n          that = this;\n\n      req.onload = function() {\n        that.resume(function() {\n          req.open(\"GET\", \"/url\");\n          that.assertNull(req.responseJson);\n        });\n      };\n\n      this.request();\n      this.wait();\n    },\n\n    \"test: status indicates success when default callback called\": function() {\n      var that = this;\n\n      this.req.onload = function() {\n        that.resume(function() {\n          that.assertEquals(200, that.req.status);\n        });\n      };\n\n      this.request();\n      this.wait();\n    },\n\n    \"test: status indicates success when custom callback called\": function() {\n      var that = this;\n\n      this.req.onload = function() {\n        that.resume(function() {\n          that.assertEquals(200, that.req.status);\n        });\n      };\n\n      this.req.setCallbackName(\"myCallback\");\n      this.request();\n      this.wait();\n    },\n\n    // Error handling\n\n    \"test: status indicates failure when default callback not called\": function() {\n      var that = this;\n\n      this.req.onload = function() {\n        that.resume(function() {\n          that.assertEquals(500, that.req.status);\n        });\n      };\n\n      this.request(this.getUrl(\"qx/test/script.js\"));\n      this.wait();\n    },\n\n    \"test: status indicates failure when custom callback not called\": function() {\n      var that = this;\n\n      this.req.onload = function() {\n        that.resume(function() {\n          that.assertEquals(500, that.req.status);\n        });\n      };\n\n      this.req.setCallbackName(\"myCallback\");\n      this.request(this.getUrl(\"qx/test/script.js\"));\n      this.wait();\n    },\n\n    \"test: status indicates failure when callback not called on second request\": function() {\n      var count = 0,\n          req = this.req,\n          that = this;\n\n      req.onload = function() {\n        count += 1;\n\n        if (count == 2) {\n          that.resume(function() {\n            that.assertEquals(500, req.status);\n          });\n          return;\n        }\n\n        that.request(that.getUrl(\"qx/test/script.js\"));\n      };\n\n      this.request();\n      this.wait();\n    },\n\n    //\n    // Event handlers\n    //\n\n    \"test: call onload\": function() {\n      var that = this;\n\n      this.req.onload = function() {\n        that.resume(function() {});\n      };\n\n      this.request();\n      this.wait();\n    },\n\n    // Error handling\n\n    \"test: call onerror on network error\": function() {\n      var that = this;\n\n      // For legacy IEs, timeout needs to be lower than browser timeout\n      // or false \"load\" is fired. Alternatively, a false \"load\"\n      // can be identified by checking status property.\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n          qx.core.Environment.get(\"browser.documentmode\") < 9) {\n        this.req.timeout = 2000;\n      }\n\n      this.req.onerror = function() {\n        that.resume(function() {});\n      };\n\n      this.request(\"http://fail.tld\");\n      this.wait(15000 + 100);\n    },\n\n    \"test: call onloadend on network error\": function() {\n      var that = this;\n\n      this.req.onloadend = function() {\n        that.resume(function() {});\n      };\n\n      this.request(\"http://fail.tld\");\n      this.wait(15000 + 100);\n    },\n\n    request: function(customUrl) {\n      this.req.open(\"GET\", customUrl || this.url);\n      this.req.send();\n    },\n\n    skip: function(msg) {\n      throw new qx.dev.unit.RequirementError(null, msg);\n    }\n\n  }\n});\n"
  ]
}