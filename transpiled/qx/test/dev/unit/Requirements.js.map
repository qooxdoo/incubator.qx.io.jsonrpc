{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/dev/unit/Requirements.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MRequirements",
    "members",
    "hasFulfilledReq",
    "hasUnfulfilledReq",
    "testRequirementPass",
    "require",
    "ex",
    "fail",
    "testRequirementFail",
    "self",
    "assertException",
    "RequirementError",
    "testMissingCheck",
    "Error",
    "testEnvironmentPass",
    "core",
    "Environment",
    "add",
    "getChecks",
    "testEnvironmentFail",
    "testEnvironmentAsync",
    "getAsyncChecks",
    "test",
    "Requirements"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (d_wagner)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.dev.unit.Requirements\", {\n\n  extend : qx.dev.unit.TestCase,\n\n  include : [qx.dev.unit.MRequirements],\n\n  members :{\n\n    hasFulfilledReq : function()\n    {\n      return true;\n    },\n\n    hasUnfulfilledReq : function()\n    {\n      return false;\n    },\n\n    testRequirementPass : function()\n    {\n      try {\n        this.require([\"fulfilledReq\"]);\n      }\n      catch(ex) {\n        this.fail(\"Check for fulfilled requirement failed!\");\n      }\n    },\n\n    testRequirementFail : function()\n    {\n      var self = this;\n      this.assertException(function() {\n        self.require([\"fulfilledReq\", \"unfulfilledReq\"]);\n      }, qx.dev.unit.RequirementError);\n    },\n\n    testMissingCheck : function()\n    {\n      var self = this;\n      this.assertException(function() {\n        self.require([\"monkeyCheese\"]);\n      }, Error, /Unable to verify requirement/);\n    },\n\n    testEnvironmentPass : function()\n    {\n      qx.core.Environment.add(\"qx.test.requirement.syncTrue\", function() {\n        return true;\n      });\n\n      try {\n        this.require([\"fulfilledReq\", \"qx.test.requirement.syncTrue\"]);\n      }\n      catch(ex) {\n        this.fail(\"Check for environment key failed!\");\n      }\n\n      delete qx.core.Environment.getChecks()[\"qx.test.requirement.syncTrue\"];\n    },\n\n    testEnvironmentFail : function()\n    {\n      qx.core.Environment.add(\"qx.test.requirement.syncFalse\", function() {\n        return false;\n      });\n\n      var self = this;\n      this.assertException(function() {\n        self.require([\"fulfilledReq\", \"qx.test.requirement.syncFalse\"]);\n      }, qx.dev.unit.RequirementError);\n\n      delete qx.core.Environment.getChecks()[\"qx.test.requirement.syncFalse\"];\n    },\n\n    testEnvironmentAsync : function()\n    {\n      qx.core.Environment.getAsyncChecks()[\"qx.test.requirement.async\"] = function() {\n        return false;\n      };\n      var self = this;\n      this.assertException(function() {\n        self.require([\"qx.test.requirement.async\"]);\n      }, Error, /Asynchronous environment checks are not supported/);\n\n      delete qx.core.Environment.getAsyncChecks()[\"qx.test.requirement.async\"];\n    }\n\n    /* Disabled until we've come up with a solution for bug #5516\n    testEnvironmentNonBoolean : function()\n    {\n      var self = this;\n      this.assertException(function() {\n        self.require([\"browser.name\"]);\n      }, Error, /value is not boolean/);\n    }\n    */\n  }\n});"
  ]
}