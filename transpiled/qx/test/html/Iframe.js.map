{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/html/Iframe.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "include",
    "MMock",
    "members",
    "__doc",
    "__frame",
    "__origin",
    "__destSource",
    "__alredyRun",
    "setUp",
    "helper",
    "document",
    "createElement",
    "body",
    "appendChild",
    "html",
    "Root",
    "setAttribute",
    "frame",
    "Iframe",
    "add",
    "window",
    "location",
    "protocol",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "source",
    "addListener",
    "resume",
    "element",
    "getDomElement",
    "currentUrl",
    "bom",
    "queryCurrentUrl",
    "src",
    "getSource",
    "blank",
    "msg",
    "actual",
    "assertString",
    "assertMatch",
    "setSource",
    "Element",
    "flush",
    "wait",
    "addListenerOnce",
    "origSetSource",
    "url",
    "e",
    "fail",
    "skip",
    "elem",
    "spy",
    "assertCalledWith",
    "tearDown",
    "div",
    "getElementById",
    "removeChild",
    "getSandbox",
    "restore",
    "dispose",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n************************************************************************ */\n/**\n *\n * @asset(qx/static/blank.html)\n */\n\nqx.Class.define(\"qx.test.html.Iframe\",\n{\n  extend : qx.dev.unit.TestCase,\n  include : qx.dev.unit.MMock,\n\n  members :\n  {\n\n    __doc: null,\n    __frame: null,\n    __origin: null,\n    __destSource: null,\n\n    __alredyRun : false,\n\n    setUp : function()\n    {\n      var helper = document.createElement(\"div\");\n      document.body.appendChild(helper);\n\n      this.__doc = new qx.html.Root(helper);\n      this.__doc.setAttribute(\"id\", \"doc\");\n\n      var frame = this.__frame = new qx.html.Iframe();\n      this.__doc.add(frame);\n\n      // Source in parent directory is not of same origin\n      // when using file protocol â€“ use non-existing file\n      // in same directory instead\n      if (window.location.protocol === \"file:\") {\n        this.__destSource = \"blank.html\";\n      } else {\n        this.__destSource = qx.util.ResourceManager.getInstance().toUri(qx.core.Environment.get(\"qx.blankpage\"));\n      }\n    },\n\n    \"test: set source to URL with same origin\": function() {\n      var frame = this.__frame;\n\n      var source = this.__destSource;\n\n      frame.addListener(\"load\", function() {\n        this.resume(function() {\n          var element = frame.getDomElement();\n          var currentUrl = qx.bom.Iframe.queryCurrentUrl(element) || element.src;\n          var source = frame.getSource();\n          var blank = \"\\/blank.html$\";\n\n          var msg = function(actual) {\n            return \"Must be \" + currentUrl + \", but was \" + actual;\n          };\n\n          // BOM\n          this.assertString(currentUrl);\n          this.assertMatch(currentUrl, blank, msg(currentUrl));\n\n          // HTML\n          this.assertString(source);\n          this.assertMatch(source, blank, msg(source));\n        });\n      }, this);\n\n      frame.setSource(source);\n      qx.html.Element.flush();\n\n      this.wait();\n    },\n\n    \"test: update source on navigate\": function() {\n      var frame = this.__frame;\n\n      // As soon as the original frame has loaded,\n      // fake user-action and browse\n      var source = this.__destSource;\n      frame.addListenerOnce(\"load\", function()\n      {\n        qx.html.Element.flush();\n        qx.bom.Iframe.setSource(frame.getDomElement(), source);\n      });\n\n      qx.html.Element.flush();\n\n      // Give changed frame some time to load\n      this.wait(500, function() {\n        this.assertMatch(frame.getSource(), \"\\/blank.html$\");\n      }, this);\n    },\n\n    \"test: skip setting source if frame is already on URL\": function() {\n      var frame = this.__frame;\n\n      // As soon as the original frame has loaded,\n      // fake user-action and browse\n      var source = this.__destSource;\n      frame.addListenerOnce(\"load\", function() {\n        qx.bom.Iframe.setSource(frame.getDomElement(), source);\n      });\n      qx.html.Element.flush();\n\n      var origSetSource;\n      frame.addListener(\"load\", function() {\n\n        origSetSource = qx.bom.Iframe.setSource;\n        qx.bom.Iframe.setSource = function() {\n          throw \"setSource\";\n        };\n\n        try {\n          var url = qx.bom.Iframe.queryCurrentUrl(frame.getDomElement());\n          frame.setSource(url);\n          qx.html.Element.flush();\n          this.resume();\n        } catch(e) {\n          this.resume(function() {\n            this.fail(\"Setting same URL must be skipped\");\n          });\n        }\n\n        qx.bom.Iframe.setSource = origSetSource;\n\n      }, this);\n\n      this.wait();\n    },\n\n    \"test: set null source if frame is cross-origin\": function() {\n      var frame = this.__frame;\n\n      if (this.__alredyRun) {\n        this.skip(\"This test can only run once. Reload to run again.\");\n      }\n\n      // On cross origin\n      frame.addListener(\"load\", function() {\n        this.resume(function() {\n          var elem = frame.getDomElement();\n          this.spy(qx.bom.Iframe, \"setSource\");\n          frame.setSource(null);\n\n          this.assertCalledWith(qx.bom.Iframe.setSource, elem, null);\n        });\n      }, this);\n      frame.setSource(\"http://example.com\");\n\n      this.__alredyRun = true;\n      this.wait();\n    },\n\n    tearDown : function()\n    {\n      qx.html.Element.flush();\n      var div = document.getElementById(\"doc\");\n      document.body.removeChild(div);\n\n      this.getSandbox().restore();\n      this.__frame.dispose();\n      this.__frame = null;\n    }\n  }\n});\n"
  ]
}