{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/util/Request.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "location",
    "window",
    "origin",
    "protocol",
    "host",
    "isCrossDomain",
    "util",
    "Request",
    "assertTrue",
    "hostname",
    "assertFalse",
    "isSuccessful",
    "isMethod",
    "undefined",
    "methodAllowsRequestBody",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.Request\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    \"test: isCrossDomain() returns true with cross-domain URL\": function() {\n      var location = window.location,\n          origin = location.protocol + \"//\" + location.host,\n          isCrossDomain = qx.util.Request.isCrossDomain;\n\n      this.assertTrue(isCrossDomain(\"http://cross.domain\"), \"cross\");\n      this.assertTrue(isCrossDomain(location.protocol + \"//\" + location.hostname + \":123456\"), \"port\");\n      this.assertTrue(isCrossDomain(\"foobar\" + \"://\" + location.host), \"protocol\");\n    },\n\n    \"test: isCrossDomain() returns false with same-origin URL\": function() {\n      var location = window.location,\n          origin = location.protocol + \"//\" + location.host,\n          isCrossDomain = qx.util.Request.isCrossDomain;\n\n      this.assertFalse(isCrossDomain(origin));\n      this.assertFalse(isCrossDomain(\"data.json\"), \"simple url\");\n      this.assertFalse(isCrossDomain(\"/data.json\"), \"absolute url\");\n      this.assertFalse(isCrossDomain(\"../data.json\"), \"relative url\");\n      this.assertFalse(isCrossDomain(\"../foo-bar/meep.in/data.json\"), \"strange url\");\n    },\n\n    \"test: isSuccessful() returns true with successful HTTP status\": function() {\n      var isSuccessful = qx.util.Request.isSuccessful;\n\n      this.assertTrue(isSuccessful(200));\n      this.assertTrue(isSuccessful(304));\n\n      this.assertFalse(isSuccessful(404));\n      this.assertFalse(isSuccessful(500));\n    },\n\n    \"test: isMethod() returns true if HTTP method is known\": function() {\n      var isMethod = qx.util.Request.isMethod;\n\n      this.assertTrue(isMethod(\"GET\"));\n      this.assertTrue(isMethod(\"POST\"));\n\n      this.assertFalse(isMethod(1));\n      this.assertFalse(isMethod(null));\n      this.assertFalse(isMethod(undefined));\n      this.assertFalse(isMethod([]));\n      this.assertFalse(isMethod({}));\n    },\n\n    \"test: methodAllowsRequestBody() returns false when GET\": function() {\n      this.assertFalse(qx.util.Request.methodAllowsRequestBody(\"GET\"));\n    },\n\n    \"test: methodAllowsRequestBody() returns true when POST\": function() {\n      this.assertTrue(qx.util.Request.methodAllowsRequestBody(\"POST\"));\n    }\n  }\n});\n"
  ]
}