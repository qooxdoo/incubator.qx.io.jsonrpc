{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/util/Uri.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "Uri",
    "util",
    "url",
    "params",
    "expected",
    "result",
    "appendParamsToUrl",
    "assertEquals",
    "testToParameter",
    "obj",
    "affe",
    "maus",
    "str",
    "toParameter",
    "testToParameterUmlauts",
    "testToParameterSpaces",
    "testToParameterSpacesPost",
    "testToParameterArray",
    "id",
    "assertTrue",
    "test",
    "undefined",
    "parseUri",
    "protocol",
    "host",
    "port",
    "relative",
    "anchor",
    "query",
    "user"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.Uri\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    setUp : function() {\n      this.Uri = qx.util.Uri;\n    },\n\n    \"test: appendParamsToUrl() with string\": function() {\n      var url = \"http://example.com/path\",\n          params = \"affe=true&maus=false\",\n          expected = \"http://example.com/path?affe=true&maus=false\",\n          result = this.Uri.appendParamsToUrl(url, params);\n\n      this.assertEquals(expected, result);\n    },\n\n\n    testToParameter : function()\n    {\n      var obj = {affe: true, maus: false};\n      var str = qx.util.Uri.toParameter(obj);\n      this.assertEquals(\"affe=true&maus=false\", str);\n    },\n\n    testToParameterUmlauts : function()\n    {\n      var obj = {\"äffe\": \"jøah\", \"maüs\": \"nö\"};\n      var str = qx.util.Uri.toParameter(obj);\n      this.assertEquals(\"%C3%A4ffe=j%C3%B8ah&ma%C3%BCs=n%C3%B6\", str);\n    },\n\n    testToParameterSpaces : function()\n    {\n      var obj = {\"a f f e\": true};\n      var str = qx.util.Uri.toParameter(obj);\n      this.assertEquals(\"a%20f%20f%20e=true\", str);\n    },\n\n    testToParameterSpacesPost : function()\n    {\n      var obj = {\"a f  f e\": \"j a\"};\n      var str = qx.util.Uri.toParameter(obj, true);\n      this.assertEquals(\"a+f++f+e=j+a\", str);\n    },\n\n    testToParameterArray : function() {\n      var obj = {id: [1,2,3]};\n      var str = qx.util.Uri.toParameter(obj);\n      this.assertEquals(\"id=1&id=2&id=3\", str);\n    },\n\n\n    \"test: appendParamsToUrl() with string when existing query\": function() {\n      var url = \"http://example.com/path?giraffe=true\",\n          params = \"affe=true&maus=false\",\n          expected = \"http://example.com/path?giraffe=true&affe=true&maus=false\",\n          result = this.Uri.appendParamsToUrl(url, params);\n\n      this.assertEquals(expected, result);\n    },\n\n    \"test: appendParamsToUrl() with map\": function() {\n      var url = \"http://example.com/path\",\n          params = {affe: true, maus: false},\n          result = this.Uri.appendParamsToUrl(url, params);\n\n      this.assertTrue(/^http.*example.com\\/path/.test(result));\n      this.assertTrue(/affe=true/.test(result));\n      this.assertTrue(/maus=false/.test(result));\n    },\n\n    \"test: appendParamsToUrl() with undefined\": function() {\n      var url = \"http://example.com/path\",\n          params = undefined,\n          result = this.Uri.appendParamsToUrl(url, params);\n\n      this.assertEquals(url, result);\n    },\n\n    \"test: appendParamsToUrl() with empty map\": function() {\n      var url = \"http://example.com/path\",\n          params = {},\n          result = this.Uri.appendParamsToUrl(url, params);\n\n      this.assertEquals(url, result);\n    },\n\n    \"test: parseUri()\": function() {\n      var url = \"http://www.example.com:80/foo/bar?affe=true#here\",\n          result = this.Uri.parseUri(url);\n\n      // Some integration tests, parseUri is better covered here\n      // http://stevenlevithan.com/demo/parseuri/js/\n      this.assertEquals(\"http\", result.protocol);\n      this.assertEquals(\"www.example.com\", result.host);\n      this.assertEquals(\"80\", result.port);\n      this.assertEquals(\"/foo/bar?affe=true#here\", result.relative);\n      this.assertEquals(\"here\", result.anchor);\n    },\n\n    \"test: parseUri() with ipv6 loopback address\": function() {\n        var url = \"http://[::1]:80/foo/bar?affe=true#here\",\n            result = this.Uri.parseUri(url);\n\n        // Some integration tests, parseUri is better covered here\n        // http://stevenlevithan.com/demo/parseuri/js/\n        this.assertEquals(\"http\", result.protocol);\n        this.assertEquals(\"[::1]\", result.host);\n        this.assertEquals(\"80\", result.port);\n        this.assertEquals(\"/foo/bar?affe=true#here\", result.relative);\n        this.assertEquals(\"here\", result.anchor);\n      },\n\n      \"test: parseUri() with ipv6 address\": function() {\n          var url = \"http://[FE80:0000:0000:0000:0202:B3FF:FE1E:8329]:80/foo/bar?affe=true#here\",\n              result = this.Uri.parseUri(url);\n\n          // Some integration tests, parseUri is better covered here\n          // http://stevenlevithan.com/demo/parseuri/js/\n          this.assertEquals(\"http\", result.protocol);\n          this.assertEquals(\"[FE80:0000:0000:0000:0202:B3FF:FE1E:8329]\", result.host);\n          this.assertEquals(\"80\", result.port);\n          this.assertEquals(\"/foo/bar?affe=true#here\", result.relative);\n          this.assertEquals(\"here\", result.anchor);\n    },\n\n    \"test: parseUri() with at-sign in query\": function() {\n        var url = \"http://www.example.com/foo/bar?separator=@\",\n            result = this.Uri.parseUri(url);\n\n        this.assertEquals(\"http\", result.protocol);\n        this.assertEquals(\"www.example.com\", result.host);\n        this.assertEquals(\"/foo/bar?separator=@\", result.relative);\n        this.assertEquals(\"separator=@\", result.query);\n    },\n\n    \"test: parseUri() with user name in domain\": function() {\n        var url = \"http://userid@www.example.com/foo/bar\",\n            result = this.Uri.parseUri(url);\n\n        this.assertEquals(\"http\", result.protocol);\n        this.assertEquals(\"www.example.com\", result.host);\n        this.assertEquals(\"/foo/bar\", result.relative);\n        this.assertEquals(\"userid\", result.user);\n    }\n\n  }\n});\n"
  ]
}