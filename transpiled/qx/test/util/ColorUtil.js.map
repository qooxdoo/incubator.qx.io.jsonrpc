{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/util/ColorUtil.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testRgbToRgbString",
    "assertEquals",
    "util",
    "ColorUtil",
    "rgbToRgbString",
    "testCssStringToRgb",
    "cssStringToRgb",
    "testHex3StringToHex6String",
    "hex3StringToHex6String",
    "rgbToHexString",
    "hexStringToRgb",
    "testRgbToHexString",
    "testStringToRgbString",
    "stringToRgbString",
    "testScale",
    "scale",
    "red",
    "green",
    "blue",
    "testAdjust",
    "adjust",
    "alpha",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Jonathan Wei√ü (jonathan_rass)\n     * Christian Hagendorn (cs)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.ColorUtil\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n\n    testRgbToRgbString : function()\n    {\n      this.assertEquals(\"rgba(255,0,0,1)\", qx.util.ColorUtil.rgbToRgbString([255, 0, 0, 1]));\n      this.assertEquals(\"rgba(255,0,0,0.5)\", qx.util.ColorUtil.rgbToRgbString([255, 0, 0, 0.5]));\n      this.assertEquals(\"rgba(255,0,0,0)\", qx.util.ColorUtil.rgbToRgbString([255, 0, 0, 0]));\n      this.assertEquals(\"rgb(255,0,0)\", qx.util.ColorUtil.rgbToRgbString([255, 0, 0]));\n    },\n\n    testCssStringToRgb : function()\n    {\n      this.assertEquals(\"255,0,0\", qx.util.ColorUtil.cssStringToRgb(\"rgba(255,0,0,1)\"));\n      this.assertEquals(\"201,23,120,0.3\", qx.util.ColorUtil.cssStringToRgb(\"rgba(201,23,120,0.3)\"));\n\n      this.assertEquals(\"255,0,0\", qx.util.ColorUtil.cssStringToRgb(\"rgb(255,0,0)\"));\n      this.assertEquals(\"201,23,120\", qx.util.ColorUtil.cssStringToRgb(\"rgb(201,23,120)\"));\n    },\n\n\n    testHex3StringToHex6String : function()\n    {\n      this.assertEquals(\"#FFFFFF\", qx.util.ColorUtil.hex3StringToHex6String(\"#fff\"));\n      this.assertEquals(\"#ffff\", qx.util.ColorUtil.hex3StringToHex6String(\"#ffff\"));\n      this.assertEquals(\"#ffffffe1\", qx.util.ColorUtil.hex3StringToHex6String(\"#ffffffe1\"));\n      this.assertEquals(\"#FFFFFFA1\", qx.util.ColorUtil.rgbToHexString(qx.util.ColorUtil.hexStringToRgb(\"#ffFFffa1\")));\n      this.assertEquals(\"#FFFFFFEE\", qx.util.ColorUtil.rgbToHexString(qx.util.ColorUtil.hexStringToRgb(\"#fffe\")));\n    },\n\n\n    testRgbToHexString : function()\n    {\n      this.assertEquals(\"#FFFFFF\", qx.util.ColorUtil.rgbToHexString([255, 255, 255]));\n      this.assertEquals(\"#FFFFFF\", qx.util.ColorUtil.rgbToHexString([255, 255, 255,1]));\n      this.assertEquals(\"#000000\", qx.util.ColorUtil.rgbToHexString([0, 0, 0]));\n      this.assertEquals(\"#00000066\", qx.util.ColorUtil.rgbToHexString([0, 0, 0,0.4]));\n    },\n\n    testStringToRgbString : function()\n    {\n      this.assertEquals(\"rgba(0,0,0,0.5)\", qx.util.ColorUtil.stringToRgbString(\"rgba(0,0,0,0.5)\"));\n      this.assertEquals(\"rgb(-1,-1,-1)\", qx.util.ColorUtil.stringToRgbString(\"rgba(0,0,0,0)\"));\n      this.assertEquals(\"rgba(11,0,0,0.5)\", qx.util.ColorUtil.stringToRgbString(\"rgba(11,0,0,0.5)\"));\n    },\n\n    testScale : function()\n    {\n      this.assertEquals(\"rgba(64,191.5,255,0.5)\", qx.util.ColorUtil.scale(\"rgba(128,128,40,0.5)\",{\n        red: -50,\n        green: 50,\n        blue: 100\n      }));\n    },\n    testAdjust : function()\n    {\n      this.assertEquals(\"rgba(65,193,33,0.6)\", qx.util.ColorUtil.adjust(\"rgba(64,194,32,0.5)\",{\n        red: 1,\n        green: -1,\n        blue: 1,\n        alpha: 0.1\n      }));\n    }\n\n  }\n});\n"
  ]
}