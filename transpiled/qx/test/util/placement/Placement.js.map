{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/util/placement/Placement.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "testEnoughSpace",
    "size",
    "width",
    "height",
    "area",
    "target",
    "left",
    "top",
    "right",
    "bottom",
    "offsets",
    "modes",
    "i",
    "length",
    "mode",
    "assertJsonEquals",
    "util",
    "placement",
    "Placement",
    "compute",
    "testRestrictedBottomKeepAlign",
    "testRestrictedTopKeepAlign",
    "testRestrictedRightKeepAlign",
    "testRestrictedLeftKeepAlign",
    "testRestrictedBottomAndTopWithBetterBottomKeepAlign",
    "testRestrictedLeftAndRightWithBetterLeftKeepAlign",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n\nqx.Class.define(\"qx.test.util.placement.Placement\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    testEnoughSpace : function()\n    {\n      var size = {width: 200, height: 300};\n      var area = {width: 1000, height: 1000};\n      var target = {left: 500, top: 500, right: 600, bottom: 550};\n      var offsets = {top: 0, left: 0, bottom: 0, right: 0};\n\n      var modes = [\"direct\", \"keep-align\", \"best-fit\"];\n      for (var i=0; i<modes.length; i++)\n      {\n        var mode = modes[i];\n\n        this.assertJsonEquals(\n          {left: 500, top: 200},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"top-left\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 450, top: 200},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"top-center\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 400, top: 200},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"top-right\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 500, top: 550},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-left\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 450, top: 550},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-center\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 400, top: 550},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-right\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 300, top: 500},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"left-top\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 300, top: 375},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"left-middle\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 300, top: 250},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"left-bottom\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 600, top: 500},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"right-top\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 600, top: 375},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"right-middle\", mode, mode),\n          mode\n        );\n\n        this.assertJsonEquals(\n          {left: 600, top: 250},\n          qx.util.placement.Placement.compute(size, area, target, offsets, \"right-bottom\", mode, mode),\n          mode\n        );\n      }\n    },\n\n\n    testRestrictedBottomKeepAlign : function()\n    {\n      var size = {width: 200, height: 300};\n      var area = {width: 1000, height: 600};\n      var target = {left: 500, top: 500, right: 600, bottom: 550};\n      var offsets = {top: 0, left: 0, bottom: 0, right: 0};\n\n      this.assertJsonEquals(\n        {left: 500, top: 200},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-left\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 450, top: 200},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-center\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 400, top: 200},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-right\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 300, top: 250},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"left-top\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 300, top: 250},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"left-middle\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 600, top: 250},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-top\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 600, top: 250},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-middle\", \"keep-align\", \"keep-align\")\n      );\n    },\n\n\n    testRestrictedTopKeepAlign : function()\n    {\n      var size = {width: 200, height: 300};\n      var area = {width: 1000, height: 1000};\n      var target = {left: 500, top: 100, right: 600, bottom: 150};\n      var offsets = {top: 0, left: 0, bottom: 0, right: 0};\n\n      this.assertJsonEquals(\n        {left: 500, top: 150},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"top-left\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 450, top: 150},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"top-center\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 400, top: 150},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"top-right\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 300, top: 100},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"left-middle\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 300, top: 100},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"left-bottom\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 600, top: 100},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-middle\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 600, top: 100},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-bottom\", \"keep-align\", \"keep-align\")\n      );\n    },\n\n\n    testRestrictedRightKeepAlign : function()\n    {\n      var size = {width: 200, height: 300};\n      var area = {width: 700, height: 1000};\n      var target = {left: 500, top: 500, right: 600, bottom: 550};\n      var offsets = {top: 0, left: 0, bottom: 0, right: 0};\n\n      this.assertJsonEquals(\n        {left: 300, top: 500},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-top\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 300, top: 375},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-middle\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 300, top: 250},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-bottom\", \"keep-align\", \"keep-align\")\n      );\n    },\n\n\n    testRestrictedLeftKeepAlign : function()\n    {\n      var size = {width: 200, height: 300};\n      var area = {width: 1000, height: 1000};\n      var target = {left: 100, top: 500, right: 200, bottom: 550};\n      var offsets = {top: 0, left: 0, bottom: 0, right: 0};\n\n      this.assertJsonEquals(\n        {left: 200, top: 500},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"left-top\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 200, top: 375},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"left-middle\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 200, top: 250},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"left-bottom\", \"keep-align\", \"keep-align\")\n      );\n    },\n\n\n    testRestrictedBottomAndTopWithBetterBottomKeepAlign : function()\n    {\n      var size = {width: 200, height: 300};\n      var area = {width: 1000, height: 440};\n      var target = {left: 500, top: 100, right: 600, bottom: 150};\n      var offsets = {top: 10, bottom: 20, left: 0, right: 0};\n\n      this.assertJsonEquals(\n        {left: 500, top: 160},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-left\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 450, top: 160},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-center\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 500, top: 160},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"top-left\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 450, top: 160},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"top-center\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 600, top: 110},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-top\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 600, top: 110},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-middle\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 600, top: 110},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-bottom\", \"keep-align\", \"keep-align\")\n      );\n    },\n\n\n    testRestrictedLeftAndRightWithBetterLeftKeepAlign : function()\n    {\n      var size = {width: 200, height: 300};\n      var area = {width: 650, height: 1000};\n      var target = {left: 500, top: 500, right: 600, bottom: 550};\n      var offsets = {top: 0, bottom: 0, left: 10, right: 20};\n\n      this.assertJsonEquals(\n        {left: 280, top: 500},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"left-top\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 280, top: 375},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"left-middle\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 280, top: 500},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-top\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 280, top: 375},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"right-middle\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 380, top: 550},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-left\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 380, top: 550},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-center\", \"keep-align\", \"keep-align\")\n      );\n\n      this.assertJsonEquals(\n        {left: 380, top: 550},\n        qx.util.placement.Placement.compute(size, area, target, offsets, \"bottom-right\", \"keep-align\", \"keep-align\")\n      );\n    }\n  }\n});\n"
  ]
}