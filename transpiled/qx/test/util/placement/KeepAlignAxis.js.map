{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/test/util/placement/KeepAlignAxis.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "dev",
    "unit",
    "TestCase",
    "members",
    "setUp",
    "axis",
    "util",
    "placement",
    "KeepAlignAxis",
    "tearDown",
    "testEnoughSpace",
    "size",
    "target",
    "start",
    "end",
    "offsets",
    "areaSize",
    "assertEquals",
    "computeStart",
    "testNotEnoughSpaceStart",
    "testNotEnoughSpaceEnd",
    "testNotEnoughSpaceBothSides",
    "test"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\nqx.Class.define(\"qx.test.util.placement.KeepAlignAxis\",\n{\n  extend : qx.dev.unit.TestCase,\n\n  members :\n  {\n    setUp : function() {\n      this.axis = qx.util.placement.KeepAlignAxis;\n    },\n\n    tearDown : function() {\n      delete this.axis;\n    },\n\n    testEnoughSpace : function()\n    {\n      var size = 50;\n      var target = {start: 500, end: 600};\n      var offsets = {start: 10, end: 20};\n      var areaSize = 1000;\n\n      this.assertEquals(\n        430,\n        this.axis.computeStart(size, target, offsets, areaSize, \"edge-start\")\n      );\n\n      this.assertEquals(\n        610,\n        this.axis.computeStart(size, target, offsets, areaSize, \"edge-end\")\n      );\n\n      this.assertEquals(\n        510,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-start\")\n      );\n\n      this.assertEquals(\n        535,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-center\")\n      );\n\n      this.assertEquals(\n        530,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-end\")\n      );\n    },\n\n\n    testNotEnoughSpaceStart : function()\n    {\n      var size = 260;\n      var target = {start: 30, end: 200};\n      var offsets = {start: 10, end: 20};\n      var areaSize = 1000;\n\n      this.assertEquals(\n        210,\n        this.axis.computeStart(size, target, offsets, areaSize, \"edge-start\")\n      );\n\n      this.assertEquals(\n        210,\n        this.axis.computeStart(size, target, offsets, areaSize, \"edge-end\")\n      );\n\n      this.assertEquals(\n        40,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-start\")\n      );\n\n      this.assertEquals(\n        40,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-center\")\n      );\n\n      this.assertEquals(\n        40,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-end\")\n      );\n    },\n\n\n    testNotEnoughSpaceEnd : function()\n    {\n      var size = 290;\n      var target = {start: 300, end: 400};\n      var offsets = {start: 10, end: 20};\n      var areaSize = 500;\n\n      this.assertEquals(\n        0,\n        this.axis.computeStart(size, target, offsets, areaSize, \"edge-start\")\n      );\n\n      this.assertEquals(\n        0,\n        this.axis.computeStart(size, target, offsets, areaSize, \"edge-end\")\n      );\n\n      this.assertEquals(\n        90,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-start\")\n      );\n\n      this.assertEquals(\n        90,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-center\")\n      );\n\n      this.assertEquals(\n        90,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-end\")\n      );\n    },\n\n\n    testNotEnoughSpaceBothSides : function()\n    {\n      var size = 250;\n      var target = {start: 50, end: 100};\n      var offsets = {start: 10, end: 20};\n      var areaSize = 200;\n\n      this.assertEquals(\n        110,\n        this.axis.computeStart(size, target, offsets, areaSize, \"edge-start\")\n      );\n\n      this.assertEquals(\n        110,\n        this.axis.computeStart(size, target, offsets, areaSize, \"edge-end\")\n      );\n\n      this.assertEquals(\n        60,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-start\")\n      );\n\n      this.assertEquals(\n        60,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-center\")\n      );\n\n      this.assertEquals(\n        60,\n        this.axis.computeStart(size, target, offsets, areaSize, \"align-end\")\n      );\n    }\n  }\n});\n"
  ]
}