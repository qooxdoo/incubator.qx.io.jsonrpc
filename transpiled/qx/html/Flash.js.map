{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/html/Flash.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "html",
    "Element",
    "construct",
    "styles",
    "attributes",
    "__params",
    "__variables",
    "__attributes",
    "members",
    "__flash",
    "_createDomElement",
    "dom",
    "create",
    "createFlash",
    "bom",
    "Flash",
    "getDomElement",
    "getAttributes",
    "setSource",
    "value",
    "core",
    "Assert",
    "assertString",
    "Error",
    "setAttribute",
    "setId",
    "getVariables",
    "setVariables",
    "assertMap",
    "key",
    "arguments",
    "length",
    "lang",
    "Type",
    "isBoolean",
    "isString",
    "indexOf",
    "undefined",
    "getParams",
    "setParam",
    "getFlashElement",
    "destruct",
    "destroy"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,eAAhB,EACA;AACEC,IAAAA,MAAM,EAAGN,EAAE,CAACO,IAAH,CAAQC,OADnB;;AAIE;AACF;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAG,mBAASC,MAAT,EAAiBC,UAAjB,EACZ;AACE,6CAAqB,KAArB,EAA4BD,MAA5B,EAAoCC,UAApC;AAEA,WAAKC,iBAAL,GAAgB,EAAhB;AACA,WAAKC,oBAAL,GAAmB,EAAnB;AACA,WAAKC,qBAAL,GAAoB,EAApB;AACD,KAxBH;;AA2BE;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EACP;AAEE;AACAH,MAAAA,iBAAQ,EAAG,IAHb;;AAKE;AACAE,MAAAA,qBAAY,EAAG,IANjB;;AAQE;AACAD,MAAAA,oBAAW,EAAG,IAThB;;AAWE;AACAG,MAAAA,gBAAO,EAAG,IAZZ;AAcE;AACAC,MAAAA,iBAAiB,EAAG,6BAAW;AAC7B,eAAOjB,EAAE,CAACkB,GAAH,CAAOV,OAAP,CAAeW,MAAf,CAAsB,KAAtB,CAAP;AACD,OAjBH;;AAmBE;AACJ;AACA;AACA;AACIC,MAAAA,WAAW,EAAG,uBACd;AACE,aAAKJ,gBAAL,GAAehB,EAAE,CAACqB,GAAH,CAAOC,KAAP,CAAaH,MAAb,CAAoB,KAAKI,aAAL,EAApB,EAA0C,KAAKC,aAAL,EAA1C,EACoB,KAAKX,oBADzB,EACsC,KAAKD,iBAD3C,CAAf;AAED,OA3BH;;AA6BE;AACJ;AACA;AACA;AACA;AACIa,MAAAA,SAAS,EAAG,mBAASC,KAAT,EACZ;AAC2C;AACvC1B,UAAAA,EAAE,CAAC2B,IAAH,CAAQC,MAAR,CAAeC,YAAf,CAA4BH,KAA5B,EAAmC,4BAAnC;AACD;;AAED,YAAI,KAAKV,gBAAT,EAAkB;AAChB,gBAAM,IAAIc,KAAJ,CAAU,sDAAV,CAAN;AACD;;AAED,aAAKC,YAAL,CAAkB,OAAlB,EAA2BL,KAA3B;AACD,OA7CH;;AA+CE;AACJ;AACA;AACA;AACA;AACIM,MAAAA,KAAK,EAAG,eAASN,KAAT,EACR;AAC2C;AACvC1B,UAAAA,EAAE,CAAC2B,IAAH,CAAQC,MAAR,CAAeC,YAAf,CAA4BH,KAA5B,EAAmC,4BAAnC;AACD;;AAED,YAAI,KAAKV,gBAAT,EAAkB;AAChB,gBAAM,IAAIc,KAAJ,CAAU,kDAAV,CAAN;AACD;;AAED,aAAKC,YAAL,CAAkB,IAAlB,EAAwBL,KAAxB;AACD,OA/DH;;AAiEE;AACJ;AACA;AACA;AACA;AACA;AACIO,MAAAA,YAAY,EAAG,wBAAW;AACxB,eAAO,KAAKpB,oBAAZ;AACD,OAzEH;;AA2EE;AACJ;AACA;AACA;AACA;AACA;AACIqB,MAAAA,YAAY,EAAG,sBAASR,KAAT,EACf;AAC2C;AACvC1B,UAAAA,EAAE,CAAC2B,IAAH,CAAQC,MAAR,CAAeO,SAAf,CAAyBT,KAAzB,EAAgC,4BAAhC;AACD;;AAED,YAAI,KAAKV,gBAAT,EAAkB;AAChB,gBAAM,IAAIc,KAAJ,CAAU,yDAAV,CAAN;AACD;;AAED,aAAKjB,oBAAL,GAAmBa,KAAnB;AACD,OA5FH;;AA8FE;AACJ;AACA;AACA;AACA;AACIF,MAAAA,aAAa,EAAG,yBAAY;AAC1B,eAAO,KAAKV,qBAAZ;AACD,OArGH;;AAuGE;AACJ;AACA;AACA;AACA;AACA;AACIiB,MAAAA,YAAY,EAAG,sBAAUK,GAAV,EAAeV,KAAf,EACf;AAC2C;AACvC1B,UAAAA,EAAE,CAAC2B,IAAH,CAAQC,MAAR,CAAeC,YAAf,CAA4BO,GAA5B,EAAiC,0BAAjC;;AAEA,cAAIC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBZ,KAAK,KAAK,IAAtC,EAA4C;AAC1C,gBAAI,CAAC1B,EAAE,CAACuC,IAAH,CAAQC,IAAR,CAAaC,SAAb,CAAuBf,KAAvB,CAAD,IAAkC,CAAC1B,EAAE,CAACuC,IAAH,CAAQC,IAAR,CAAaE,QAAb,CAAsBhB,KAAtB,CAAvC,EAAqE;AACnE,oBAAM,IAAII,KAAJ,CAAU,6DAAV,CAAN;AACD;AACF;AACF;;AAED,YAAIM,GAAG,CAACO,OAAJ,CAAY,IAAZ,MAAsB,CAA1B,EAA6B;AAC3B,+DAAqBP,GAArB,EAA0BV,KAA1B;AACD,SAFD,MAGK,IAAI,KAAKV,gBAAT,EAAkB;AACrB,gBAAM,IAAIc,KAAJ,CAAU,0DAAV,CAAN;AACD;;AAED,YAAIJ,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKkB,SAAhC,EAA2C;AACzC,iBAAO,KAAK9B,qBAAL,CAAkBsB,GAAlB,CAAP;AACD,SAFD,MAEO;AACL,eAAKtB,qBAAL,CAAkBsB,GAAlB,IAAyBV,KAAzB;AACD;AACF,OArIH;;AAuIE;AACJ;AACA;AACA;AACA;AACImB,MAAAA,SAAS,EAAG,qBAAW;AACrB,eAAO,KAAKjC,iBAAZ;AACD,OA9IH;;AAgJE;AACJ;AACA;AACA;AACA;AACA;AACIkC,MAAAA,QAAQ,EAAG,kBAASV,GAAT,EAAcV,KAAd,EACX;AAC2C;AACvC1B,UAAAA,EAAE,CAAC2B,IAAH,CAAQC,MAAR,CAAeC,YAAf,CAA4BO,GAA5B,EAAiC,0BAAjC;;AAEA,cAAIC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBZ,KAAK,KAAK,IAAtC,EAA4C;AAC1C,gBAAI,CAAC1B,EAAE,CAACuC,IAAH,CAAQC,IAAR,CAAaC,SAAb,CAAuBf,KAAvB,CAAD,IAAkC,CAAC1B,EAAE,CAACuC,IAAH,CAAQC,IAAR,CAAaE,QAAb,CAAsBhB,KAAtB,CAAvC,EAAqE;AACnE,oBAAM,IAAII,KAAJ,CAAU,6DAAV,CAAN;AACD;AACF;AACF;;AAED,YAAI,KAAKd,gBAAT,EAAkB;AAChB,gBAAM,IAAIc,KAAJ,CAAU,sDAAV,CAAN;AACD;;AAED,YAAIJ,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKkB,SAAhC,EAA2C;AACzC,iBAAO,KAAKhC,iBAAL,CAAcwB,GAAd,CAAP;AACD,SAFD,MAEO;AACL,eAAKxB,iBAAL,CAAcwB,GAAd,IAAqBV,KAArB;AACD;AACF,OA3KH;;AA6KE;AACJ;AACA;AACA;AACA;AACIqB,MAAAA,eAAe,EAAG,2BAAW;AAC3B,eAAO,KAAK/B,gBAAZ;AACD;AApLH,KAlCF;;AA2NE;AACF;AACA;AACA;AACA;AAEEgC,IAAAA,QAAQ,EAAG,oBACX;AACE,UAAI,KAAKhC,gBAAT,EAAkB;AAChBhB,QAAAA,EAAE,CAACqB,GAAH,CAAOC,KAAP,CAAa2B,OAAb,CAAqB,KAAKjC,gBAA1B;AACD;;AAED,WAAKJ,iBAAL,GAAgB,KAAKC,oBAAL,GAAmB,KAAKC,qBAAL,GAAoB,IAAvD;AACD;AAxOH,GADA;AAzBAd,EAAAA,EAAE,CAACO,IAAH,CAAQe,KAAR,CAAcnB,aAAd,GAA8BA,aAA9B",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * Managed wrapper for the HTML Flash tag.\n * \n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.html.Flash\",\n{\n  extend : qx.html.Element,\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  /**\n   * @param styles {Map?null} optional map of CSS styles, where the key is the name\n   *    of the style and the value is the value to use.\n   * @param attributes {Map?null} optional map of element attributes, where the\n   *    key is the name of the attribute and the value is the value to use.\n   */\n  construct : function(styles, attributes)\n  {\n    this.base(arguments, \"div\", styles, attributes);\n\n    this.__params = {};\n    this.__variables = {};\n    this.__attributes = {};\n  },\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n\n    /** @type {Map} The attributes for the Flash movie. */\n    __params : null,\n\n    /** @type {Map} the attributes for the object tag */\n    __attributes : null,\n\n    /** @type {Map} The <code>FlashVars</code> to pass variables to the Flash movie. */\n    __variables : null,\n\n    /** @type {qx.bom.Flash} The DOM Flash element. */\n    __flash : null,\n\n    // overridden\n    _createDomElement : function() {\n      return qx.dom.Element.create(\"div\");\n    },\n\n    /**\n     * Creates the DOM Flash movie with all needed attributes and\n     * <code>FlashVars</code>.\n     */\n    createFlash : function()\n    {\n      this.__flash = qx.bom.Flash.create(this.getDomElement(), this.getAttributes(),\n                                         this.__variables, this.__params);\n    },\n\n    /**\n     * Set the URL from the Flash movie to display.\n     *\n     * @param value {String} URL from the Flash movie.\n     */\n    setSource : function(value)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertString(value, \"Invalid attribute 'value'.\");\n      }\n\n      if (this.__flash) {\n        throw new Error(\"The source cannot be modified after initial creation\");\n      }\n\n      this.setAttribute(\"movie\", value);\n    },\n\n    /**\n     * Set the URL from the Flash movie to display.\n     *\n     * @param value {String} URL from the Flash movie.\n     */\n    setId : function(value)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertString(value, \"Invalid attribute 'value'.\");\n      }\n\n      if (this.__flash) {\n        throw new Error(\"The id cannot be modified after initial creation\");\n      }\n\n      this.setAttribute(\"id\", value);\n    },\n\n    /**\n     * Returns the <code>FlashVars</code> for the Flash movie.\n     *\n     * @return {Map} Map with key/value pairs for passing\n     *    <code>FlashVars</code>}\n     */\n    getVariables : function() {\n      return this.__variables;\n    },\n\n    /**\n     * Set the <code>FlashVars</code> to pass variables to the Flash movie.\n     *\n     * @param value {Map} Map with key/value pairs for passing\n     *    <code>FlashVars</code>\n     */\n    setVariables : function(value)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertMap(value, \"Invalid attribute 'value'.\");\n      }\n\n      if (this.__flash) {\n        throw new Error(\"The variables cannot be modified after initial creation\");\n      }\n\n      this.__variables = value;\n    },\n\n    /**\n     * Returns the attributes for the Flash DOM element.\n     *\n     * @return {Map} Attributes for the DOM element.\n     */\n    getAttributes : function () {\n      return this.__attributes;\n    },\n\n    /**\n     * Set an attribute for the Flash DOM element.\n     *\n     * @param key {String} Key name.\n     * @param value {String|Boolean|null} Value or <code>null</code> to remove attribute.\n     */\n    setAttribute : function (key, value)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertString(key, \"Invalid attribute 'key'.\");\n\n        if (arguments.length > 1 && value !== null) {\n          if (!qx.lang.Type.isBoolean(value) && !qx.lang.Type.isString(value)) {\n            throw new Error(\"Invalid attribute 'value' expected String, Boolean or null.\");\n          }\n        }\n      }\n\n      if (key.indexOf(\"$$\") === 0) {\n        this.base(arguments, key, value);\n      }\n      else if (this.__flash) {\n        throw new Error(\"The attributes cannot be modified after initial creation\");\n      }\n\n      if (value === null || value === undefined) {\n        delete this.__attributes[key];\n      } else {\n        this.__attributes[key] = value;\n      }\n    },\n\n    /**\n     * Returns the params for the Flash DOM element.\n     *\n     * @return {Map} Map with key/value pairs for the Flash DOM element.\n     */\n    getParams : function() {\n      return this.__params;\n    },\n\n    /**\n     * Set the param for the Flash DOM element, also called attribute.\n     *\n     * @param key {String} Key name.\n     * @param value {String|Boolean|null} Value or <code>null</code> to remove param\n     */\n    setParam : function(key, value)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertString(key, \"Invalid attribute 'key'.\");\n\n        if (arguments.length > 1 && value !== null) {\n          if (!qx.lang.Type.isBoolean(value) && !qx.lang.Type.isString(value)) {\n            throw new Error(\"Invalid attribute 'value' expected String, Boolean or null.\");\n          }\n        }\n      }\n\n      if (this.__flash) {\n        throw new Error(\"The params cannot be modified after initial creation\");\n      }\n\n      if (value === null || value === undefined) {\n        delete this.__params[key];\n      } else {\n        this.__params[key] = value;\n      }\n    },\n\n    /**\n     * Return the created DOM Flash movie.\n     *\n     * @return {Element|null} The DOM Flash element, otherwise <code>null</code>.\n     */\n    getFlashElement : function() {\n      return this.__flash;\n    }\n\n  },\n\n\n  /*\n   *****************************************************************************\n      DESTRUCT\n   *****************************************************************************\n   */\n\n  destruct : function()\n  {\n    if (this.__flash) {\n      qx.bom.Flash.destroy(this.__flash);\n    }\n\n    this.__params = this.__variables = this.__attributes = null;\n  }\n});\n"
  ]
}