{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/source/class/qx/data/store/Graphql.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "url",
    "query",
    "delegate",
    "properties",
    "check",
    "nullable",
    "init",
    "members",
    "_client",
    "_marshaler",
    "_delegate",
    "data",
    "store",
    "Graphql"
  ],
  "mappings": ";;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EAAyC;AACvCC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADuB;;AAGvC;AACF;AACA;AACA;AACA;AACA;AACEC,IAAAA,SAAS,EAAE,mBAAUC,GAAV,EAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AACzC;AACD,KAXsC;AAavCC,IAAAA,UAAU,EAAE;AAEV;AACJ;AACA;AACIF,MAAAA,KAAK,EAAE;AACLG,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,QAAQ,EAAE,KAFL;AAGLC,QAAAA,IAAI,EAAE;AAHD;AALG,KAb2B;AA0BvCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,IADF;AAEPC,MAAAA,UAAU,EAAE,IAFL;AAGPC,MAAAA,SAAS,EAAE,IAHJ,CAKP;;AALO;AA1B8B,GAAzC;AAxBApB,EAAAA,EAAE,CAACqB,IAAH,CAAQC,KAAR,CAAcC,OAAd,CAAsBpB,aAAtB,GAAsCA,aAAtC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger\n\n************************************************************************ */\n\n/**\n * The GraphQl data store is responsible for fetching data from a\n * server endpoint\n * NOT FUNCTIONAL YET\n *\n */\nqx.Class.define(\"qx.data.store.Graphql\", {\n  extend: qx.core.Object,\n\n  /**\n   * @param {String} url The url to the GraphQl server endpoint\n   * @param {String} query The query to be executed\n   * @param  {Object?null} delegate The delegate containing one of the methods\n   *   specified in {@link qx.data.store.IStoreDelegate}.\n   */\n  construct: function (url, query, delegate) {\n    this.base(arguments);\n  },\n\n  properties: {\n\n    /**\n     * Property for holding the loaded model instance.\n     */\n    query: {\n      check: \"String\",\n      nullable: false,\n      init: \"\"\n    },\n  },\n\n\n  members: {\n    _client: null,\n    _marshaler: null,\n    _delegate: null,\n\n    // TODO IMPLEMENT\n\n  }\n});\n"
  ]
}