{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/source/class/qx/io/jsonrpc/protocol/Batch.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "properties",
    "batch",
    "check",
    "construct",
    "setBatch",
    "data",
    "Array",
    "members",
    "add",
    "message",
    "Assert",
    "assertInstance",
    "io",
    "jsonrpc",
    "protocol",
    "Message",
    "getBatch",
    "push",
    "addRequest",
    "method",
    "params",
    "Request",
    "addNotification",
    "Notification",
    "getPromises",
    "map",
    "getPromise",
    "toObject",
    "toArray",
    "toString",
    "JSON",
    "stringify",
    "Batch"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,8BAAhB,EAA+C;AAC7CC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MAD6B;AAE7CC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAG;AACNC,QAAAA,KAAK,EAAE;AADD;AADE,KAFiC;;AAO7CC,IAAAA,SAAS,GAAG;AACV;AACA,WAAKC,QAAL,CAAc,IAAIb,EAAE,CAACc,IAAH,CAAQC,KAAZ,EAAd;AACD,KAV4C;;AAW7CC,IAAAA,OAAO,EAAE;AAEP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,GAAG,CAACC,OAAD,EAAU;AACXlB,QAAAA,EAAE,CAACO,IAAH,CAAQY,MAAR,CAAeC,cAAf,CAA8BF,OAA9B,EAAuClB,EAAE,CAACqB,EAAH,CAAMC,OAAN,CAAcC,QAAd,CAAuBC,OAA9D;AACA,aAAKC,QAAL,GAAgBC,IAAhB,CAAqBR,OAArB,EAFW,CAGX;;AACA,eAAO,IAAP;AACD,OAZM;;AAcP;AACJ;AACA;AACA;AACA;AACIS,MAAAA,UAAU,CAACC,MAAD,EAAQC,MAAR,EAAgB;AACxB,aAAKZ,GAAL,CAAS,IAAIjB,EAAE,CAACqB,EAAH,CAAMC,OAAN,CAAcC,QAAd,CAAuBO,OAA3B,CAAmCF,MAAnC,EAA2CC,MAA3C,CAAT;AACA,eAAO,IAAP;AACD,OAtBM;;AAwBP;AACJ;AACA;AACA;AACA;AACIE,MAAAA,eAAe,CAACH,MAAD,EAAQC,MAAR,EAAgB;AAC7B,aAAKZ,GAAL,CAAS,IAAIjB,EAAE,CAACqB,EAAH,CAAMC,OAAN,CAAcC,QAAd,CAAuBS,YAA3B,CAAwCJ,MAAxC,EAAgDC,MAAhD,CAAT;AACA,eAAO,IAAP;AACD,OAhCM;;AAkCP;AACJ;AACA;AACA;AACII,MAAAA,WAAW,GAAG;AACZ,eAAO,KAAKR,QAAL,GAAgBS,GAAhB,CAAoBhB,OAAO,IAAIA,OAAO,CAACiB,UAAR,EAA/B,CAAP;AACD,OAxCM;;AA0CP;AACJ;AACA;AACA;AACIC,MAAAA,QAAQ,GAAG;AACT,eAAO,KAAKX,QAAL,GAAgBY,OAAhB,GAA0BH,GAA1B,CAA8BhB,OAAO,IAAIA,OAAO,CAACkB,QAAR,EAAzC,CAAP;AACD,OAhDM;;AAkDP;AACJ;AACA;AACA;AACIE,MAAAA,QAAQ,GAAG;AACT,eAAOC,IAAI,CAACC,SAAL,CAAe,KAAKf,QAAL,GAAgBY,OAAhB,GAA0BH,GAA1B,CAA8BhB,OAAO,IAAIA,OAAO,CAACkB,QAAR,EAAzC,CAAf,CAAP;AACD;;AAxDM;AAXoC,GAA/C;AA3BApC,EAAAA,EAAE,CAACqB,EAAH,CAAMC,OAAN,CAAcC,QAAd,CAAuBkB,KAAvB,CAA6BtC,aAA7B,GAA6CA,aAA7C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n      2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * An object representing a JSON-RPC v2.0 batch message object. You can add\n * one or more of the following message objects to the batch:\n *  - {@link qx.io.jsonrpc.protocol.Request}\n *  - {@link qx.io.jsonrpc.protocol.Notification}\n *  - {@link qx.io.jsonrpc.protocol.Result}\n *  - {@link qx.io.jsonrpc.protocol.Error}\n *  @see https://www.jsonrpc.org/specification#batch\n */\nqx.Class.define(\"qx.io.jsonrpc.protocol.Batch\",{\n  extend: qx.core.Object,\n  properties: {\n    batch : {\n      check: \"qx.data.Array\"\n    }\n  },\n  construct() {\n    this.base(arguments);\n    this.setBatch(new qx.data.Array());\n  },\n  members: {\n\n    /**\n     * Adds a request or notification to the batch\n     * @param {qx.io.jsonrpc.protocol.Message} message\n     * @return {qx.io.jsonrpc.protocol.Batch}\n     */\n    add(message) {\n      qx.core.Assert.assertInstance(message, qx.io.jsonrpc.protocol.Message);\n      this.getBatch().push(message);\n      // return the instance for chaining\n      return this;\n    },\n\n    /**\n     * Adds a request to the batch\n     * @param method\n     * @param params\n     */\n    addRequest(method,params) {\n      this.add(new qx.io.jsonrpc.protocol.Request(method, params));\n      return this;\n    },\n\n    /**\n     * Adds a notification to the batch\n     * @param method\n     * @param params\n     */\n    addNotification(method,params) {\n      this.add(new qx.io.jsonrpc.protocol.Notification(method, params));\n      return this;\n    },\n\n    /**\n     * Returns an array of the promises of the requests in the batch\n     * @return {qx.Promise[]}\n     */\n    getPromises() {\n      return this.getBatch().map(message => message.getPromise());\n    },\n\n    /**\n     * Returns the message as a native object\n     * @return {*}\n     */\n    toObject() {\n      return this.getBatch().toArray().map(message => message.toObject());\n    },\n\n    /**\n     * Returns the message as a JSON string\n     * @return {String}\n     */\n    toString() {\n      return JSON.stringify(this.getBatch().toArray().map(message => message.toObject()));\n    }\n  }\n});\n"
  ]
}