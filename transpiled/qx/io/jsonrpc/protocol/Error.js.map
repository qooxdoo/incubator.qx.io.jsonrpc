{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/source/class/qx/io/jsonrpc/protocol/Error.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "jsonrpc",
    "protocol",
    "Message",
    "properties",
    "id",
    "check",
    "value",
    "lang",
    "Type",
    "isNumber",
    "parseInt",
    "error",
    "isObject",
    "construct",
    "code",
    "message",
    "data",
    "setId",
    "Error",
    "errorObj",
    "setError"
  ],
  "mappings": ";;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;;AAKAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,8BAAhB,EAA+C;AAC7CC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,OAAN,CAAcC,QAAd,CAAuBC,OADc;AAE7CC,IAAAA,UAAU,EAAE;AAEV;;;;AAIAC,MAAAA,EAAE,EAAG;AACHC,QAAAA,KAAK,EAAEC,KAAK,IAAId,EAAE,CAACe,IAAH,CAAQC,IAAR,CAAaC,QAAb,CAAsBH,KAAtB,KAAgCI,QAAQ,CAACJ,KAAD,EAAQ,EAAR,CAAR,KAAwBA;AADrE,OANK;;AAUV;;;;AAIAK,MAAAA,KAAK,EAAG;AACNN,QAAAA,KAAK,EAAGC,KAAK,IAAId,EAAE,CAACe,IAAH,CAAQC,IAAR,CAAaI,QAAb,CAAsBN,KAAtB,KAAgC,UAAUA,KAA1C,IAAmD,aAAaA;AAD3E;AAdE,KAFiC;;AAoB7C;;;;;;;AAOAO,IAAAA,SAAS,CAACT,EAAD,EAAKU,IAAL,EAAWC,OAAX,EAAoBC,IAApB,EAA0B;AACjC;AACA,WAAKC,KAAL,CAAWb,EAAX;;AACA,UAAI,CAACZ,EAAE,CAACe,IAAH,CAAQC,IAAR,CAAaC,QAAb,CAAsBK,IAAtB,CAAD,IAAgCJ,QAAQ,CAACI,IAAD,EAAO,EAAP,CAAR,KAAuBA,IAA3D,EAAkE;AAChE,cAAM,IAAII,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,UAAIC,QAAQ,GAAG;AAACL,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAf;;AACA,UAAIC,IAAJ,EAAU;AACRG,QAAAA,QAAQ,CAACH,IAAT,GAAgBA,IAAhB;AACD;;AACD,WAAKI,QAAL,CAAcD,QAAd;AACD;;AAtC4C,GAA/C;AAvBA3B,EAAAA,EAAE,CAACO,EAAH,CAAMC,OAAN,CAAcC,QAAd,CAAuBiB,KAAvB,CAA6BvB,aAA7B,GAA6CA,aAA7C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n      2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * A JSON-RPC v2.0 error message object, which is a response to a {@link qx.io.jsonrpc.protocol.Request},\n * indicating a failure during the processing of the request on the server.\n * @see https://www.jsonrpc.org/specification#error_object\n */\nqx.Class.define(\"qx.io.jsonrpc.protocol.Error\",{\n  extend: qx.io.jsonrpc.protocol.Message,\n  properties: {\n\n    /**\n     * The integer id of the request\n     * @var {Number}\n     */\n    id : {\n      check: value => qx.lang.Type.isNumber(value) && parseInt(value, 10) === value\n    },\n\n    /**\n     * The error object\n     * @var {Object}\n     */\n    error : {\n      check : value => qx.lang.Type.isObject(value) && \"code\" in value && \"message\" in value\n    }\n  },\n  /**\n   * The response messsage constructor\n   * @param {Number} id^\n   * @param {Number} code\n   * @param {String} message\n   * @param {*?} data\n   */\n  construct(id, code, message, data) {\n    this.base(arguments);\n    this.setId(id);\n    if (!qx.lang.Type.isNumber(code) || parseInt(code, 10) !== code ) {\n      throw new Error(\"Code must be an integer\");\n    }\n    let errorObj = {code, message};\n    if (data) {\n      errorObj.data = data;\n    }\n    this.setError(errorObj);\n  }\n});\n"
  ]
}