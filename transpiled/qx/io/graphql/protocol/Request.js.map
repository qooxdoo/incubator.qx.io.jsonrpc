{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/source/class/qx/io/graphql/protocol/Request.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "graphql",
    "protocol",
    "Message",
    "properties",
    "query",
    "check",
    "nullable",
    "init",
    "event",
    "variables",
    "transform",
    "validate",
    "members",
    "toString",
    "lang",
    "Json",
    "stringify",
    "toObject",
    "_jsonReplacer",
    "key",
    "value",
    "util",
    "Serializer",
    "toJson",
    "undefined",
    "_transformVariables",
    "val",
    "model",
    "includes",
    "data",
    "marshal",
    "createModel",
    "_validateVariables",
    "Type",
    "isObject",
    "core",
    "ValidationError",
    "Request"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,gCAAhB,EAAiD;AAC/CC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,OAAN,CAAcC,QAAd,CAAuBC,OADgB;AAE/CC,IAAAA,UAAU,EAAE;AAEV;AACJ;AACA;AACIC,MAAAA,KAAK,EAAG;AACNC,QAAAA,KAAK,EAAE,QADD;AAENC,QAAAA,QAAQ,EAAE,KAFJ;AAGNC,QAAAA,IAAI,EAAE,EAHA;AAINC,QAAAA,KAAK,EAAE;AAJD,OALE;;AAYV;AACJ;AACA;AACIC,MAAAA,SAAS,EAAG;AACVJ,QAAAA,KAAK,EAAE,gBADG;AAEVC,QAAAA,QAAQ,EAAE,IAFA;AAGVE,QAAAA,KAAK,EAAE,iBAHG;AAIVE,QAAAA,SAAS,EAAE,qBAJD;AAKVC,QAAAA,QAAQ,EAAE;AALA;AAfF,KAFmC;AA0B/CC,IAAAA,OAAO,EAAE;AACP;AACAC,MAAAA,QAAQ,GAAG;AACT,eAAOrB,EAAE,CAACsB,IAAH,CAAQC,IAAR,CAAaC,SAAb,CAAuB,KAAKC,QAAL,EAAvB,EAAwC,KAAKC,aAA7C,CAAP;AACD,OAJM;;AAMPA,MAAAA,aAAa,EAAE,uBAASC,GAAT,EAAcC,KAAd,EAAqB;AAClC;AACA;AACA,YAAID,GAAG,KAAK,WAAZ,EAAyB;AACvB,iBAAOC,KAAK,KAAK,IAAV,GAAiB5B,EAAE,CAAC6B,IAAH,CAAQC,UAAR,CAAmBC,MAAnB,CAA0BH,KAA1B,CAAjB,GAAoDI,SAA3D;AACD,SALiC,CAMlC;;;AACA,eAAOJ,KAAP;AACD,OAdM;;AAiBP;AACJ;AACA;AACA;AACIK,MAAAA,mBAAmB,EAAE,6BAASC,GAAT,EAAc;AACjC,YAAIC,KAAK,GAAG,IAAZ;;AACA,YAAI,CAAC,CAAC,IAAD,EAAOH,SAAP,EAAkBI,QAAlB,CAA2BF,GAA3B,CAAL,EAAsC;AACpCC,UAAAA,KAAK,GAAGnC,EAAE,CAACqC,IAAH,CAAQC,OAAR,CAAgBf,IAAhB,CAAqBgB,WAArB,CAAiCL,GAAjC,CAAR;AACD;;AACD,eAAOC,KAAP;AACD,OA3BM;AA6BPK,MAAAA,kBAAkB,EAAE,4BAASN,GAAT,EAAc;AAChC,YAAI,CAAClC,EAAE,CAACsB,IAAH,CAAQmB,IAAR,CAAaC,QAAb,CAAsBR,GAAtB,CAAD,IAAgCA,GAAG,KAAK,IAA5C,EAAmD;AACjD,gBAAM,IAAIlC,EAAE,CAAC2C,IAAH,CAAQC,eAAZ,CACJ,uBAAuBV,GAAvB,GAA6B,4BADzB,CAAN;AAGD;AACF;AAnCM;AA1BsC,GAAjD;AAtBAlC,EAAAA,EAAE,CAACO,EAAH,CAAMC,OAAN,CAAcC,QAAd,CAAuBoC,OAAvB,CAA+B1C,aAA/B,GAA+CA,aAA/C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n      2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * An Object modelling a GraphQL request based on the GraphQL language\n * (see http://spec.graphql.org/draft/#sec-Language)\n */\nqx.Class.define(\"qx.io.graphql.protocol.Request\",{\n  extend: qx.io.graphql.protocol.Message,\n  properties: {\n\n    /**\n     * The query as a string which will be parsed and executed on the server\n     */\n    query : {\n      check: \"String\",\n      nullable: false,\n      init: \"\",\n      event: \"changeQuery\"\n    },\n\n    /**\n     * A qooxdoo object that maps variable names to variable values\n     */\n    variables : {\n      check: \"qx.core.Object\",\n      nullable: true,\n      event: \"changeVariables\",\n      transform: \"_transformVariables\",\n      validate: \"_validateVariables\"\n    }\n  },\n\n  members: {\n    // overriden\n    toString() {\n      return qx.lang.Json.stringify(this.toObject(), this._jsonReplacer);\n    },\n\n    _jsonReplacer: function(key, value) {\n      // Special case. If the variables key is an object, return it's JSON\n      // representation, otherwise remove that key from the final JSON\n      if (key === \"variables\") {\n        return value !== null ? qx.util.Serializer.toJson(value) : undefined;\n      }\n      // everything else s returned as it is\n      return value;\n    },\n\n\n    /**\n     * Transforms the variables object to a qooxdoo model. Called automaticaly\n     * when the variables property is set.\n     */\n    _transformVariables: function(val) {\n      let model = null;\n      if (![null, undefined].includes(val)) {\n        model = qx.data.marshal.Json.createModel(val);\n      }\n      return model;\n    },\n\n    _validateVariables: function(val) {\n      if (!qx.lang.Type.isObject(val) && (val !== null)) {\n        throw new qx.core.ValidationError(\n          \"Validation Error: \" + val + \" is not an object or null.\"\n        );\n      }\n    }\n  }\n});\n"
  ]
}