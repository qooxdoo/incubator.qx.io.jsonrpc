{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/source/class/qx/io/graphql/protocol/Message.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "data",
    "set",
    "members",
    "toString",
    "util",
    "Serializer",
    "toJson",
    "toObject",
    "toNativeObject",
    "io",
    "graphql",
    "protocol",
    "Message"
  ],
  "mappings": ";;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;AAGAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,gCAAhB,EAAiD;AAC/CC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MAD+B;AAE/CC,IAAAA,SAAS,EAAE,mBAASC,IAAT,EAAe;AACxB;AACA,WAAKC,GAAL,CAASD,IAAT;AACD,KAL8C;AAM/CE,IAAAA,OAAO,EAAG;AACR;;;;AAIAC,MAAAA,QAAQ,GAAG;AACT,eAAOb,EAAE,CAACc,IAAH,CAAQC,UAAR,CAAmBC,MAAnB,CAA0B,IAA1B,CAAP;AACD,OAPO;;AASR;;;;AAIAC,MAAAA,QAAQ,GAAG;AACT,eAAOjB,EAAE,CAACc,IAAH,CAAQC,UAAR,CAAmBG,cAAnB,CAAkC,IAAlC,CAAP;AACD;;AAfO;AANqC,GAAjD;AArBAlB,EAAAA,EAAE,CAACmB,EAAH,CAAMC,OAAN,CAAcC,QAAd,CAAuBC,OAAvB,CAA+BnB,aAA/B,GAA+CA,aAA/C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n      2020 Christian Boulanger\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Christian Boulanger (cboulanger)\n\n************************************************************************ */\n\n/**\n * Abstract parent class for GraphQL messages and responses\n */\nqx.Class.define(\"qx.io.graphql.protocol.Message\",{\n  extend: qx.core.Object,\n  construct: function(data) {\n    this.base(arguments);\n    this.set(data);\n  },\n  members : {\n    /**\n     * Serialize to JSON string\n     * @return {String}\n     */\n    toString() {\n      return qx.util.Serializer.toJson(this);\n    },\n\n    /**\n     * Serialize to a native javascript object\n     * @return {Object}\n     */\n    toObject() {\n      return qx.util.Serializer.toNativeObject(this);\n    }\n  }\n});\n"
  ]
}