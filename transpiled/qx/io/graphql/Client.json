{
  "className": "qx.io.graphql.Client",
  "packageName": "qx.io.graphql",
  "name": "Client",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 131,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<pre><code>*****************************************************************\n</code></pre>\n<p>qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n      2020 Christian Boulanger\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n   Authors:\n Christian Boulanger (cboulanger)\n    <strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong><strong><em></em></em></strong><strong><em><em></em></strong></em>*</p>"
        },
        {
          "name": "@description",
          "body": "<p>This class provides a simple GraphQl client (https://graphql.org/).\n For transport, it is based on internally on the fetch API\n (https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch)\n which, if needed, must be directly configured via the <code>init</code> parameter of the\n constructor, until a more generalized qx.io API has been developed.</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 38,
        "column": 13
      },
      "end": {
        "line": 48,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "{String} url The url of the GraphQL endpoint",
          "paramName": "url",
          "description": "The url of the GraphQL endpoint",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "{object} init A map of configuration values, see\n https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\n This parameter is used to configure the underlying fetch\n API and might be removed in a future. If you provide custom headers, you must\n set \"Content-Type\" and \"Accept\" to \"application/json\" yourself.",
          "paramName": "init",
          "description": "A map of configuration values, see\n https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\n This parameter is used to configure the underlying fetch\n API and might be removed in a future. If you provide custom headers, you must\n set \"Content-Type\" and \"Accept\" to \"application/json\" yourself.",
          "type": "object"
        }
      ]
    }
  },
  "properties": {
    "url": {
      "location": {
        "start": {
          "line": 54,
          "column": 4
        },
        "end": {
          "line": 56,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The URL of the GraphQl endpoint</p>"
          }
        ]
      },
      "name": "url",
      "propertyType": "new",
      "check": "String"
    },
    "authentication": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Optional authentication object</p>"
          }
        ]
      },
      "name": "authentication",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "qx.io.request.authentication.IAuthentication"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "events": {
    "error": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 75,
          "column": 34
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event fired when a request results in an error. Event data is an instance of\n {@link qx.io.exception.Transport}, {@link qx.io.exception.Protocol},\n or {@link qx.io.exception.Cancel}.\n Event fired when a message is received from the endpoint. Event data\n is an UTF-8 encoded string</p>"
          }
        ]
      },
      "name": "error",
      "type": "qx.event.type.Data"
    }
  },
  "members": {
    "__init": {
      "location": {
        "start": {
          "line": 84,
          "column": 4
        },
        "end": {
          "line": 84,
          "column": 17
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stores the <code>init</code> parameter of the constructor</p>"
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Object}"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "send": {
      "location": {
        "start": {
          "line": 93,
          "column": 4
        },
        "end": {
          "line": 111,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Send the given GraphQl query. See https://graphql.org/learn/queries/</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{qx.io.graphql.protocol.Request} request The GraphQl request object.",
            "paramName": "request",
            "description": "The GraphQl request object.",
            "type": "qx.io.graphql.protocol.Request"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.Promise} Promise that resolves with the data",
            "type": "qx.Promise",
            "description": " Promise that resolves with the data"
          }
        ],
        "@ignore": [
          {
            "name": "@ignore",
            "body": "fetch"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_handleErrors": {
      "location": {
        "start": {
          "line": 122,
          "column": 4
        },
        "end": {
          "line": 129,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handle the errors reported by the GraphQL endpoint. The response\n can contain several errors, but we can only throw one of them.\n However, we can fire an event for each error, which might be useful\n if they are to be logged. The errors that are thrown or fired as\n event data contain the original response object in the <code>data</code> property</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "{qx.io.graphql.protocol.Response} response The response object",
            "paramName": "response",
            "description": "The response object",
            "type": "qx.io.graphql.protocol.Response"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getUrl": {
      "type": "function",
      "name": "getUrl",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>url</code>.\n\nFor further details take a look at the property definition: {@link #url}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for url"
          }
        ]
      }
    },
    "setUrl": {
      "type": "function",
      "name": "setUrl",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>url</code>.\n\nFor further details take a look at the property definition: {@link #url}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for url"
          }
        ]
      }
    },
    "resetUrl": {
      "type": "function",
      "name": "resetUrl",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>url</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #url}."
          }
        ]
      }
    },
    "getAuthentication": {
      "type": "function",
      "name": "getAuthentication",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>authentication</code>.\n\nFor further details take a look at the property definition: {@link #authentication}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.io.request.authentication.IAuthentication",
            "desc": "Returns the value for authentication"
          }
        ]
      }
    },
    "setAuthentication": {
      "type": "function",
      "name": "setAuthentication",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>authentication</code>.\n\nFor further details take a look at the property definition: {@link #authentication}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.io.request.authentication.IAuthentication",
            "paramName": "value",
            "desc": "Value for authentication"
          }
        ]
      }
    },
    "resetAuthentication": {
      "type": "function",
      "name": "resetAuthentication",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>authentication</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #authentication}."
          }
        ]
      }
    }
  },
  "descendants": []
}