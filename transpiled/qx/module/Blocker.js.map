{
  "version": 3,
  "sources": [
    "/home/runner/work/incubator.qx.io.jsonrpc/incubator.qx.io.jsonrpc/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/module/Blocker.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__attachBlocker",
    "item",
    "color",
    "opacity",
    "zIndex",
    "win",
    "qxWeb",
    "getWindow",
    "isDocument",
    "isElement",
    "__blocker",
    "div",
    "create",
    "insertBefore",
    "document",
    "body",
    "getChildren",
    "appendTo",
    "module",
    "Blocker",
    "__styleBlocker",
    "qItem",
    "styles",
    "backgroundColor",
    "env",
    "get",
    "top",
    "left",
    "position",
    "width",
    "height",
    "pos",
    "getOffset",
    "getWidth",
    "getHeight",
    "setStyles",
    "__detachBlocker",
    "index",
    "remove",
    "__getBlocker",
    "collection",
    "blockerElements",
    "forEach",
    "concat",
    "members",
    "block",
    "unblock",
    "getBlocker",
    "defer",
    "$attachAll"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Provides a way to block elements so they will no longer receive (native)\n * events by overlaying them with a DIV element.\n *\n * @require(qx.module.Environment)\n * @require(qx.module.Manipulating)\n * @require(qx.module.Traversing)\n * @require(qx.module.Css)\n * @require(qx.module.Attribute)\n */\nqx.Bootstrap.define(\"qx.module.Blocker\", {\n  statics :\n  {\n    /**\n     * Attaches a blocker div to the given element.\n     *\n     * @param item {Element|Document} The element to be overlaid with the blocker\n     * @param color {String} The color for the blocker element (any CSS color value)\n     * @param opacity {Number} The CSS opacity value for the blocker\n     * @param zIndex {Number} The zIndex value for the blocker\n     */\n    __attachBlocker : function(item, color, opacity, zIndex)\n    {\n      var win = qxWeb.getWindow(item);\n      var isDocument = qxWeb.isDocument(item);\n\n      if (!isDocument && !qxWeb.isElement(item)) {\n        return;\n      }\n\n      if (!item.__blocker) {\n        item.__blocker = {\n          div : qxWeb.create(\"<div class='qx-blocker' />\")\n        };\n      }\n\n      if (isDocument) {\n        item.__blocker.div.insertBefore(qxWeb(win.document.body).getChildren(':first'));\n      } else {\n        item.__blocker.div.appendTo(win.document.body);\n      }\n\n      qx.module.Blocker.__styleBlocker(item, color, opacity, zIndex, isDocument);\n    },\n\n\n    /**\n     * Styles the blocker element(s)\n     *\n     * @param item {Element|Document} The element to be overlaid with the blocker\n     * @param color {String} The color for the blocker element (any CSS color value)\n     * @param opacity {Number} The CSS opacity value for the blocker\n     * @param zIndex {Number} The zIndex value for the blocker\n     * @param isDocument {Boolean} Whether the item is a document node\n     */\n    __styleBlocker : function(item, color, opacity, zIndex, isDocument)\n    {\n      var qItem = qxWeb(item);\n\n      var styles = {\n        \"display\" : \"block\"\n      };\n\n      styles.backgroundColor = typeof color !== 'undefined' ? color : null;\n      styles.zIndex =  typeof zIndex !== 'undefined' ? zIndex : null;\n\n      if (qxWeb.env.get(\"browser.name\") === \"ie\" && qxWeb.env.get(\"browser.version\") <= 8) {\n        styles.opacity = typeof opacity !== 'undefined' ? opacity : 0;\n      } else {\n        styles.opacity = typeof opacity !== 'undefined' ? opacity : null;\n      }\n\n      if (isDocument) {\n        styles.top = 0 + \"px\";\n        styles.left = 0 + \"px\";\n        styles.position = \"fixed\";\n        styles.width = \"100%\";\n        styles.height = \"100%\";\n      }\n      else {\n        var pos = qItem.getOffset();\n        styles.top = pos.top + \"px\";\n        styles.left = pos.left + \"px\";\n        styles.position = \"absolute\";\n        styles.width = qItem.getWidth() + \"px\";\n        styles.height = qItem.getHeight() + \"px\";\n      }\n      item.__blocker.div.setStyles(styles);\n    },\n\n\n    /**\n     * Removes the given item's blocker element(s) from the DOM\n     *\n     * @param item {Element} Blocked element\n     * @param index {Number} index of the item in the collection\n     */\n    __detachBlocker : function(item, index)\n    {\n      if (!item.__blocker) {\n        return;\n      }\n      item.__blocker.div.remove();\n    },\n\n\n    /**\n     * Returns the blocker elements as collection\n     *\n     * @param collection {qxWeb} Collection to get the blocker elements from\n     * @return {qxWeb} collection of blocker elements\n     */\n    __getBlocker : function(collection)\n    {\n      var blockerElements = qxWeb();\n\n      collection.forEach(function(item, index) {\n        if (typeof item.__blocker !== \"undefined\") {\n          blockerElements = blockerElements.concat(item.__blocker.div);\n        }\n      });\n\n      return blockerElements;\n    }\n  },\n\n  members :\n  {\n\n\n    /**\n     * Adds an overlay to all items in the collection that intercepts mouse\n     * events.\n     *\n     * @attach {qxWeb}\n     * @param color {String ? transparent} The color for the blocker element (any CSS color value)\n     * @param opacity {Number ? 0} The CSS opacity value for the blocker (floating point number from 0 to 1)\n     * @param zIndex {Number ? 10000} The zIndex value for the blocker\n     * @return {qxWeb} The collection for chaining\n     */\n    block : function(color, opacity, zIndex)\n    {\n      if (!this[0]) {\n        return this;\n      }\n\n      this.forEach(function(item, index) {\n        qx.module.Blocker.__attachBlocker(item, color, opacity, zIndex);\n      });\n\n      return this;\n    },\n\n\n    /**\n     * Removes the blockers from all items in the collection\n     *\n     * @attach {qxWeb}\n     * @return {qxWeb} The collection for chaining\n     */\n    unblock : function()\n    {\n      if (!this[0]) {\n        return this;\n      }\n\n      this.forEach(qx.module.Blocker.__detachBlocker);\n\n      return this;\n    },\n\n\n    /**\n     * Returns all blocker elements as collection.\n     *\n     * <strong>Note:</strong> This will only return elements if\n     * the <code>block</code> method was called at least once,\n     * since the blocker elements are created on-demand.\n     *\n     * @attach {qxWeb}\n     * @return {qxWeb} collection with all blocker elements\n     */\n    getBlocker : function()\n    {\n      if (!this[0]) {\n        return this;\n      }\n\n      var collection = qx.module.Blocker.__getBlocker(this);\n      return collection;\n    }\n  },\n\n\n  defer : function(statics)\n  {\n    qxWeb.$attachAll(this);\n  }\n});\n"
  ]
}