{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/incubator.qx.io.jsonrpc/qx_packages/qooxdoo_qxl_testtapper_v0_5_0/source/class/qxl/testtapper/TreeItem.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "tree",
    "VirtualTreeItem",
    "properties",
    "numberFailed",
    "check",
    "event",
    "init",
    "numberPassed",
    "testClass",
    "testName",
    "message",
    "members",
    "_addWidgets",
    "addWidget",
    "core",
    "Spacer",
    "flex",
    "passedContainer",
    "container",
    "Composite",
    "layout",
    "HBox",
    "set",
    "width",
    "passedIcon",
    "basic",
    "Image",
    "passedLabel",
    "Label",
    "bind",
    "add",
    "converter",
    "v",
    "failedContainer",
    "failedIcon",
    "failedLabel",
    "text",
    "setWidth",
    "qxl",
    "testtapper",
    "TreeItem"
  ],
  "mappings": "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",
  "sourcesContent": [
    "qx.Class.define(\"qxl.testtapper.TreeItem\", {\n  extend: qx.ui.tree.VirtualTreeItem,\n  properties: {\n    numberFailed: {\n      check: \"Number\",\n      event: \"changeNumberFailed\",\n      init: \"0\"\n    },\n    numberPassed: {\n      check: \"Number\",\n      event: \"changeNumberPassed\",\n      init: 0\n    },\n    testClass: {\n      check: \"String\", event: \"changeTestClass\", init: \"\"\n    },\n    testName: {\n      check: \"String\", event: \"changeTestName\", init: \"\"\n    },\n    message: {\n      check: \"String\", event: \"changeMessage\", init: \"\"\n    }\n  },\n  members: {\n    _addWidgets: function () {\n      this.base(arguments);\n\n      this.addWidget(new qx.ui.core.Spacer(), {flex: 1});\n\n      // number of passed tests\n      let passedContainer = new qx.ui.container.Composite(new qx.ui.layout.HBox()).set({width: 60});\n      let passedIcon = new qx.ui.basic.Image(\"qx/icon/Oxygen/16/actions/dialog-ok.png\").set({width:20});\n\n      let passedLabel = new qx.ui.basic.Label();\n      this.bind(\"numberPassed\", passedLabel, \"value\");\n      passedContainer.add(passedIcon);\n      passedContainer.add(passedLabel);\n      this.bind(\"numberPassed\", passedContainer, \"visibility\", {\n        converter: v => v > 0 ? \"visible\" : \"hidden\"\n      });\n      this.addWidget(passedContainer);\n\n      // number of failed tests\n      let failedContainer = new qx.ui.container.Composite(new qx.ui.layout.HBox()).set({width: 60});\n      let failedIcon = new qx.ui.basic.Image(\"qx/icon/Oxygen/16/actions/dialog-cancel.png\").set({width:20});\n      let failedLabel = new qx.ui.basic.Label();\n      this.bind(\"numberFailed\", failedLabel, \"value\");\n      failedContainer.add(failedIcon);\n      failedContainer.add(failedLabel);\n      this.bind(\"numberFailed\", failedContainer, \"visibility\", {\n        converter: v => v > 0 ? \"visible\" : \"hidden\"\n      });\n      this.addWidget(failedContainer);\n\n      // message\n      var text = new qx.ui.basic.Label();\n      this.bind(\"message\", text, \"value\");\n      text.setWidth(300);\n      this.addWidget(text);\n    }\n  }\n});\n"
  ]
}